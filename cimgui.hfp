//This file is automatically generated by generator.lua from https://github.com/cimgui/cimgui
//based on imgui.h file version "1.89" from Dear ImGui https://github.com/ocornut/imgui
//with imgui_internal.h api
//docking branch
#ifndef CIMGUI_INCLUDED
#define CIMGUI_INCLUDED
#define CIMGUI_DEFINE_ENUMS_AND_STRUCTS
#if defined __cplusplus
#define FEXTERN extern "C"
#else
#define FEXTERN extern
#endif
#ifdef __TINYC__
#define FAPI  FEXTERN IMPORT
#else
#define FAPI  FEXTERN
#endif
#ifdef NO_FPTR
#define TYPE FEXTERN
#define f(func) func
#else
#define TYPE typedef
#define f(func) (*func##_fptr)
#endif
#define g(func) func=(func##_fptr)func_load(#func, user_data);
#define i(func) func##_fptr func = 0;
#define d(func) FAPI func##_fptr func;
#define s(func) tcc_add_symbol(s, #func, func);
#include <stdio.h>
#include <stdint.h>
#if defined _WIN32 || defined __CYGWIN__
    #ifdef CIMGUI_NO_EXPORT
        #define API
    #else
        #define API __declspec(dllexport) __attribute__((cdecl))
    #endif
#else
    #ifdef __GNUC__
        #define API  __attribute__((__visibility__("default")))
    #else
        #define API
    #endif
#endif
#if defined __cplusplus
    #define EXTERN extern "C"
#else
    #include <stdarg.h>
    #include <stdbool.h>
    #define EXTERN extern
#endif
#define CIMGUI_API EXTERN API
#define CONST const
#ifdef _MSC_VER
typedef unsigned __int64 ImU64;
#else
//typedef unsigned long long ImU64;
#endif
#ifdef CIMGUI_DEFINE_ENUMS_AND_STRUCTS
typedef struct ImDrawChannel ImDrawChannel;
typedef struct ImDrawCmd ImDrawCmd;
typedef struct ImDrawData ImDrawData;
typedef struct ImDrawList ImDrawList;
typedef struct ImDrawListSharedData ImDrawListSharedData;
typedef struct ImDrawListSplitter ImDrawListSplitter;
typedef struct ImDrawVert ImDrawVert;
typedef struct ImFont ImFont;
typedef struct ImFontAtlas ImFontAtlas;
typedef struct ImFontBuilderIO ImFontBuilderIO;
typedef struct ImFontConfig ImFontConfig;
typedef struct ImFontGlyph ImFontGlyph;
typedef struct ImFontGlyphRangesBuilder ImFontGlyphRangesBuilder;
typedef struct ImColor ImColor;
typedef struct ImGuiContext ImGuiContext;
typedef struct ImGuiIO ImGuiIO;
typedef struct ImGuiInputTextCallbackData ImGuiInputTextCallbackData;
typedef struct ImGuiKeyData ImGuiKeyData;
typedef struct ImGuiListClipper ImGuiListClipper;
typedef struct ImGuiOnceUponAFrame ImGuiOnceUponAFrame;
typedef struct ImGuiPayload ImGuiPayload;
typedef struct ImGuiPlatformIO ImGuiPlatformIO;
typedef struct ImGuiPlatformMonitor ImGuiPlatformMonitor;
typedef struct ImGuiPlatformImeData ImGuiPlatformImeData;
typedef struct ImGuiSizeCallbackData ImGuiSizeCallbackData;
typedef struct ImGuiStorage ImGuiStorage;
typedef struct ImGuiStyle ImGuiStyle;
typedef struct ImGuiTableSortSpecs ImGuiTableSortSpecs;
typedef struct ImGuiTableColumnSortSpecs ImGuiTableColumnSortSpecs;
typedef struct ImGuiTextBuffer ImGuiTextBuffer;
typedef struct ImGuiTextFilter ImGuiTextFilter;
typedef struct ImGuiViewport ImGuiViewport;
typedef struct ImGuiWindowClass ImGuiWindowClass;
typedef struct ImBitVector ImBitVector;
typedef struct ImRect ImRect;
typedef struct ImDrawDataBuilder ImDrawDataBuilder;
typedef struct ImGuiColorMod ImGuiColorMod;
typedef struct ImGuiContextHook ImGuiContextHook;
typedef struct ImGuiDataTypeInfo ImGuiDataTypeInfo;
typedef struct ImGuiDockContext ImGuiDockContext;
typedef struct ImGuiDockRequest ImGuiDockRequest;
typedef struct ImGuiDockNode ImGuiDockNode;
typedef struct ImGuiDockNodeSettings ImGuiDockNodeSettings;
typedef struct ImGuiGroupData ImGuiGroupData;
typedef struct ImGuiInputTextState ImGuiInputTextState;
typedef struct ImGuiLastItemData ImGuiLastItemData;
typedef struct ImGuiMenuColumns ImGuiMenuColumns;
typedef struct ImGuiNavItemData ImGuiNavItemData;
typedef struct ImGuiMetricsConfig ImGuiMetricsConfig;
typedef struct ImGuiNextWindowData ImGuiNextWindowData;
typedef struct ImGuiNextItemData ImGuiNextItemData;
typedef struct ImGuiOldColumnData ImGuiOldColumnData;
typedef struct ImGuiOldColumns ImGuiOldColumns;
typedef struct ImGuiPopupData ImGuiPopupData;
typedef struct ImGuiSettingsHandler ImGuiSettingsHandler;
typedef struct ImGuiStackSizes ImGuiStackSizes;
typedef struct ImGuiStyleMod ImGuiStyleMod;
typedef struct ImGuiTabBar ImGuiTabBar;
typedef struct ImGuiTabItem ImGuiTabItem;
typedef struct ImGuiTable ImGuiTable;
typedef struct ImGuiTableColumn ImGuiTableColumn;
typedef struct ImGuiTableInstanceData ImGuiTableInstanceData;
typedef struct ImGuiTableTempData ImGuiTableTempData;
typedef struct ImGuiTableSettings ImGuiTableSettings;
typedef struct ImGuiTableColumnsSettings ImGuiTableColumnsSettings;
typedef struct ImGuiWindow ImGuiWindow;
typedef struct ImGuiWindowTempData ImGuiWindowTempData;
typedef struct ImGuiWindowSettings ImGuiWindowSettings;
typedef struct ImVector_const_charPtr {int Size;int Capacity;const char** Data;} ImVector_const_charPtr;
struct ImDrawChannel;
struct ImDrawCmd;
struct ImDrawData;
struct ImDrawList;
struct ImDrawListSharedData;
struct ImDrawListSplitter;
struct ImDrawVert;
struct ImFont;
struct ImFontAtlas;
struct ImFontBuilderIO;
struct ImFontConfig;
struct ImFontGlyph;
struct ImFontGlyphRangesBuilder;
struct ImColor;
struct ImGuiContext;
struct ImGuiIO;
struct ImGuiInputTextCallbackData;
struct ImGuiKeyData;
struct ImGuiListClipper;
struct ImGuiOnceUponAFrame;
struct ImGuiPayload;
struct ImGuiPlatformIO;
struct ImGuiPlatformMonitor;
struct ImGuiPlatformImeData;
struct ImGuiSizeCallbackData;
struct ImGuiStorage;
struct ImGuiStyle;
struct ImGuiTableSortSpecs;
struct ImGuiTableColumnSortSpecs;
struct ImGuiTextBuffer;
struct ImGuiTextFilter;
struct ImGuiViewport;
struct ImGuiWindowClass;
typedef int ImGuiCol;
typedef int ImGuiCond;
typedef int ImGuiDataType;
typedef int ImGuiDir;
typedef int ImGuiMouseButton;
typedef int ImGuiMouseCursor;
typedef int ImGuiSortDirection;
typedef int ImGuiStyleVar;
typedef int ImGuiTableBgTarget;
typedef int ImDrawFlags;
typedef int ImDrawListFlags;
typedef int ImFontAtlasFlags;
typedef int ImGuiBackendFlags;
typedef int ImGuiButtonFlags;
typedef int ImGuiColorEditFlags;
typedef int ImGuiConfigFlags;
typedef int ImGuiComboFlags;
typedef int ImGuiDockNodeFlags;
typedef int ImGuiDragDropFlags;
typedef int ImGuiFocusedFlags;
typedef int ImGuiHoveredFlags;
typedef int ImGuiInputTextFlags;
typedef int ImGuiKeyChord;
typedef int ImGuiPopupFlags;
typedef int ImGuiSelectableFlags;
typedef int ImGuiSliderFlags;
typedef int ImGuiTabBarFlags;
typedef int ImGuiTabItemFlags;
typedef int ImGuiTableFlags;
typedef int ImGuiTableColumnFlags;
typedef int ImGuiTableRowFlags;
typedef int ImGuiTreeNodeFlags;
typedef int ImGuiViewportFlags;
typedef int ImGuiWindowFlags;
typedef void* ImTextureID;
typedef unsigned short ImDrawIdx;
typedef unsigned int ImGuiID;
typedef signed char ImS8;
typedef unsigned char ImU8;
typedef signed short ImS16;
typedef unsigned short ImU16;
typedef signed int ImS32;
typedef unsigned int ImU32;
typedef signed long long ImS64;
typedef unsigned long long ImU64;
typedef unsigned short ImWchar16;
typedef unsigned int ImWchar32;
typedef ImWchar16 ImWchar;
typedef int (*ImGuiInputTextCallback)(ImGuiInputTextCallbackData* data);
typedef void (*ImGuiSizeCallback)(ImGuiSizeCallbackData* data);
typedef void* (*ImGuiMemAllocFunc)(size_t sz, void* user_data);
typedef void (*ImGuiMemFreeFunc)(void* ptr, void* user_data);
typedef struct ImVec2 ImVec2;
struct ImVec2
{
    float x, y;
};
typedef struct ImVec4 ImVec4;
struct ImVec4
{
    float x, y, z, w;
};
typedef enum {
    ImGuiWindowFlags_None = 0,
    ImGuiWindowFlags_NoTitleBar = 1 << 0,
    ImGuiWindowFlags_NoResize = 1 << 1,
    ImGuiWindowFlags_NoMove = 1 << 2,
    ImGuiWindowFlags_NoScrollbar = 1 << 3,
    ImGuiWindowFlags_NoScrollWithMouse = 1 << 4,
    ImGuiWindowFlags_NoCollapse = 1 << 5,
    ImGuiWindowFlags_AlwaysAutoResize = 1 << 6,
    ImGuiWindowFlags_NoBackground = 1 << 7,
    ImGuiWindowFlags_NoSavedSettings = 1 << 8,
    ImGuiWindowFlags_NoMouseInputs = 1 << 9,
    ImGuiWindowFlags_MenuBar = 1 << 10,
    ImGuiWindowFlags_HorizontalScrollbar = 1 << 11,
    ImGuiWindowFlags_NoFocusOnAppearing = 1 << 12,
    ImGuiWindowFlags_NoBringToFrontOnFocus = 1 << 13,
    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,
    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,
    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,
    ImGuiWindowFlags_NoNavInputs = 1 << 18,
    ImGuiWindowFlags_NoNavFocus = 1 << 19,
    ImGuiWindowFlags_UnsavedDocument = 1 << 20,
    ImGuiWindowFlags_NoDocking = 1 << 21,
    ImGuiWindowFlags_NoNav = ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,
    ImGuiWindowFlags_NoDecoration = ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_NoScrollbar | ImGuiWindowFlags_NoCollapse,
    ImGuiWindowFlags_NoInputs = ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,
    ImGuiWindowFlags_NavFlattened = 1 << 23,
    ImGuiWindowFlags_ChildWindow = 1 << 24,
    ImGuiWindowFlags_Tooltip = 1 << 25,
    ImGuiWindowFlags_Popup = 1 << 26,
    ImGuiWindowFlags_Modal = 1 << 27,
    ImGuiWindowFlags_ChildMenu = 1 << 28,
    ImGuiWindowFlags_DockNodeHost = 1 << 29,
}ImGuiWindowFlags_;
typedef enum {
    ImGuiInputTextFlags_None = 0,
    ImGuiInputTextFlags_CharsDecimal = 1 << 0,
    ImGuiInputTextFlags_CharsHexadecimal = 1 << 1,
    ImGuiInputTextFlags_CharsUppercase = 1 << 2,
    ImGuiInputTextFlags_CharsNoBlank = 1 << 3,
    ImGuiInputTextFlags_AutoSelectAll = 1 << 4,
    ImGuiInputTextFlags_EnterReturnsTrue = 1 << 5,
    ImGuiInputTextFlags_CallbackCompletion = 1 << 6,
    ImGuiInputTextFlags_CallbackHistory = 1 << 7,
    ImGuiInputTextFlags_CallbackAlways = 1 << 8,
    ImGuiInputTextFlags_CallbackCharFilter = 1 << 9,
    ImGuiInputTextFlags_AllowTabInput = 1 << 10,
    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,
    ImGuiInputTextFlags_NoHorizontalScroll = 1 << 12,
    ImGuiInputTextFlags_AlwaysOverwrite = 1 << 13,
    ImGuiInputTextFlags_ReadOnly = 1 << 14,
    ImGuiInputTextFlags_Password = 1 << 15,
    ImGuiInputTextFlags_NoUndoRedo = 1 << 16,
    ImGuiInputTextFlags_CharsScientific = 1 << 17,
    ImGuiInputTextFlags_CallbackResize = 1 << 18,
    ImGuiInputTextFlags_CallbackEdit = 1 << 19,
    ImGuiInputTextFlags_EscapeClearsAll = 1 << 20,
}ImGuiInputTextFlags_;
typedef enum {
    ImGuiTreeNodeFlags_None = 0,
    ImGuiTreeNodeFlags_Selected = 1 << 0,
    ImGuiTreeNodeFlags_Framed = 1 << 1,
    ImGuiTreeNodeFlags_AllowItemOverlap = 1 << 2,
    ImGuiTreeNodeFlags_NoTreePushOnOpen = 1 << 3,
    ImGuiTreeNodeFlags_NoAutoOpenOnLog = 1 << 4,
    ImGuiTreeNodeFlags_DefaultOpen = 1 << 5,
    ImGuiTreeNodeFlags_OpenOnDoubleClick = 1 << 6,
    ImGuiTreeNodeFlags_OpenOnArrow = 1 << 7,
    ImGuiTreeNodeFlags_Leaf = 1 << 8,
    ImGuiTreeNodeFlags_Bullet = 1 << 9,
    ImGuiTreeNodeFlags_FramePadding = 1 << 10,
    ImGuiTreeNodeFlags_SpanAvailWidth = 1 << 11,
    ImGuiTreeNodeFlags_SpanFullWidth = 1 << 12,
    ImGuiTreeNodeFlags_NavLeftJumpsBackHere = 1 << 13,
    ImGuiTreeNodeFlags_CollapsingHeader = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoTreePushOnOpen | ImGuiTreeNodeFlags_NoAutoOpenOnLog,
}ImGuiTreeNodeFlags_;
typedef enum {
    ImGuiPopupFlags_None = 0,
    ImGuiPopupFlags_MouseButtonLeft = 0,
    ImGuiPopupFlags_MouseButtonRight = 1,
    ImGuiPopupFlags_MouseButtonMiddle = 2,
    ImGuiPopupFlags_MouseButtonMask_ = 0x1F,
    ImGuiPopupFlags_MouseButtonDefault_ = 1,
    ImGuiPopupFlags_NoOpenOverExistingPopup = 1 << 5,
    ImGuiPopupFlags_NoOpenOverItems = 1 << 6,
    ImGuiPopupFlags_AnyPopupId = 1 << 7,
    ImGuiPopupFlags_AnyPopupLevel = 1 << 8,
    ImGuiPopupFlags_AnyPopup = ImGuiPopupFlags_AnyPopupId | ImGuiPopupFlags_AnyPopupLevel,
}ImGuiPopupFlags_;
typedef enum {
    ImGuiSelectableFlags_None = 0,
    ImGuiSelectableFlags_DontClosePopups = 1 << 0,
    ImGuiSelectableFlags_SpanAllColumns = 1 << 1,
    ImGuiSelectableFlags_AllowDoubleClick = 1 << 2,
    ImGuiSelectableFlags_Disabled = 1 << 3,
    ImGuiSelectableFlags_AllowItemOverlap = 1 << 4,
}ImGuiSelectableFlags_;
typedef enum {
    ImGuiComboFlags_None = 0,
    ImGuiComboFlags_PopupAlignLeft = 1 << 0,
    ImGuiComboFlags_HeightSmall = 1 << 1,
    ImGuiComboFlags_HeightRegular = 1 << 2,
    ImGuiComboFlags_HeightLarge = 1 << 3,
    ImGuiComboFlags_HeightLargest = 1 << 4,
    ImGuiComboFlags_NoArrowButton = 1 << 5,
    ImGuiComboFlags_NoPreview = 1 << 6,
    ImGuiComboFlags_HeightMask_ = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeightRegular | ImGuiComboFlags_HeightLarge | ImGuiComboFlags_HeightLargest,
}ImGuiComboFlags_;
typedef enum {
    ImGuiTabBarFlags_None = 0,
    ImGuiTabBarFlags_Reorderable = 1 << 0,
    ImGuiTabBarFlags_AutoSelectNewTabs = 1 << 1,
    ImGuiTabBarFlags_TabListPopupButton = 1 << 2,
    ImGuiTabBarFlags_NoCloseWithMiddleMouseButton = 1 << 3,
    ImGuiTabBarFlags_NoTabListScrollingButtons = 1 << 4,
    ImGuiTabBarFlags_NoTooltip = 1 << 5,
    ImGuiTabBarFlags_FittingPolicyResizeDown = 1 << 6,
    ImGuiTabBarFlags_FittingPolicyScroll = 1 << 7,
    ImGuiTabBarFlags_FittingPolicyMask_ = ImGuiTabBarFlags_FittingPolicyResizeDown | ImGuiTabBarFlags_FittingPolicyScroll,
    ImGuiTabBarFlags_FittingPolicyDefault_ = ImGuiTabBarFlags_FittingPolicyResizeDown,
}ImGuiTabBarFlags_;
typedef enum {
    ImGuiTabItemFlags_None = 0,
    ImGuiTabItemFlags_UnsavedDocument = 1 << 0,
    ImGuiTabItemFlags_SetSelected = 1 << 1,
    ImGuiTabItemFlags_NoCloseWithMiddleMouseButton = 1 << 2,
    ImGuiTabItemFlags_NoPushId = 1 << 3,
    ImGuiTabItemFlags_NoTooltip = 1 << 4,
    ImGuiTabItemFlags_NoReorder = 1 << 5,
    ImGuiTabItemFlags_Leading = 1 << 6,
    ImGuiTabItemFlags_Trailing = 1 << 7,
}ImGuiTabItemFlags_;
typedef enum {
    ImGuiTableFlags_None = 0,
    ImGuiTableFlags_Resizable = 1 << 0,
    ImGuiTableFlags_Reorderable = 1 << 1,
    ImGuiTableFlags_Hideable = 1 << 2,
    ImGuiTableFlags_Sortable = 1 << 3,
    ImGuiTableFlags_NoSavedSettings = 1 << 4,
    ImGuiTableFlags_ContextMenuInBody = 1 << 5,
    ImGuiTableFlags_RowBg = 1 << 6,
    ImGuiTableFlags_BordersInnerH = 1 << 7,
    ImGuiTableFlags_BordersOuterH = 1 << 8,
    ImGuiTableFlags_BordersInnerV = 1 << 9,
    ImGuiTableFlags_BordersOuterV = 1 << 10,
    ImGuiTableFlags_BordersH = ImGuiTableFlags_BordersInnerH | ImGuiTableFlags_BordersOuterH,
    ImGuiTableFlags_BordersV = ImGuiTableFlags_BordersInnerV | ImGuiTableFlags_BordersOuterV,
    ImGuiTableFlags_BordersInner = ImGuiTableFlags_BordersInnerV | ImGuiTableFlags_BordersInnerH,
    ImGuiTableFlags_BordersOuter = ImGuiTableFlags_BordersOuterV | ImGuiTableFlags_BordersOuterH,
    ImGuiTableFlags_Borders = ImGuiTableFlags_BordersInner | ImGuiTableFlags_BordersOuter,
    ImGuiTableFlags_NoBordersInBody = 1 << 11,
    ImGuiTableFlags_NoBordersInBodyUntilResize = 1 << 12,
    ImGuiTableFlags_SizingFixedFit = 1 << 13,
    ImGuiTableFlags_SizingFixedSame = 2 << 13,
    ImGuiTableFlags_SizingStretchProp = 3 << 13,
    ImGuiTableFlags_SizingStretchSame = 4 << 13,
    ImGuiTableFlags_NoHostExtendX = 1 << 16,
    ImGuiTableFlags_NoHostExtendY = 1 << 17,
    ImGuiTableFlags_NoKeepColumnsVisible = 1 << 18,
    ImGuiTableFlags_PreciseWidths = 1 << 19,
    ImGuiTableFlags_NoClip = 1 << 20,
    ImGuiTableFlags_PadOuterX = 1 << 21,
    ImGuiTableFlags_NoPadOuterX = 1 << 22,
    ImGuiTableFlags_NoPadInnerX = 1 << 23,
    ImGuiTableFlags_ScrollX = 1 << 24,
    ImGuiTableFlags_ScrollY = 1 << 25,
    ImGuiTableFlags_SortMulti = 1 << 26,
    ImGuiTableFlags_SortTristate = 1 << 27,
    ImGuiTableFlags_SizingMask_ = ImGuiTableFlags_SizingFixedFit | ImGuiTableFlags_SizingFixedSame | ImGuiTableFlags_SizingStretchProp | ImGuiTableFlags_SizingStretchSame,
}ImGuiTableFlags_;
typedef enum {
    ImGuiTableColumnFlags_None = 0,
    ImGuiTableColumnFlags_Disabled = 1 << 0,
    ImGuiTableColumnFlags_DefaultHide = 1 << 1,
    ImGuiTableColumnFlags_DefaultSort = 1 << 2,
    ImGuiTableColumnFlags_WidthStretch = 1 << 3,
    ImGuiTableColumnFlags_WidthFixed = 1 << 4,
    ImGuiTableColumnFlags_NoResize = 1 << 5,
    ImGuiTableColumnFlags_NoReorder = 1 << 6,
    ImGuiTableColumnFlags_NoHide = 1 << 7,
    ImGuiTableColumnFlags_NoClip = 1 << 8,
    ImGuiTableColumnFlags_NoSort = 1 << 9,
    ImGuiTableColumnFlags_NoSortAscending = 1 << 10,
    ImGuiTableColumnFlags_NoSortDescending = 1 << 11,
    ImGuiTableColumnFlags_NoHeaderLabel = 1 << 12,
    ImGuiTableColumnFlags_NoHeaderWidth = 1 << 13,
    ImGuiTableColumnFlags_PreferSortAscending = 1 << 14,
    ImGuiTableColumnFlags_PreferSortDescending = 1 << 15,
    ImGuiTableColumnFlags_IndentEnable = 1 << 16,
    ImGuiTableColumnFlags_IndentDisable = 1 << 17,
    ImGuiTableColumnFlags_IsEnabled = 1 << 24,
    ImGuiTableColumnFlags_IsVisible = 1 << 25,
    ImGuiTableColumnFlags_IsSorted = 1 << 26,
    ImGuiTableColumnFlags_IsHovered = 1 << 27,
    ImGuiTableColumnFlags_WidthMask_ = ImGuiTableColumnFlags_WidthStretch | ImGuiTableColumnFlags_WidthFixed,
    ImGuiTableColumnFlags_IndentMask_ = ImGuiTableColumnFlags_IndentEnable | ImGuiTableColumnFlags_IndentDisable,
    ImGuiTableColumnFlags_StatusMask_ = ImGuiTableColumnFlags_IsEnabled | ImGuiTableColumnFlags_IsVisible | ImGuiTableColumnFlags_IsSorted | ImGuiTableColumnFlags_IsHovered,
    ImGuiTableColumnFlags_NoDirectResize_ = 1 << 30,
}ImGuiTableColumnFlags_;
typedef enum {
    ImGuiTableRowFlags_None = 0,
    ImGuiTableRowFlags_Headers = 1 << 0,
}ImGuiTableRowFlags_;
typedef enum {
    ImGuiTableBgTarget_None = 0,
    ImGuiTableBgTarget_RowBg0 = 1,
    ImGuiTableBgTarget_RowBg1 = 2,
    ImGuiTableBgTarget_CellBg = 3,
}ImGuiTableBgTarget_;
typedef enum {
    ImGuiFocusedFlags_None = 0,
    ImGuiFocusedFlags_ChildWindows = 1 << 0,
    ImGuiFocusedFlags_RootWindow = 1 << 1,
    ImGuiFocusedFlags_AnyWindow = 1 << 2,
    ImGuiFocusedFlags_NoPopupHierarchy = 1 << 3,
    ImGuiFocusedFlags_DockHierarchy = 1 << 4,
    ImGuiFocusedFlags_RootAndChildWindows = ImGuiFocusedFlags_RootWindow | ImGuiFocusedFlags_ChildWindows,
}ImGuiFocusedFlags_;
typedef enum {
    ImGuiHoveredFlags_None = 0,
    ImGuiHoveredFlags_ChildWindows = 1 << 0,
    ImGuiHoveredFlags_RootWindow = 1 << 1,
    ImGuiHoveredFlags_AnyWindow = 1 << 2,
    ImGuiHoveredFlags_NoPopupHierarchy = 1 << 3,
    ImGuiHoveredFlags_DockHierarchy = 1 << 4,
    ImGuiHoveredFlags_AllowWhenBlockedByPopup = 1 << 5,
    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem = 1 << 7,
    ImGuiHoveredFlags_AllowWhenOverlapped = 1 << 8,
    ImGuiHoveredFlags_AllowWhenDisabled = 1 << 9,
    ImGuiHoveredFlags_NoNavOverride = 1 << 10,
    ImGuiHoveredFlags_RectOnly = ImGuiHoveredFlags_AllowWhenBlockedByPopup | ImGuiHoveredFlags_AllowWhenBlockedByActiveItem | ImGuiHoveredFlags_AllowWhenOverlapped,
    ImGuiHoveredFlags_RootAndChildWindows = ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows,
    ImGuiHoveredFlags_DelayNormal = 1 << 11,
    ImGuiHoveredFlags_DelayShort = 1 << 12,
    ImGuiHoveredFlags_NoSharedDelay = 1 << 13,
}ImGuiHoveredFlags_;
typedef enum {
    ImGuiDockNodeFlags_None = 0,
    ImGuiDockNodeFlags_KeepAliveOnly = 1 << 0,
    ImGuiDockNodeFlags_NoDockingInCentralNode = 1 << 2,
    ImGuiDockNodeFlags_PassthruCentralNode = 1 << 3,
    ImGuiDockNodeFlags_NoSplit = 1 << 4,
    ImGuiDockNodeFlags_NoResize = 1 << 5,
    ImGuiDockNodeFlags_AutoHideTabBar = 1 << 6,
}ImGuiDockNodeFlags_;
typedef enum {
    ImGuiDragDropFlags_None = 0,
    ImGuiDragDropFlags_SourceNoPreviewTooltip = 1 << 0,
    ImGuiDragDropFlags_SourceNoDisableHover = 1 << 1,
    ImGuiDragDropFlags_SourceNoHoldToOpenOthers = 1 << 2,
    ImGuiDragDropFlags_SourceAllowNullID = 1 << 3,
    ImGuiDragDropFlags_SourceExtern = 1 << 4,
    ImGuiDragDropFlags_SourceAutoExpirePayload = 1 << 5,
    ImGuiDragDropFlags_AcceptBeforeDelivery = 1 << 10,
    ImGuiDragDropFlags_AcceptNoDrawDefaultRect = 1 << 11,
    ImGuiDragDropFlags_AcceptNoPreviewTooltip = 1 << 12,
    ImGuiDragDropFlags_AcceptPeekOnly = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptNoDrawDefaultRect,
}ImGuiDragDropFlags_;
typedef enum {
    ImGuiDataType_S8,
    ImGuiDataType_U8,
    ImGuiDataType_S16,
    ImGuiDataType_U16,
    ImGuiDataType_S32,
    ImGuiDataType_U32,
    ImGuiDataType_S64,
    ImGuiDataType_U64,
    ImGuiDataType_Float,
    ImGuiDataType_Double,
    ImGuiDataType_COUNT
}ImGuiDataType_;
typedef enum {
    ImGuiDir_None = -1,
    ImGuiDir_Left = 0,
    ImGuiDir_Right = 1,
    ImGuiDir_Up = 2,
    ImGuiDir_Down = 3,
    ImGuiDir_COUNT
}ImGuiDir_;
typedef enum {
    ImGuiSortDirection_None = 0,
    ImGuiSortDirection_Ascending = 1,
    ImGuiSortDirection_Descending = 2
}ImGuiSortDirection_;
typedef enum {
ImGuiKey_None=0,
ImGuiKey_Tab=512,
ImGuiKey_LeftArrow=513,
ImGuiKey_RightArrow=514,
ImGuiKey_UpArrow=515,
ImGuiKey_DownArrow=516,
ImGuiKey_PageUp=517,
ImGuiKey_PageDown=518,
ImGuiKey_Home=519,
ImGuiKey_End=520,
ImGuiKey_Insert=521,
ImGuiKey_Delete=522,
ImGuiKey_Backspace=523,
ImGuiKey_Space=524,
ImGuiKey_Enter=525,
ImGuiKey_Escape=526,
ImGuiKey_LeftCtrl=527,
ImGuiKey_LeftShift=528,
ImGuiKey_LeftAlt=529,
ImGuiKey_LeftSuper=530,
ImGuiKey_RightCtrl=531,
ImGuiKey_RightShift=532,
ImGuiKey_RightAlt=533,
ImGuiKey_RightSuper=534,
ImGuiKey_Menu=535,
ImGuiKey_0=536,
ImGuiKey_1=537,
ImGuiKey_2=538,
ImGuiKey_3=539,
ImGuiKey_4=540,
ImGuiKey_5=541,
ImGuiKey_6=542,
ImGuiKey_7=543,
ImGuiKey_8=544,
ImGuiKey_9=545,
ImGuiKey_A=546,
ImGuiKey_B=547,
ImGuiKey_C=548,
ImGuiKey_D=549,
ImGuiKey_E=550,
ImGuiKey_F=551,
ImGuiKey_G=552,
ImGuiKey_H=553,
ImGuiKey_I=554,
ImGuiKey_J=555,
ImGuiKey_K=556,
ImGuiKey_L=557,
ImGuiKey_M=558,
ImGuiKey_N=559,
ImGuiKey_O=560,
ImGuiKey_P=561,
ImGuiKey_Q=562,
ImGuiKey_R=563,
ImGuiKey_S=564,
ImGuiKey_T=565,
ImGuiKey_U=566,
ImGuiKey_V=567,
ImGuiKey_W=568,
ImGuiKey_X=569,
ImGuiKey_Y=570,
ImGuiKey_Z=571,
ImGuiKey_F1=572,
ImGuiKey_F2=573,
ImGuiKey_F3=574,
ImGuiKey_F4=575,
ImGuiKey_F5=576,
ImGuiKey_F6=577,
ImGuiKey_F7=578,
ImGuiKey_F8=579,
ImGuiKey_F9=580,
ImGuiKey_F10=581,
ImGuiKey_F11=582,
ImGuiKey_F12=583,
ImGuiKey_Apostrophe=584,
ImGuiKey_Comma=585,
ImGuiKey_Minus=586,
ImGuiKey_Period=587,
ImGuiKey_Slash=588,
ImGuiKey_Semicolon=589,
ImGuiKey_Equal=590,
ImGuiKey_LeftBracket=591,
ImGuiKey_Backslash=592,
ImGuiKey_RightBracket=593,
ImGuiKey_GraveAccent=594,
ImGuiKey_CapsLock=595,
ImGuiKey_ScrollLock=596,
ImGuiKey_NumLock=597,
ImGuiKey_PrintScreen=598,
ImGuiKey_Pause=599,
ImGuiKey_Keypad0=600,
ImGuiKey_Keypad1=601,
ImGuiKey_Keypad2=602,
ImGuiKey_Keypad3=603,
ImGuiKey_Keypad4=604,
ImGuiKey_Keypad5=605,
ImGuiKey_Keypad6=606,
ImGuiKey_Keypad7=607,
ImGuiKey_Keypad8=608,
ImGuiKey_Keypad9=609,
ImGuiKey_KeypadDecimal=610,
ImGuiKey_KeypadDivide=611,
ImGuiKey_KeypadMultiply=612,
ImGuiKey_KeypadSubtract=613,
ImGuiKey_KeypadAdd=614,
ImGuiKey_KeypadEnter=615,
ImGuiKey_KeypadEqual=616,
ImGuiKey_GamepadStart=617,
ImGuiKey_GamepadBack=618,
ImGuiKey_GamepadFaceLeft=619,
ImGuiKey_GamepadFaceRight=620,
ImGuiKey_GamepadFaceUp=621,
ImGuiKey_GamepadFaceDown=622,
ImGuiKey_GamepadDpadLeft=623,
ImGuiKey_GamepadDpadRight=624,
ImGuiKey_GamepadDpadUp=625,
ImGuiKey_GamepadDpadDown=626,
ImGuiKey_GamepadL1=627,
ImGuiKey_GamepadR1=628,
ImGuiKey_GamepadL2=629,
ImGuiKey_GamepadR2=630,
ImGuiKey_GamepadL3=631,
ImGuiKey_GamepadR3=632,
ImGuiKey_GamepadLStickLeft=633,
ImGuiKey_GamepadLStickRight=634,
ImGuiKey_GamepadLStickUp=635,
ImGuiKey_GamepadLStickDown=636,
ImGuiKey_GamepadRStickLeft=637,
ImGuiKey_GamepadRStickRight=638,
ImGuiKey_GamepadRStickUp=639,
ImGuiKey_GamepadRStickDown=640,
ImGuiKey_MouseLeft=641,
ImGuiKey_MouseRight=642,
ImGuiKey_MouseMiddle=643,
ImGuiKey_MouseX1=644,
ImGuiKey_MouseX2=645,
ImGuiKey_MouseWheelX=646,
ImGuiKey_MouseWheelY=647,
ImGuiKey_ReservedForModCtrl=648,
ImGuiKey_ReservedForModShift=649,
ImGuiKey_ReservedForModAlt=650,
ImGuiKey_ReservedForModSuper=651,
ImGuiKey_COUNT=652,
ImGuiMod_None=0,
ImGuiMod_Ctrl=1 << 12,
ImGuiMod_Shift=1 << 13,
ImGuiMod_Alt=1 << 14,
ImGuiMod_Super=1 << 15,
ImGuiMod_Mask_=0xF000,
ImGuiMod_Shortcut=ImGuiMod_Ctrl,
ImGuiKey_NamedKey_BEGIN=512,
ImGuiKey_NamedKey_END=ImGuiKey_COUNT,
ImGuiKey_NamedKey_COUNT=ImGuiKey_NamedKey_END - ImGuiKey_NamedKey_BEGIN,
ImGuiKey_KeysData_SIZE=ImGuiKey_COUNT,
ImGuiKey_KeysData_OFFSET=0,
}ImGuiKey;
typedef enum {
    ImGuiNavInput_Activate, ImGuiNavInput_Cancel, ImGuiNavInput_Input, ImGuiNavInput_Menu, ImGuiNavInput_DpadLeft, ImGuiNavInput_DpadRight, ImGuiNavInput_DpadUp, ImGuiNavInput_DpadDown,
    ImGuiNavInput_LStickLeft, ImGuiNavInput_LStickRight, ImGuiNavInput_LStickUp, ImGuiNavInput_LStickDown, ImGuiNavInput_FocusPrev, ImGuiNavInput_FocusNext, ImGuiNavInput_TweakSlow, ImGuiNavInput_TweakFast,
    ImGuiNavInput_COUNT,
}ImGuiNavInput;
typedef enum {
    ImGuiConfigFlags_None = 0,
    ImGuiConfigFlags_NavEnableKeyboard = 1 << 0,
    ImGuiConfigFlags_NavEnableGamepad = 1 << 1,
    ImGuiConfigFlags_NavEnableSetMousePos = 1 << 2,
    ImGuiConfigFlags_NavNoCaptureKeyboard = 1 << 3,
    ImGuiConfigFlags_NoMouse = 1 << 4,
    ImGuiConfigFlags_NoMouseCursorChange = 1 << 5,
    ImGuiConfigFlags_DockingEnable = 1 << 6,
    ImGuiConfigFlags_ViewportsEnable = 1 << 10,
    ImGuiConfigFlags_DpiEnableScaleViewports= 1 << 14,
    ImGuiConfigFlags_DpiEnableScaleFonts = 1 << 15,
    ImGuiConfigFlags_IsSRGB = 1 << 20,
    ImGuiConfigFlags_IsTouchScreen = 1 << 21,
}ImGuiConfigFlags_;
typedef enum {
    ImGuiBackendFlags_None = 0,
    ImGuiBackendFlags_HasGamepad = 1 << 0,
    ImGuiBackendFlags_HasMouseCursors = 1 << 1,
    ImGuiBackendFlags_HasSetMousePos = 1 << 2,
    ImGuiBackendFlags_RendererHasVtxOffset = 1 << 3,
    ImGuiBackendFlags_PlatformHasViewports = 1 << 10,
    ImGuiBackendFlags_HasMouseHoveredViewport=1 << 11,
    ImGuiBackendFlags_RendererHasViewports = 1 << 12,
}ImGuiBackendFlags_;
typedef enum {
    ImGuiCol_Text,
    ImGuiCol_TextDisabled,
    ImGuiCol_WindowBg,
    ImGuiCol_ChildBg,
    ImGuiCol_PopupBg,
    ImGuiCol_Border,
    ImGuiCol_BorderShadow,
    ImGuiCol_FrameBg,
    ImGuiCol_FrameBgHovered,
    ImGuiCol_FrameBgActive,
    ImGuiCol_TitleBg,
    ImGuiCol_TitleBgActive,
    ImGuiCol_TitleBgCollapsed,
    ImGuiCol_MenuBarBg,
    ImGuiCol_ScrollbarBg,
    ImGuiCol_ScrollbarGrab,
    ImGuiCol_ScrollbarGrabHovered,
    ImGuiCol_ScrollbarGrabActive,
    ImGuiCol_CheckMark,
    ImGuiCol_SliderGrab,
    ImGuiCol_SliderGrabActive,
    ImGuiCol_Button,
    ImGuiCol_ButtonHovered,
    ImGuiCol_ButtonActive,
    ImGuiCol_Header,
    ImGuiCol_HeaderHovered,
    ImGuiCol_HeaderActive,
    ImGuiCol_Separator,
    ImGuiCol_SeparatorHovered,
    ImGuiCol_SeparatorActive,
    ImGuiCol_ResizeGrip,
    ImGuiCol_ResizeGripHovered,
    ImGuiCol_ResizeGripActive,
    ImGuiCol_Tab,
    ImGuiCol_TabHovered,
    ImGuiCol_TabActive,
    ImGuiCol_TabUnfocused,
    ImGuiCol_TabUnfocusedActive,
    ImGuiCol_DockingPreview,
    ImGuiCol_DockingEmptyBg,
    ImGuiCol_PlotLines,
    ImGuiCol_PlotLinesHovered,
    ImGuiCol_PlotHistogram,
    ImGuiCol_PlotHistogramHovered,
    ImGuiCol_TableHeaderBg,
    ImGuiCol_TableBorderStrong,
    ImGuiCol_TableBorderLight,
    ImGuiCol_TableRowBg,
    ImGuiCol_TableRowBgAlt,
    ImGuiCol_TextSelectedBg,
    ImGuiCol_DragDropTarget,
    ImGuiCol_NavHighlight,
    ImGuiCol_NavWindowingHighlight,
    ImGuiCol_NavWindowingDimBg,
    ImGuiCol_ModalWindowDimBg,
    ImGuiCol_COUNT
}ImGuiCol_;
typedef enum {
    ImGuiStyleVar_Alpha,
    ImGuiStyleVar_DisabledAlpha,
    ImGuiStyleVar_WindowPadding,
    ImGuiStyleVar_WindowRounding,
    ImGuiStyleVar_WindowBorderSize,
    ImGuiStyleVar_WindowMinSize,
    ImGuiStyleVar_WindowTitleAlign,
    ImGuiStyleVar_ChildRounding,
    ImGuiStyleVar_ChildBorderSize,
    ImGuiStyleVar_PopupRounding,
    ImGuiStyleVar_PopupBorderSize,
    ImGuiStyleVar_FramePadding,
    ImGuiStyleVar_FrameRounding,
    ImGuiStyleVar_FrameBorderSize,
    ImGuiStyleVar_ItemSpacing,
    ImGuiStyleVar_ItemInnerSpacing,
    ImGuiStyleVar_IndentSpacing,
    ImGuiStyleVar_CellPadding,
    ImGuiStyleVar_ScrollbarSize,
    ImGuiStyleVar_ScrollbarRounding,
    ImGuiStyleVar_GrabMinSize,
    ImGuiStyleVar_GrabRounding,
    ImGuiStyleVar_TabRounding,
    ImGuiStyleVar_ButtonTextAlign,
    ImGuiStyleVar_SelectableTextAlign,
    ImGuiStyleVar_COUNT
}ImGuiStyleVar_;
typedef enum {
    ImGuiButtonFlags_None = 0,
    ImGuiButtonFlags_MouseButtonLeft = 1 << 0,
    ImGuiButtonFlags_MouseButtonRight = 1 << 1,
    ImGuiButtonFlags_MouseButtonMiddle = 1 << 2,
    ImGuiButtonFlags_MouseButtonMask_ = ImGuiButtonFlags_MouseButtonLeft | ImGuiButtonFlags_MouseButtonRight | ImGuiButtonFlags_MouseButtonMiddle,
    ImGuiButtonFlags_MouseButtonDefault_ = ImGuiButtonFlags_MouseButtonLeft,
}ImGuiButtonFlags_;
typedef enum {
    ImGuiColorEditFlags_None = 0,
    ImGuiColorEditFlags_NoAlpha = 1 << 1,
    ImGuiColorEditFlags_NoPicker = 1 << 2,
    ImGuiColorEditFlags_NoOptions = 1 << 3,
    ImGuiColorEditFlags_NoSmallPreview = 1 << 4,
    ImGuiColorEditFlags_NoInputs = 1 << 5,
    ImGuiColorEditFlags_NoTooltip = 1 << 6,
    ImGuiColorEditFlags_NoLabel = 1 << 7,
    ImGuiColorEditFlags_NoSidePreview = 1 << 8,
    ImGuiColorEditFlags_NoDragDrop = 1 << 9,
    ImGuiColorEditFlags_NoBorder = 1 << 10,
    ImGuiColorEditFlags_AlphaBar = 1 << 16,
    ImGuiColorEditFlags_AlphaPreview = 1 << 17,
    ImGuiColorEditFlags_AlphaPreviewHalf= 1 << 18,
    ImGuiColorEditFlags_HDR = 1 << 19,
    ImGuiColorEditFlags_DisplayRGB = 1 << 20,
    ImGuiColorEditFlags_DisplayHSV = 1 << 21,
    ImGuiColorEditFlags_DisplayHex = 1 << 22,
    ImGuiColorEditFlags_Uint8 = 1 << 23,
    ImGuiColorEditFlags_Float = 1 << 24,
    ImGuiColorEditFlags_PickerHueBar = 1 << 25,
    ImGuiColorEditFlags_PickerHueWheel = 1 << 26,
    ImGuiColorEditFlags_InputRGB = 1 << 27,
    ImGuiColorEditFlags_InputHSV = 1 << 28,
    ImGuiColorEditFlags_DefaultOptions_ = ImGuiColorEditFlags_Uint8 | ImGuiColorEditFlags_DisplayRGB | ImGuiColorEditFlags_InputRGB | ImGuiColorEditFlags_PickerHueBar,
    ImGuiColorEditFlags_DisplayMask_ = ImGuiColorEditFlags_DisplayRGB | ImGuiColorEditFlags_DisplayHSV | ImGuiColorEditFlags_DisplayHex,
    ImGuiColorEditFlags_DataTypeMask_ = ImGuiColorEditFlags_Uint8 | ImGuiColorEditFlags_Float,
    ImGuiColorEditFlags_PickerMask_ = ImGuiColorEditFlags_PickerHueWheel | ImGuiColorEditFlags_PickerHueBar,
    ImGuiColorEditFlags_InputMask_ = ImGuiColorEditFlags_InputRGB | ImGuiColorEditFlags_InputHSV,
}ImGuiColorEditFlags_;
typedef enum {
    ImGuiSliderFlags_None = 0,
    ImGuiSliderFlags_AlwaysClamp = 1 << 4,
    ImGuiSliderFlags_Logarithmic = 1 << 5,
    ImGuiSliderFlags_NoRoundToFormat = 1 << 6,
    ImGuiSliderFlags_NoInput = 1 << 7,
    ImGuiSliderFlags_InvalidMask_ = 0x7000000F,
}ImGuiSliderFlags_;
typedef enum {
    ImGuiMouseButton_Left = 0,
    ImGuiMouseButton_Right = 1,
    ImGuiMouseButton_Middle = 2,
    ImGuiMouseButton_COUNT = 5
}ImGuiMouseButton_;
typedef enum {
    ImGuiMouseCursor_None = -1,
    ImGuiMouseCursor_Arrow = 0,
    ImGuiMouseCursor_TextInput,
    ImGuiMouseCursor_ResizeAll,
    ImGuiMouseCursor_ResizeNS,
    ImGuiMouseCursor_ResizeEW,
    ImGuiMouseCursor_ResizeNESW,
    ImGuiMouseCursor_ResizeNWSE,
    ImGuiMouseCursor_Hand,
    ImGuiMouseCursor_NotAllowed,
    ImGuiMouseCursor_COUNT
}ImGuiMouseCursor_;
typedef enum {
    ImGuiCond_None = 0,
    ImGuiCond_Always = 1 << 0,
    ImGuiCond_Once = 1 << 1,
    ImGuiCond_FirstUseEver = 1 << 2,
    ImGuiCond_Appearing = 1 << 3,
}ImGuiCond_;
struct ImGuiStyle
{
    float Alpha;
    float DisabledAlpha;
    ImVec2 WindowPadding;
    float WindowRounding;
    float WindowBorderSize;
    ImVec2 WindowMinSize;
    ImVec2 WindowTitleAlign;
    ImGuiDir WindowMenuButtonPosition;
    float ChildRounding;
    float ChildBorderSize;
    float PopupRounding;
    float PopupBorderSize;
    ImVec2 FramePadding;
    float FrameRounding;
    float FrameBorderSize;
    ImVec2 ItemSpacing;
    ImVec2 ItemInnerSpacing;
    ImVec2 CellPadding;
    ImVec2 TouchExtraPadding;
    float IndentSpacing;
    float ColumnsMinSpacing;
    float ScrollbarSize;
    float ScrollbarRounding;
    float GrabMinSize;
    float GrabRounding;
    float LogSliderDeadzone;
    float TabRounding;
    float TabBorderSize;
    float TabMinWidthForCloseButton;
    ImGuiDir ColorButtonPosition;
    ImVec2 ButtonTextAlign;
    ImVec2 SelectableTextAlign;
    ImVec2 DisplayWindowPadding;
    ImVec2 DisplaySafeAreaPadding;
    float MouseCursorScale;
    bool AntiAliasedLines;
    bool AntiAliasedLinesUseTex;
    bool AntiAliasedFill;
    float CurveTessellationTol;
    float CircleTessellationMaxError;
    ImVec4 Colors[ImGuiCol_COUNT];
};
struct ImGuiKeyData
{
    bool Down;
    float DownDuration;
    float DownDurationPrev;
    float AnalogValue;
};
typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;
struct ImGuiIO
{
    ImGuiConfigFlags ConfigFlags;
    ImGuiBackendFlags BackendFlags;
    ImVec2 DisplaySize;
    float DeltaTime;
    float IniSavingRate;
    const char* IniFilename;
    const char* LogFilename;
    float MouseDoubleClickTime;
    float MouseDoubleClickMaxDist;
    float MouseDragThreshold;
    float KeyRepeatDelay;
    float KeyRepeatRate;
    float HoverDelayNormal;
    float HoverDelayShort;
    void* UserData;
    ImFontAtlas*Fonts;
    float FontGlobalScale;
    bool FontAllowUserScaling;
    ImFont* FontDefault;
    ImVec2 DisplayFramebufferScale;
    bool ConfigDockingNoSplit;
    bool ConfigDockingWithShift;
    bool ConfigDockingAlwaysTabBar;
    bool ConfigDockingTransparentPayload;
    bool ConfigViewportsNoAutoMerge;
    bool ConfigViewportsNoTaskBarIcon;
    bool ConfigViewportsNoDecoration;
    bool ConfigViewportsNoDefaultParent;
    bool MouseDrawCursor;
    bool ConfigMacOSXBehaviors;
    bool ConfigInputTrickleEventQueue;
    bool ConfigInputTextCursorBlink;
    bool ConfigInputTextEnterKeepActive;
    bool ConfigDragClickToInputText;
    bool ConfigWindowsResizeFromEdges;
    bool ConfigWindowsMoveFromTitleBarOnly;
    float ConfigMemoryCompactTimer;
    const char* BackendPlatformName;
    const char* BackendRendererName;
    void* BackendPlatformUserData;
    void* BackendRendererUserData;
    void* BackendLanguageUserData;
    const char* (*GetClipboardTextFn)(void* user_data);
    void (*SetClipboardTextFn)(void* user_data, const char* text);
    void* ClipboardUserData;
    void (*SetPlatformImeDataFn)(ImGuiViewport* viewport, ImGuiPlatformImeData* data);
    void* _UnusedPadding;
    bool WantCaptureMouse;
    bool WantCaptureKeyboard;
    bool WantTextInput;
    bool WantSetMousePos;
    bool WantSaveIniSettings;
    bool NavActive;
    bool NavVisible;
    float Framerate;
    int MetricsRenderVertices;
    int MetricsRenderIndices;
    int MetricsRenderWindows;
    int MetricsActiveWindows;
    int MetricsActiveAllocations;
    ImVec2 MouseDelta;
    int KeyMap[ImGuiKey_COUNT];
    bool KeysDown[ImGuiKey_COUNT];
    float NavInputs[ImGuiNavInput_COUNT];
    ImVec2 MousePos;
    bool MouseDown[5];
    float MouseWheel;
    float MouseWheelH;
    ImGuiID MouseHoveredViewport;
    bool KeyCtrl;
    bool KeyShift;
    bool KeyAlt;
    bool KeySuper;
    ImGuiKeyChord KeyMods;
    ImGuiKeyData KeysData[ImGuiKey_KeysData_SIZE];
    bool WantCaptureMouseUnlessPopupClose;
    ImVec2 MousePosPrev;
    ImVec2 MouseClickedPos[5];
    double MouseClickedTime[5];
    bool MouseClicked[5];
    bool MouseDoubleClicked[5];
    ImU16 MouseClickedCount[5];
    ImU16 MouseClickedLastCount[5];
    bool MouseReleased[5];
    bool MouseDownOwned[5];
    bool MouseDownOwnedUnlessPopupClose[5];
    float MouseDownDuration[5];
    float MouseDownDurationPrev[5];
    ImVec2 MouseDragMaxDistanceAbs[5];
    float MouseDragMaxDistanceSqr[5];
    float PenPressure;
    bool AppFocusLost;
    bool AppAcceptingEvents;
    ImS8 BackendUsingLegacyKeyArrays;
    bool BackendUsingLegacyNavInputArray;
    ImWchar16 InputQueueSurrogate;
    ImVector_ImWchar InputQueueCharacters;
};
struct ImGuiInputTextCallbackData
{
    ImGuiInputTextFlags EventFlag;
    ImGuiInputTextFlags Flags;
    void* UserData;
    ImWchar EventChar;
    ImGuiKey EventKey;
    char* Buf;
    int BufTextLen;
    int BufSize;
    bool BufDirty;
    int CursorPos;
    int SelectionStart;
    int SelectionEnd;
};
struct ImGuiSizeCallbackData
{
    void* UserData;
    ImVec2 Pos;
    ImVec2 CurrentSize;
    ImVec2 DesiredSize;
};
struct ImGuiWindowClass
{
    ImGuiID ClassId;
    ImGuiID ParentViewportId;
    ImGuiViewportFlags ViewportFlagsOverrideSet;
    ImGuiViewportFlags ViewportFlagsOverrideClear;
    ImGuiTabItemFlags TabItemFlagsOverrideSet;
    ImGuiDockNodeFlags DockNodeFlagsOverrideSet;
    bool DockingAlwaysTabBar;
    bool DockingAllowUnclassed;
};
struct ImGuiPayload
{
    void* Data;
    int DataSize;
    ImGuiID SourceId;
    ImGuiID SourceParentId;
    int DataFrameCount;
    char DataType[32 + 1];
    bool Preview;
    bool Delivery;
};
struct ImGuiTableColumnSortSpecs
{
    ImGuiID ColumnUserID;
    ImS16 ColumnIndex;
    ImS16 SortOrder;
    ImGuiSortDirection SortDirection : 8;
};
struct ImGuiTableSortSpecs
{
    const ImGuiTableColumnSortSpecs* Specs;
    int SpecsCount;
    bool SpecsDirty;
};
struct ImGuiOnceUponAFrame
{
     int RefFrame;
};
struct ImGuiTextRange
{
        const char* b;
        const char* e;
};
typedef struct ImGuiTextRange ImGuiTextRange;
typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;
struct ImGuiTextFilter
{
    char InputBuf[256];
    ImVector_ImGuiTextRange Filters;
    int CountGrep;
};
typedef struct ImGuiTextRange ImGuiTextRange;
typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;
struct ImGuiTextBuffer
{
    ImVector_char Buf;
};
struct ImGuiStoragePair
{
        ImGuiID key;
        union { int val_i; float val_f; void* val_p; };
};
typedef struct ImGuiStoragePair ImGuiStoragePair;
typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;
struct ImGuiStorage
{
    ImVector_ImGuiStoragePair Data;
};
typedef struct ImGuiStoragePair ImGuiStoragePair;
struct ImGuiListClipper
{
    int DisplayStart;
    int DisplayEnd;
    int ItemsCount;
    float ItemsHeight;
    float StartPosY;
    void* TempData;
};
struct ImColor
{
    ImVec4 Value;
};
typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);
struct ImDrawCmd
{
    ImVec4 ClipRect;
    ImTextureID TextureId;
    unsigned int VtxOffset;
    unsigned int IdxOffset;
    unsigned int ElemCount;
    ImDrawCallback UserCallback;
    void* UserCallbackData;
};
struct ImDrawVert
{
    ImVec2 pos;
    ImVec2 uv;
    ImU32 col;
};
typedef struct ImDrawCmdHeader ImDrawCmdHeader;
struct ImDrawCmdHeader
{
    ImVec4 ClipRect;
    ImTextureID TextureId;
    unsigned int VtxOffset;
};
typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;
typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;
struct ImDrawChannel
{
    ImVector_ImDrawCmd _CmdBuffer;
    ImVector_ImDrawIdx _IdxBuffer;
};
typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;
struct ImDrawListSplitter
{
    int _Current;
    int _Count;
    ImVector_ImDrawChannel _Channels;
};
typedef enum {
    ImDrawFlags_None = 0,
    ImDrawFlags_Closed = 1 << 0,
    ImDrawFlags_RoundCornersTopLeft = 1 << 4,
    ImDrawFlags_RoundCornersTopRight = 1 << 5,
    ImDrawFlags_RoundCornersBottomLeft = 1 << 6,
    ImDrawFlags_RoundCornersBottomRight = 1 << 7,
    ImDrawFlags_RoundCornersNone = 1 << 8,
    ImDrawFlags_RoundCornersTop = ImDrawFlags_RoundCornersTopLeft | ImDrawFlags_RoundCornersTopRight,
    ImDrawFlags_RoundCornersBottom = ImDrawFlags_RoundCornersBottomLeft | ImDrawFlags_RoundCornersBottomRight,
    ImDrawFlags_RoundCornersLeft = ImDrawFlags_RoundCornersBottomLeft | ImDrawFlags_RoundCornersTopLeft,
    ImDrawFlags_RoundCornersRight = ImDrawFlags_RoundCornersBottomRight | ImDrawFlags_RoundCornersTopRight,
    ImDrawFlags_RoundCornersAll = ImDrawFlags_RoundCornersTopLeft | ImDrawFlags_RoundCornersTopRight | ImDrawFlags_RoundCornersBottomLeft | ImDrawFlags_RoundCornersBottomRight,
    ImDrawFlags_RoundCornersDefault_ = ImDrawFlags_RoundCornersAll,
    ImDrawFlags_RoundCornersMask_ = ImDrawFlags_RoundCornersAll | ImDrawFlags_RoundCornersNone,
}ImDrawFlags_;
typedef enum {
    ImDrawListFlags_None = 0,
    ImDrawListFlags_AntiAliasedLines = 1 << 0,
    ImDrawListFlags_AntiAliasedLinesUseTex = 1 << 1,
    ImDrawListFlags_AntiAliasedFill = 1 << 2,
    ImDrawListFlags_AllowVtxOffset = 1 << 3,
}ImDrawListFlags_;
typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;
typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;
typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;
typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;
struct ImDrawList
{
    ImVector_ImDrawCmd CmdBuffer;
    ImVector_ImDrawIdx IdxBuffer;
    ImVector_ImDrawVert VtxBuffer;
    ImDrawListFlags Flags;
    unsigned int _VtxCurrentIdx;
    ImDrawListSharedData* _Data;
    const char* _OwnerName;
    ImDrawVert* _VtxWritePtr;
    ImDrawIdx* _IdxWritePtr;
    ImVector_ImVec4 _ClipRectStack;
    ImVector_ImTextureID _TextureIdStack;
    ImVector_ImVec2 _Path;
    ImDrawCmdHeader _CmdHeader;
    ImDrawListSplitter _Splitter;
    float _FringeScale;
};
struct ImDrawData
{
    bool Valid;
    int CmdListsCount;
    int TotalIdxCount;
    int TotalVtxCount;
    ImDrawList** CmdLists;
    ImVec2 DisplayPos;
    ImVec2 DisplaySize;
    ImVec2 FramebufferScale;
    ImGuiViewport* OwnerViewport;
};
struct ImFontConfig
{
    void* FontData;
    int FontDataSize;
    bool FontDataOwnedByAtlas;
    int FontNo;
    float SizePixels;
    int OversampleH;
    int OversampleV;
    bool PixelSnapH;
    ImVec2 GlyphExtraSpacing;
    ImVec2 GlyphOffset;
    const ImWchar* GlyphRanges;
    float GlyphMinAdvanceX;
    float GlyphMaxAdvanceX;
    bool MergeMode;
    unsigned int FontBuilderFlags;
    float RasterizerMultiply;
    ImWchar EllipsisChar;
    char Name[40];
    ImFont* DstFont;
};
struct ImFontGlyph
{
    unsigned int Colored : 1;
    unsigned int Visible : 1;
    unsigned int Codepoint : 30;
    float AdvanceX;
    float X0, Y0, X1, Y1;
    float U0, V0, U1, V1;
};
typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;
struct ImFontGlyphRangesBuilder
{
    ImVector_ImU32 UsedChars;
};
typedef struct ImFontAtlasCustomRect ImFontAtlasCustomRect;
struct ImFontAtlasCustomRect
{
    unsigned short Width, Height;
    unsigned short X, Y;
    unsigned int GlyphID;
    float GlyphAdvanceX;
    ImVec2 GlyphOffset;
    ImFont* Font;
};
typedef enum {
    ImFontAtlasFlags_None = 0,
    ImFontAtlasFlags_NoPowerOfTwoHeight = 1 << 0,
    ImFontAtlasFlags_NoMouseCursors = 1 << 1,
    ImFontAtlasFlags_NoBakedLines = 1 << 2,
}ImFontAtlasFlags_;
typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;
typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;
typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;
struct ImFontAtlas
{
    ImFontAtlasFlags Flags;
    ImTextureID TexID;
    int TexDesiredWidth;
    int TexGlyphPadding;
    bool Locked;
    bool TexReady;
    bool TexPixelsUseColors;
    unsigned char* TexPixelsAlpha8;
    unsigned int* TexPixelsRGBA32;
    int TexWidth;
    int TexHeight;
    ImVec2 TexUvScale;
    ImVec2 TexUvWhitePixel;
    ImVector_ImFontPtr Fonts;
    ImVector_ImFontAtlasCustomRect CustomRects;
    ImVector_ImFontConfig ConfigData;
    ImVec4 TexUvLines[(63) + 1];
    const ImFontBuilderIO* FontBuilderIO;
    unsigned int FontBuilderFlags;
    int PackIdMouseCursors;
    int PackIdLines;
};
typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;
typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;
struct ImFont
{
    ImVector_float IndexAdvanceX;
    float FallbackAdvanceX;
    float FontSize;
    ImVector_ImWchar IndexLookup;
    ImVector_ImFontGlyph Glyphs;
    const ImFontGlyph* FallbackGlyph;
    ImFontAtlas* ContainerAtlas;
    const ImFontConfig* ConfigData;
    short ConfigDataCount;
    ImWchar FallbackChar;
    ImWchar EllipsisChar;
    ImWchar DotChar;
    bool DirtyLookupTables;
    float Scale;
    float Ascent, Descent;
    int MetricsTotalSurface;
    ImU8 Used4kPagesMap[(0xFFFF +1)/4096/8];
};
typedef enum {
    ImGuiViewportFlags_None = 0,
    ImGuiViewportFlags_IsPlatformWindow = 1 << 0,
    ImGuiViewportFlags_IsPlatformMonitor = 1 << 1,
    ImGuiViewportFlags_OwnedByApp = 1 << 2,
    ImGuiViewportFlags_NoDecoration = 1 << 3,
    ImGuiViewportFlags_NoTaskBarIcon = 1 << 4,
    ImGuiViewportFlags_NoFocusOnAppearing = 1 << 5,
    ImGuiViewportFlags_NoFocusOnClick = 1 << 6,
    ImGuiViewportFlags_NoInputs = 1 << 7,
    ImGuiViewportFlags_NoRendererClear = 1 << 8,
    ImGuiViewportFlags_TopMost = 1 << 9,
    ImGuiViewportFlags_Minimized = 1 << 10,
    ImGuiViewportFlags_NoAutoMerge = 1 << 11,
    ImGuiViewportFlags_CanHostOtherWindows = 1 << 12,
}ImGuiViewportFlags_;
struct ImGuiViewport
{
    ImGuiID ID;
    ImGuiViewportFlags Flags;
    ImVec2 Pos;
    ImVec2 Size;
    ImVec2 WorkPos;
    ImVec2 WorkSize;
    float DpiScale;
    ImGuiID ParentViewportId;
    ImDrawData* DrawData;
    void* RendererUserData;
    void* PlatformUserData;
    void* PlatformHandle;
    void* PlatformHandleRaw;
    bool PlatformRequestMove;
    bool PlatformRequestResize;
    bool PlatformRequestClose;
};
typedef struct ImVector_ImGuiPlatformMonitor {int Size;int Capacity;ImGuiPlatformMonitor* Data;} ImVector_ImGuiPlatformMonitor;
typedef struct ImVector_ImGuiViewportPtr {int Size;int Capacity;ImGuiViewport** Data;} ImVector_ImGuiViewportPtr;
struct ImGuiPlatformIO
{
    void (*Platform_CreateWindow)(ImGuiViewport* vp);
    void (*Platform_DestroyWindow)(ImGuiViewport* vp);
    void (*Platform_ShowWindow)(ImGuiViewport* vp);
    void (*Platform_SetWindowPos)(ImGuiViewport* vp, ImVec2 pos);
    ImVec2 (*Platform_GetWindowPos)(ImGuiViewport* vp);
    void (*Platform_SetWindowSize)(ImGuiViewport* vp, ImVec2 size);
    ImVec2 (*Platform_GetWindowSize)(ImGuiViewport* vp);
    void (*Platform_SetWindowFocus)(ImGuiViewport* vp);
    bool (*Platform_GetWindowFocus)(ImGuiViewport* vp);
    bool (*Platform_GetWindowMinimized)(ImGuiViewport* vp);
    void (*Platform_SetWindowTitle)(ImGuiViewport* vp, const char* str);
    void (*Platform_SetWindowAlpha)(ImGuiViewport* vp, float alpha);
    void (*Platform_UpdateWindow)(ImGuiViewport* vp);
    void (*Platform_RenderWindow)(ImGuiViewport* vp, void* render_arg);
    void (*Platform_SwapBuffers)(ImGuiViewport* vp, void* render_arg);
    float (*Platform_GetWindowDpiScale)(ImGuiViewport* vp);
    void (*Platform_OnChangedViewport)(ImGuiViewport* vp);
    int (*Platform_CreateVkSurface)(ImGuiViewport* vp, ImU64 vk_inst, const void* vk_allocators, ImU64* out_vk_surface);
    void (*Renderer_CreateWindow)(ImGuiViewport* vp);
    void (*Renderer_DestroyWindow)(ImGuiViewport* vp);
    void (*Renderer_SetWindowSize)(ImGuiViewport* vp, ImVec2 size);
    void (*Renderer_RenderWindow)(ImGuiViewport* vp, void* render_arg);
    void (*Renderer_SwapBuffers)(ImGuiViewport* vp, void* render_arg);
    ImVector_ImGuiPlatformMonitor Monitors;
    ImVector_ImGuiViewportPtr Viewports;
};
struct ImGuiPlatformMonitor
{
    ImVec2 MainPos, MainSize;
    ImVec2 WorkPos, WorkSize;
    float DpiScale;
};
struct ImGuiPlatformImeData
{
    bool WantVisible;
    ImVec2 InputPos;
    float InputLineHeight;
};
struct ImBitVector;
struct ImRect;
struct ImDrawDataBuilder;
struct ImDrawListSharedData;
struct ImGuiColorMod;
struct ImGuiContext;
struct ImGuiContextHook;
struct ImGuiDataTypeInfo;
struct ImGuiDockContext;
struct ImGuiDockRequest;
struct ImGuiDockNode;
struct ImGuiDockNodeSettings;
struct ImGuiGroupData;
struct ImGuiInputTextState;
struct ImGuiLastItemData;
struct ImGuiMenuColumns;
struct ImGuiNavItemData;
struct ImGuiMetricsConfig;
struct ImGuiNextWindowData;
struct ImGuiNextItemData;
struct ImGuiOldColumnData;
struct ImGuiOldColumns;
struct ImGuiPopupData;
struct ImGuiSettingsHandler;
struct ImGuiStackSizes;
struct ImGuiStyleMod;
struct ImGuiTabBar;
struct ImGuiTabItem;
struct ImGuiTable;
struct ImGuiTableColumn;
struct ImGuiTableInstanceData;
struct ImGuiTableTempData;
struct ImGuiTableSettings;
struct ImGuiTableColumnsSettings;
struct ImGuiWindow;
struct ImGuiWindowTempData;
struct ImGuiWindowSettings;
typedef int ImGuiDataAuthority;
typedef int ImGuiLayoutType;
typedef int ImGuiActivateFlags;
typedef int ImGuiDebugLogFlags;
typedef int ImGuiInputFlags;
typedef int ImGuiItemFlags;
typedef int ImGuiItemStatusFlags;
typedef int ImGuiOldColumnFlags;
typedef int ImGuiNavHighlightFlags;
typedef int ImGuiNavMoveFlags;
typedef int ImGuiNextItemDataFlags;
typedef int ImGuiNextWindowDataFlags;
typedef int ImGuiScrollFlags;
typedef int ImGuiSeparatorFlags;
typedef int ImGuiTextFlags;
typedef int ImGuiTooltipFlags;
typedef void (*ImGuiErrorLogCallback)(void* user_data, const char* fmt, ...);
extern ImGuiContext* GImGui;
typedef struct StbUndoRecord StbUndoRecord;
struct StbUndoRecord
{
   int where;
   int insert_length;
   int delete_length;
   int char_storage;
};
typedef struct StbUndoState StbUndoState;
struct StbUndoState
{
   StbUndoRecord undo_rec [99];
   ImWchar undo_char[999];
   short undo_point, redo_point;
   int undo_char_point, redo_char_point;
};
typedef struct STB_TexteditState STB_TexteditState;
struct STB_TexteditState
{
   int cursor;
   int select_start;
   int select_end;
   unsigned char insert_mode;
   int row_count_per_page;
   unsigned char cursor_at_end_of_line;
   unsigned char initialized;
   unsigned char has_preferred_x;
   unsigned char single_line;
   unsigned char padding1, padding2, padding3;
   float preferred_x;
   StbUndoState undostate;
};
typedef struct StbTexteditRow StbTexteditRow;
struct StbTexteditRow
{
   float x0,x1;
   float baseline_y_delta;
   float ymin,ymax;
   int num_chars;
};
typedef FILE* ImFileHandle;
typedef struct ImVec1 ImVec1;
struct ImVec1
{
    float x;
};
typedef struct ImVec2ih ImVec2ih;
struct ImVec2ih
{
    short x, y;
};
struct ImRect
{
    ImVec2 Min;
    ImVec2 Max;
};
struct ImBitVector
{
    ImVector_ImU32 Storage;
};
typedef int ImPoolIdx;
typedef struct ImGuiTextIndex ImGuiTextIndex;
typedef struct ImVector_int {int Size;int Capacity;int* Data;} ImVector_int;
struct ImGuiTextIndex
{
    ImVector_int LineOffsets;
    int EndOffset;
};
struct ImDrawListSharedData
{
    ImVec2 TexUvWhitePixel;
    ImFont* Font;
    float FontSize;
    float CurveTessellationTol;
    float CircleSegmentMaxError;
    ImVec4 ClipRectFullscreen;
    ImDrawListFlags InitialFlags;
    ImVector_ImVec2 TempBuffer;
    ImVec2 ArcFastVtx[48];
    float ArcFastRadiusCutoff;
    ImU8 CircleSegmentCounts[64];
    const ImVec4* TexUvLines;
};
typedef struct ImVector_ImDrawListPtr {int Size;int Capacity;ImDrawList** Data;} ImVector_ImDrawListPtr;
struct ImDrawDataBuilder
{
    ImVector_ImDrawListPtr Layers[2];
};
typedef enum {
    ImGuiItemFlags_None = 0,
    ImGuiItemFlags_NoTabStop = 1 << 0,
    ImGuiItemFlags_ButtonRepeat = 1 << 1,
    ImGuiItemFlags_Disabled = 1 << 2,
    ImGuiItemFlags_NoNav = 1 << 3,
    ImGuiItemFlags_NoNavDefaultFocus = 1 << 4,
    ImGuiItemFlags_SelectableDontClosePopup = 1 << 5,
    ImGuiItemFlags_MixedValue = 1 << 6,
    ImGuiItemFlags_ReadOnly = 1 << 7,
    ImGuiItemFlags_NoWindowHoverableCheck = 1 << 8,
    ImGuiItemFlags_Inputable = 1 << 10,
}ImGuiItemFlags_;
typedef enum {
    ImGuiItemStatusFlags_None = 0,
    ImGuiItemStatusFlags_HoveredRect = 1 << 0,
    ImGuiItemStatusFlags_HasDisplayRect = 1 << 1,
    ImGuiItemStatusFlags_Edited = 1 << 2,
    ImGuiItemStatusFlags_ToggledSelection = 1 << 3,
    ImGuiItemStatusFlags_ToggledOpen = 1 << 4,
    ImGuiItemStatusFlags_HasDeactivated = 1 << 5,
    ImGuiItemStatusFlags_Deactivated = 1 << 6,
    ImGuiItemStatusFlags_HoveredWindow = 1 << 7,
    ImGuiItemStatusFlags_FocusedByTabbing = 1 << 8,
    ImGuiItemStatusFlags_Visible = 1 << 9,
}ImGuiItemStatusFlags_;
typedef enum {
    ImGuiInputTextFlags_Multiline = 1 << 26,
    ImGuiInputTextFlags_NoMarkEdited = 1 << 27,
    ImGuiInputTextFlags_MergedItem = 1 << 28,
}ImGuiInputTextFlagsPrivate_;
typedef enum {
    ImGuiButtonFlags_PressedOnClick = 1 << 4,
    ImGuiButtonFlags_PressedOnClickRelease = 1 << 5,
    ImGuiButtonFlags_PressedOnClickReleaseAnywhere = 1 << 6,
    ImGuiButtonFlags_PressedOnRelease = 1 << 7,
    ImGuiButtonFlags_PressedOnDoubleClick = 1 << 8,
    ImGuiButtonFlags_PressedOnDragDropHold = 1 << 9,
    ImGuiButtonFlags_Repeat = 1 << 10,
    ImGuiButtonFlags_FlattenChildren = 1 << 11,
    ImGuiButtonFlags_AllowItemOverlap = 1 << 12,
    ImGuiButtonFlags_DontClosePopups = 1 << 13,
    ImGuiButtonFlags_AlignTextBaseLine = 1 << 15,
    ImGuiButtonFlags_NoKeyModifiers = 1 << 16,
    ImGuiButtonFlags_NoHoldingActiveId = 1 << 17,
    ImGuiButtonFlags_NoNavFocus = 1 << 18,
    ImGuiButtonFlags_NoHoveredOnFocus = 1 << 19,
    ImGuiButtonFlags_NoSetKeyOwner = 1 << 20,
    ImGuiButtonFlags_NoTestKeyOwner = 1 << 21,
    ImGuiButtonFlags_PressedOnMask_ = ImGuiButtonFlags_PressedOnClick | ImGuiButtonFlags_PressedOnClickRelease | ImGuiButtonFlags_PressedOnClickReleaseAnywhere | ImGuiButtonFlags_PressedOnRelease | ImGuiButtonFlags_PressedOnDoubleClick | ImGuiButtonFlags_PressedOnDragDropHold,
    ImGuiButtonFlags_PressedOnDefault_ = ImGuiButtonFlags_PressedOnClickRelease,
}ImGuiButtonFlagsPrivate_;
typedef enum {
    ImGuiComboFlags_CustomPreview = 1 << 20,
}ImGuiComboFlagsPrivate_;
typedef enum {
    ImGuiSliderFlags_Vertical = 1 << 20,
    ImGuiSliderFlags_ReadOnly = 1 << 21,
}ImGuiSliderFlagsPrivate_;
typedef enum {
    ImGuiSelectableFlags_NoHoldingActiveID = 1 << 20,
    ImGuiSelectableFlags_SelectOnNav = 1 << 21,
    ImGuiSelectableFlags_SelectOnClick = 1 << 22,
    ImGuiSelectableFlags_SelectOnRelease = 1 << 23,
    ImGuiSelectableFlags_SpanAvailWidth = 1 << 24,
    ImGuiSelectableFlags_DrawHoveredWhenHeld = 1 << 25,
    ImGuiSelectableFlags_SetNavIdOnHover = 1 << 26,
    ImGuiSelectableFlags_NoPadWithHalfSpacing = 1 << 27,
    ImGuiSelectableFlags_NoSetKeyOwner = 1 << 28,
}ImGuiSelectableFlagsPrivate_;
typedef enum {
    ImGuiTreeNodeFlags_ClipLabelForTrailingButton = 1 << 20,
}ImGuiTreeNodeFlagsPrivate_;
typedef enum {
    ImGuiSeparatorFlags_None = 0,
    ImGuiSeparatorFlags_Horizontal = 1 << 0,
    ImGuiSeparatorFlags_Vertical = 1 << 1,
    ImGuiSeparatorFlags_SpanAllColumns = 1 << 2,
}ImGuiSeparatorFlags_;
typedef enum {
    ImGuiTextFlags_None = 0,
    ImGuiTextFlags_NoWidthForLargeClippedText = 1 << 0,
}ImGuiTextFlags_;
typedef enum {
    ImGuiTooltipFlags_None = 0,
    ImGuiTooltipFlags_OverridePreviousTooltip = 1 << 0,
}ImGuiTooltipFlags_;
typedef enum {
    ImGuiLayoutType_Horizontal = 0,
    ImGuiLayoutType_Vertical = 1
}ImGuiLayoutType_;
typedef enum {
    ImGuiLogType_None = 0,
    ImGuiLogType_TTY,
    ImGuiLogType_File,
    ImGuiLogType_Buffer,
    ImGuiLogType_Clipboard,
}ImGuiLogType;
typedef enum {
    ImGuiAxis_None = -1,
    ImGuiAxis_X = 0,
    ImGuiAxis_Y = 1
}ImGuiAxis;
typedef enum {
    ImGuiPlotType_Lines,
    ImGuiPlotType_Histogram,
}ImGuiPlotType;
typedef enum {
    ImGuiPopupPositionPolicy_Default,
    ImGuiPopupPositionPolicy_ComboBox,
    ImGuiPopupPositionPolicy_Tooltip,
}ImGuiPopupPositionPolicy;
typedef struct ImGuiDataTypeTempStorage ImGuiDataTypeTempStorage;
struct ImGuiDataTypeTempStorage
{
    ImU8 Data[8];
};
struct ImGuiDataTypeInfo
{
    size_t Size;
    const char* Name;
    const char* PrintFmt;
    const char* ScanFmt;
};
typedef enum {
    ImGuiDataType_String = ImGuiDataType_COUNT + 1,
    ImGuiDataType_Pointer,
    ImGuiDataType_ID,
}ImGuiDataTypePrivate_;
struct ImGuiColorMod
{
    ImGuiCol Col;
    ImVec4 BackupValue;
};
struct ImGuiStyleMod
{
    ImGuiStyleVar VarIdx;
    union { int BackupInt[2]; float BackupFloat[2]; };
};
typedef struct ImGuiComboPreviewData ImGuiComboPreviewData;
struct ImGuiComboPreviewData
{
    ImRect PreviewRect;
    ImVec2 BackupCursorPos;
    ImVec2 BackupCursorMaxPos;
    ImVec2 BackupCursorPosPrevLine;
    float BackupPrevLineTextBaseOffset;
    ImGuiLayoutType BackupLayout;
};
struct ImGuiGroupData
{
    ImGuiID WindowID;
    ImVec2 BackupCursorPos;
    ImVec2 BackupCursorMaxPos;
    ImVec1 BackupIndent;
    ImVec1 BackupGroupOffset;
    ImVec2 BackupCurrLineSize;
    float BackupCurrLineTextBaseOffset;
    ImGuiID BackupActiveIdIsAlive;
    bool BackupActiveIdPreviousFrameIsAlive;
    bool BackupHoveredIdIsAlive;
    bool EmitItem;
};
struct ImGuiMenuColumns
{
    ImU32 TotalWidth;
    ImU32 NextTotalWidth;
    ImU16 Spacing;
    ImU16 OffsetIcon;
    ImU16 OffsetLabel;
    ImU16 OffsetShortcut;
    ImU16 OffsetMark;
    ImU16 Widths[4];
};
struct ImGuiInputTextState
{
    ImGuiID ID;
    int CurLenW, CurLenA;
    ImVector_ImWchar TextW;
    ImVector_char TextA;
    ImVector_char InitialTextA;
    bool TextAIsValid;
    int BufCapacityA;
    float ScrollX;
    STB_TexteditState Stb;
    float CursorAnim;
    bool CursorFollow;
    bool SelectedAllMouseLock;
    bool Edited;
    ImGuiInputTextFlags Flags;
};
struct ImGuiPopupData
{
    ImGuiID PopupId;
    ImGuiWindow* Window;
    ImGuiWindow* BackupNavWindow;
    int ParentNavLayer;
    int OpenFrameCount;
    ImGuiID OpenParentId;
    ImVec2 OpenPopupPos;
    ImVec2 OpenMousePos;
};
typedef enum {
    ImGuiNextWindowDataFlags_None = 0,
    ImGuiNextWindowDataFlags_HasPos = 1 << 0,
    ImGuiNextWindowDataFlags_HasSize = 1 << 1,
    ImGuiNextWindowDataFlags_HasContentSize = 1 << 2,
    ImGuiNextWindowDataFlags_HasCollapsed = 1 << 3,
    ImGuiNextWindowDataFlags_HasSizeConstraint = 1 << 4,
    ImGuiNextWindowDataFlags_HasFocus = 1 << 5,
    ImGuiNextWindowDataFlags_HasBgAlpha = 1 << 6,
    ImGuiNextWindowDataFlags_HasScroll = 1 << 7,
    ImGuiNextWindowDataFlags_HasViewport = 1 << 8,
    ImGuiNextWindowDataFlags_HasDock = 1 << 9,
    ImGuiNextWindowDataFlags_HasWindowClass = 1 << 10,
}ImGuiNextWindowDataFlags_;
struct ImGuiNextWindowData
{
    ImGuiNextWindowDataFlags Flags;
    ImGuiCond PosCond;
    ImGuiCond SizeCond;
    ImGuiCond CollapsedCond;
    ImGuiCond DockCond;
    ImVec2 PosVal;
    ImVec2 PosPivotVal;
    ImVec2 SizeVal;
    ImVec2 ContentSizeVal;
    ImVec2 ScrollVal;
    bool PosUndock;
    bool CollapsedVal;
    ImRect SizeConstraintRect;
    ImGuiSizeCallback SizeCallback;
    void* SizeCallbackUserData;
    float BgAlphaVal;
    ImGuiID ViewportId;
    ImGuiID DockId;
    ImGuiWindowClass WindowClass;
    ImVec2 MenuBarOffsetMinVal;
};
typedef enum {
    ImGuiNextItemDataFlags_None = 0,
    ImGuiNextItemDataFlags_HasWidth = 1 << 0,
    ImGuiNextItemDataFlags_HasOpen = 1 << 1,
}ImGuiNextItemDataFlags_;
struct ImGuiNextItemData
{
    ImGuiNextItemDataFlags Flags;
    float Width;
    ImGuiID FocusScopeId;
    ImGuiCond OpenCond;
    bool OpenVal;
};
struct ImGuiLastItemData
{
    ImGuiID ID;
    ImGuiItemFlags InFlags;
    ImGuiItemStatusFlags StatusFlags;
    ImRect Rect;
    ImRect NavRect;
    ImRect DisplayRect;
};
struct ImGuiStackSizes
{
    short SizeOfIDStack;
    short SizeOfColorStack;
    short SizeOfStyleVarStack;
    short SizeOfFontStack;
    short SizeOfFocusScopeStack;
    short SizeOfGroupStack;
    short SizeOfItemFlagsStack;
    short SizeOfBeginPopupStack;
    short SizeOfDisabledStack;
};
typedef struct ImGuiWindowStackData ImGuiWindowStackData;
struct ImGuiWindowStackData
{
    ImGuiWindow* Window;
    ImGuiLastItemData ParentLastItemDataBackup;
    ImGuiStackSizes StackSizesOnBegin;
};
typedef struct ImGuiShrinkWidthItem ImGuiShrinkWidthItem;
struct ImGuiShrinkWidthItem
{
    int Index;
    float Width;
    float InitialWidth;
};
typedef struct ImGuiPtrOrIndex ImGuiPtrOrIndex;
struct ImGuiPtrOrIndex
{
    void* Ptr;
    int Index;
};
typedef struct ImBitArray_ImGuiKey_NamedKey_COUNT__lessImGuiKey_NamedKey_BEGIN {ImU32 Storage[(ImGuiKey_NamedKey_COUNT+31)>>5];} ImBitArray_ImGuiKey_NamedKey_COUNT__lessImGuiKey_NamedKey_BEGIN;
typedef ImBitArray_ImGuiKey_NamedKey_COUNT__lessImGuiKey_NamedKey_BEGIN ImBitArrayForNamedKeys;
typedef enum {
    ImGuiInputEventType_None = 0,
    ImGuiInputEventType_MousePos,
    ImGuiInputEventType_MouseWheel,
    ImGuiInputEventType_MouseButton,
    ImGuiInputEventType_MouseViewport,
    ImGuiInputEventType_Key,
    ImGuiInputEventType_Text,
    ImGuiInputEventType_Focus,
    ImGuiInputEventType_COUNT
}ImGuiInputEventType;
typedef enum {
    ImGuiInputSource_None = 0,
    ImGuiInputSource_Mouse,
    ImGuiInputSource_Keyboard,
    ImGuiInputSource_Gamepad,
    ImGuiInputSource_Clipboard,
    ImGuiInputSource_Nav,
    ImGuiInputSource_COUNT
}ImGuiInputSource;
typedef struct ImGuiInputEventMousePos ImGuiInputEventMousePos;
struct ImGuiInputEventMousePos
{ float PosX, PosY;
};
typedef struct ImGuiInputEventMouseWheel ImGuiInputEventMouseWheel;
struct ImGuiInputEventMouseWheel
{ float WheelX, WheelY;
};
typedef struct ImGuiInputEventMouseButton ImGuiInputEventMouseButton;
struct ImGuiInputEventMouseButton
{ int Button; bool Down;
};
typedef struct ImGuiInputEventMouseViewport ImGuiInputEventMouseViewport;
struct ImGuiInputEventMouseViewport
{ ImGuiID HoveredViewportID;
};
typedef struct ImGuiInputEventKey ImGuiInputEventKey;
struct ImGuiInputEventKey
{ ImGuiKey Key; bool Down; float AnalogValue;
};
typedef struct ImGuiInputEventText ImGuiInputEventText;
struct ImGuiInputEventText
{ unsigned int Char;
};
typedef struct ImGuiInputEventAppFocused ImGuiInputEventAppFocused;
struct ImGuiInputEventAppFocused
{ bool Focused;
};
typedef struct ImGuiInputEvent ImGuiInputEvent;
struct ImGuiInputEvent
{
    ImGuiInputEventType Type;
    ImGuiInputSource Source;
    union
    {
        ImGuiInputEventMousePos MousePos;
        ImGuiInputEventMouseWheel MouseWheel;
        ImGuiInputEventMouseButton MouseButton;
        ImGuiInputEventMouseViewport MouseViewport;
        ImGuiInputEventKey Key;
        ImGuiInputEventText Text;
        ImGuiInputEventAppFocused AppFocused;
    };
    bool AddedByTestEngine;
};
typedef ImS16 ImGuiKeyRoutingIndex;
typedef struct ImGuiKeyRoutingData ImGuiKeyRoutingData;
struct ImGuiKeyRoutingData
{
    ImGuiKeyRoutingIndex NextEntryIndex;
    ImU16 Mods;
    ImU8 RoutingNextScore;
    ImGuiID RoutingCurr;
    ImGuiID RoutingNext;
};
typedef struct ImGuiKeyRoutingTable ImGuiKeyRoutingTable;
typedef struct ImVector_ImGuiKeyRoutingData {int Size;int Capacity;ImGuiKeyRoutingData* Data;} ImVector_ImGuiKeyRoutingData;
struct ImGuiKeyRoutingTable
{
    ImGuiKeyRoutingIndex Index[ImGuiKey_NamedKey_COUNT];
    ImVector_ImGuiKeyRoutingData Entries;
    ImVector_ImGuiKeyRoutingData EntriesNext;
};
typedef struct ImGuiKeyOwnerData ImGuiKeyOwnerData;
struct ImGuiKeyOwnerData
{
    ImGuiID OwnerCurr;
    ImGuiID OwnerNext;
    bool LockThisFrame;
    bool LockUntilRelease;
};
typedef enum {
    ImGuiInputFlags_None = 0,
    ImGuiInputFlags_Repeat = 1 << 0,
    ImGuiInputFlags_RepeatRateDefault = 1 << 1,
    ImGuiInputFlags_RepeatRateNavMove = 1 << 2,
    ImGuiInputFlags_RepeatRateNavTweak = 1 << 3,
    ImGuiInputFlags_RepeatRateMask_ = ImGuiInputFlags_RepeatRateDefault | ImGuiInputFlags_RepeatRateNavMove | ImGuiInputFlags_RepeatRateNavTweak,
    ImGuiInputFlags_CondHovered = 1 << 4,
    ImGuiInputFlags_CondActive = 1 << 5,
    ImGuiInputFlags_CondDefault_ = ImGuiInputFlags_CondHovered | ImGuiInputFlags_CondActive,
    ImGuiInputFlags_CondMask_ = ImGuiInputFlags_CondHovered | ImGuiInputFlags_CondActive,
    ImGuiInputFlags_LockThisFrame = 1 << 6,
    ImGuiInputFlags_LockUntilRelease = 1 << 7,
    ImGuiInputFlags_RouteFocused = 1 << 8,
    ImGuiInputFlags_RouteGlobalLow = 1 << 9,
    ImGuiInputFlags_RouteGlobal = 1 << 10,
    ImGuiInputFlags_RouteGlobalHigh = 1 << 11,
    ImGuiInputFlags_RouteMask_ = ImGuiInputFlags_RouteFocused | ImGuiInputFlags_RouteGlobal | ImGuiInputFlags_RouteGlobalLow | ImGuiInputFlags_RouteGlobalHigh,
    ImGuiInputFlags_RouteAlways = 1 << 12,
    ImGuiInputFlags_RouteUnlessBgFocused= 1 << 13,
    ImGuiInputFlags_RouteExtraMask_ = ImGuiInputFlags_RouteAlways | ImGuiInputFlags_RouteUnlessBgFocused,
    ImGuiInputFlags_SupportedByIsKeyPressed = ImGuiInputFlags_Repeat | ImGuiInputFlags_RepeatRateMask_,
    ImGuiInputFlags_SupportedByShortcut = ImGuiInputFlags_Repeat | ImGuiInputFlags_RepeatRateMask_ | ImGuiInputFlags_RouteMask_ | ImGuiInputFlags_RouteExtraMask_,
    ImGuiInputFlags_SupportedBySetKeyOwner = ImGuiInputFlags_LockThisFrame | ImGuiInputFlags_LockUntilRelease,
    ImGuiInputFlags_SupportedBySetItemKeyOwner = ImGuiInputFlags_SupportedBySetKeyOwner | ImGuiInputFlags_CondMask_,
}ImGuiInputFlags_;
typedef struct ImGuiListClipperRange ImGuiListClipperRange;
struct ImGuiListClipperRange
{
    int Min;
    int Max;
    bool PosToIndexConvert;
    ImS8 PosToIndexOffsetMin;
    ImS8 PosToIndexOffsetMax;
};
typedef struct ImGuiListClipperData ImGuiListClipperData;
typedef struct ImVector_ImGuiListClipperRange {int Size;int Capacity;ImGuiListClipperRange* Data;} ImVector_ImGuiListClipperRange;
struct ImGuiListClipperData
{
    ImGuiListClipper* ListClipper;
    float LossynessOffset;
    int StepNo;
    int ItemsFrozen;
    ImVector_ImGuiListClipperRange Ranges;
};
typedef enum {
    ImGuiActivateFlags_None = 0,
    ImGuiActivateFlags_PreferInput = 1 << 0,
    ImGuiActivateFlags_PreferTweak = 1 << 1,
    ImGuiActivateFlags_TryToPreserveState = 1 << 2,
}ImGuiActivateFlags_;
typedef enum {
    ImGuiScrollFlags_None = 0,
    ImGuiScrollFlags_KeepVisibleEdgeX = 1 << 0,
    ImGuiScrollFlags_KeepVisibleEdgeY = 1 << 1,
    ImGuiScrollFlags_KeepVisibleCenterX = 1 << 2,
    ImGuiScrollFlags_KeepVisibleCenterY = 1 << 3,
    ImGuiScrollFlags_AlwaysCenterX = 1 << 4,
    ImGuiScrollFlags_AlwaysCenterY = 1 << 5,
    ImGuiScrollFlags_NoScrollParent = 1 << 6,
    ImGuiScrollFlags_MaskX_ = ImGuiScrollFlags_KeepVisibleEdgeX | ImGuiScrollFlags_KeepVisibleCenterX | ImGuiScrollFlags_AlwaysCenterX,
    ImGuiScrollFlags_MaskY_ = ImGuiScrollFlags_KeepVisibleEdgeY | ImGuiScrollFlags_KeepVisibleCenterY | ImGuiScrollFlags_AlwaysCenterY,
}ImGuiScrollFlags_;
typedef enum {
    ImGuiNavHighlightFlags_None = 0,
    ImGuiNavHighlightFlags_TypeDefault = 1 << 0,
    ImGuiNavHighlightFlags_TypeThin = 1 << 1,
    ImGuiNavHighlightFlags_AlwaysDraw = 1 << 2,
    ImGuiNavHighlightFlags_NoRounding = 1 << 3,
}ImGuiNavHighlightFlags_;
typedef enum {
    ImGuiNavMoveFlags_None = 0,
    ImGuiNavMoveFlags_LoopX = 1 << 0,
    ImGuiNavMoveFlags_LoopY = 1 << 1,
    ImGuiNavMoveFlags_WrapX = 1 << 2,
    ImGuiNavMoveFlags_WrapY = 1 << 3,
    ImGuiNavMoveFlags_AllowCurrentNavId = 1 << 4,
    ImGuiNavMoveFlags_AlsoScoreVisibleSet = 1 << 5,
    ImGuiNavMoveFlags_ScrollToEdgeY = 1 << 6,
    ImGuiNavMoveFlags_Forwarded = 1 << 7,
    ImGuiNavMoveFlags_DebugNoResult = 1 << 8,
    ImGuiNavMoveFlags_FocusApi = 1 << 9,
    ImGuiNavMoveFlags_Tabbing = 1 << 10,
    ImGuiNavMoveFlags_Activate = 1 << 11,
    ImGuiNavMoveFlags_DontSetNavHighlight = 1 << 12,
}ImGuiNavMoveFlags_;
typedef enum {
    ImGuiNavLayer_Main = 0,
    ImGuiNavLayer_Menu = 1,
    ImGuiNavLayer_COUNT
}ImGuiNavLayer;
struct ImGuiNavItemData
{
    ImGuiWindow* Window;
    ImGuiID ID;
    ImGuiID FocusScopeId;
    ImRect RectRel;
    ImGuiItemFlags InFlags;
    float DistBox;
    float DistCenter;
    float DistAxial;
};
typedef enum {
    ImGuiOldColumnFlags_None = 0,
    ImGuiOldColumnFlags_NoBorder = 1 << 0,
    ImGuiOldColumnFlags_NoResize = 1 << 1,
    ImGuiOldColumnFlags_NoPreserveWidths = 1 << 2,
    ImGuiOldColumnFlags_NoForceWithinWindow = 1 << 3,
    ImGuiOldColumnFlags_GrowParentContentsSize = 1 << 4,
}ImGuiOldColumnFlags_;
struct ImGuiOldColumnData
{
    float OffsetNorm;
    float OffsetNormBeforeResize;
    ImGuiOldColumnFlags Flags;
    ImRect ClipRect;
};
typedef struct ImVector_ImGuiOldColumnData {int Size;int Capacity;ImGuiOldColumnData* Data;} ImVector_ImGuiOldColumnData;
struct ImGuiOldColumns
{
    ImGuiID ID;
    ImGuiOldColumnFlags Flags;
    bool IsFirstFrame;
    bool IsBeingResized;
    int Current;
    int Count;
    float OffMinX, OffMaxX;
    float LineMinY, LineMaxY;
    float HostCursorPosY;
    float HostCursorMaxPosX;
    ImRect HostInitialClipRect;
    ImRect HostBackupClipRect;
    ImRect HostBackupParentWorkRect;
    ImVector_ImGuiOldColumnData Columns;
    ImDrawListSplitter Splitter;
};
typedef enum {
    ImGuiDockNodeFlags_DockSpace = 1 << 10,
    ImGuiDockNodeFlags_CentralNode = 1 << 11,
    ImGuiDockNodeFlags_NoTabBar = 1 << 12,
    ImGuiDockNodeFlags_HiddenTabBar = 1 << 13,
    ImGuiDockNodeFlags_NoWindowMenuButton = 1 << 14,
    ImGuiDockNodeFlags_NoCloseButton = 1 << 15,
    ImGuiDockNodeFlags_NoDocking = 1 << 16,
    ImGuiDockNodeFlags_NoDockingSplitMe = 1 << 17,
    ImGuiDockNodeFlags_NoDockingSplitOther = 1 << 18,
    ImGuiDockNodeFlags_NoDockingOverMe = 1 << 19,
    ImGuiDockNodeFlags_NoDockingOverOther = 1 << 20,
    ImGuiDockNodeFlags_NoDockingOverEmpty = 1 << 21,
    ImGuiDockNodeFlags_NoResizeX = 1 << 22,
    ImGuiDockNodeFlags_NoResizeY = 1 << 23,
    ImGuiDockNodeFlags_SharedFlagsInheritMask_ = ~0,
    ImGuiDockNodeFlags_NoResizeFlagsMask_ = ImGuiDockNodeFlags_NoResize | ImGuiDockNodeFlags_NoResizeX | ImGuiDockNodeFlags_NoResizeY,
    ImGuiDockNodeFlags_LocalFlagsMask_ = ImGuiDockNodeFlags_NoSplit | ImGuiDockNodeFlags_NoResizeFlagsMask_ | ImGuiDockNodeFlags_AutoHideTabBar | ImGuiDockNodeFlags_DockSpace | ImGuiDockNodeFlags_CentralNode | ImGuiDockNodeFlags_NoTabBar | ImGuiDockNodeFlags_HiddenTabBar | ImGuiDockNodeFlags_NoWindowMenuButton | ImGuiDockNodeFlags_NoCloseButton | ImGuiDockNodeFlags_NoDocking,
    ImGuiDockNodeFlags_LocalFlagsTransferMask_ = ImGuiDockNodeFlags_LocalFlagsMask_ & ~ImGuiDockNodeFlags_DockSpace,
    ImGuiDockNodeFlags_SavedFlagsMask_ = ImGuiDockNodeFlags_NoResizeFlagsMask_ | ImGuiDockNodeFlags_DockSpace | ImGuiDockNodeFlags_CentralNode | ImGuiDockNodeFlags_NoTabBar | ImGuiDockNodeFlags_HiddenTabBar | ImGuiDockNodeFlags_NoWindowMenuButton | ImGuiDockNodeFlags_NoCloseButton | ImGuiDockNodeFlags_NoDocking
}ImGuiDockNodeFlagsPrivate_;
typedef enum {
    ImGuiDataAuthority_Auto,
    ImGuiDataAuthority_DockNode,
    ImGuiDataAuthority_Window,
}ImGuiDataAuthority_;
typedef enum {
    ImGuiDockNodeState_Unknown,
    ImGuiDockNodeState_HostWindowHiddenBecauseSingleWindow,
    ImGuiDockNodeState_HostWindowHiddenBecauseWindowsAreResizing,
    ImGuiDockNodeState_HostWindowVisible,
}ImGuiDockNodeState;
typedef struct ImVector_ImGuiWindowPtr {int Size;int Capacity;ImGuiWindow** Data;} ImVector_ImGuiWindowPtr;
struct ImGuiDockNode
{
    ImGuiID ID;
    ImGuiDockNodeFlags SharedFlags;
    ImGuiDockNodeFlags LocalFlags;
    ImGuiDockNodeFlags LocalFlagsInWindows;
    ImGuiDockNodeFlags MergedFlags;
    ImGuiDockNodeState State;
    ImGuiDockNode* ParentNode;
    ImGuiDockNode* ChildNodes[2];
    ImVector_ImGuiWindowPtr Windows;
    ImGuiTabBar* TabBar;
    ImVec2 Pos;
    ImVec2 Size;
    ImVec2 SizeRef;
    ImGuiAxis SplitAxis;
    ImGuiWindowClass WindowClass;
    ImU32 LastBgColor;
    ImGuiWindow* HostWindow;
    ImGuiWindow* VisibleWindow;
    ImGuiDockNode* CentralNode;
    ImGuiDockNode* OnlyNodeWithWindows;
    int CountNodeWithWindows;
    int LastFrameAlive;
    int LastFrameActive;
    int LastFrameFocused;
    ImGuiID LastFocusedNodeId;
    ImGuiID SelectedTabId;
    ImGuiID WantCloseTabId;
    ImGuiDataAuthority AuthorityForPos :3;
    ImGuiDataAuthority AuthorityForSize :3;
    ImGuiDataAuthority AuthorityForViewport :3;
    bool IsVisible :1;
    bool IsFocused :1;
    bool IsBgDrawnThisFrame :1;
    bool HasCloseButton :1;
    bool HasWindowMenuButton :1;
    bool HasCentralNodeChild :1;
    bool WantCloseAll :1;
    bool WantLockSizeOnce :1;
    bool WantMouseMove :1;
    bool WantHiddenTabBarUpdate :1;
    bool WantHiddenTabBarToggle :1;
};
typedef enum {
    ImGuiWindowDockStyleCol_Text,
    ImGuiWindowDockStyleCol_Tab,
    ImGuiWindowDockStyleCol_TabHovered,
    ImGuiWindowDockStyleCol_TabActive,
    ImGuiWindowDockStyleCol_TabUnfocused,
    ImGuiWindowDockStyleCol_TabUnfocusedActive,
    ImGuiWindowDockStyleCol_COUNT
}ImGuiWindowDockStyleCol;
typedef struct ImGuiWindowDockStyle ImGuiWindowDockStyle;
struct ImGuiWindowDockStyle
{
    ImU32 Colors[ImGuiWindowDockStyleCol_COUNT];
};
typedef struct ImVector_ImGuiDockRequest {int Size;int Capacity;ImGuiDockRequest* Data;} ImVector_ImGuiDockRequest;
typedef struct ImVector_ImGuiDockNodeSettings {int Size;int Capacity;ImGuiDockNodeSettings* Data;} ImVector_ImGuiDockNodeSettings;
struct ImGuiDockContext
{
    ImGuiStorage Nodes;
    ImVector_ImGuiDockRequest Requests;
    ImVector_ImGuiDockNodeSettings NodesSettings;
    bool WantFullRebuild;
};
typedef struct ImGuiViewportP ImGuiViewportP;
struct ImGuiViewportP
{
    ImGuiViewport _ImGuiViewport;
    int Idx;
    int LastFrameActive;
    int LastFrontMostStampCount;
    ImGuiID LastNameHash;
    ImVec2 LastPos;
    float Alpha;
    float LastAlpha;
    short PlatformMonitor;
    bool PlatformWindowCreated;
    ImGuiWindow* Window;
    int DrawListsLastFrame[2];
    ImDrawList* DrawLists[2];
    ImDrawData DrawDataP;
    ImDrawDataBuilder DrawDataBuilder;
    ImVec2 LastPlatformPos;
    ImVec2 LastPlatformSize;
    ImVec2 LastRendererSize;
    ImVec2 WorkOffsetMin;
    ImVec2 WorkOffsetMax;
    ImVec2 BuildWorkOffsetMin;
    ImVec2 BuildWorkOffsetMax;
};
struct ImGuiWindowSettings
{
    ImGuiID ID;
    ImVec2ih Pos;
    ImVec2ih Size;
    ImVec2ih ViewportPos;
    ImGuiID ViewportId;
    ImGuiID DockId;
    ImGuiID ClassId;
    short DockOrder;
    bool Collapsed;
    bool WantApply;
};
struct ImGuiSettingsHandler
{
    const char* TypeName;
    ImGuiID TypeHash;
    void (*ClearAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler);
    void (*ReadInitFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler);
    void* (*ReadOpenFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, const char* name);
    void (*ReadLineFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, void* entry, const char* line);
    void (*ApplyAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler);
    void (*WriteAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer* out_buf);
    void* UserData;
};
typedef enum {
    ImGuiDebugLogFlags_None = 0,
    ImGuiDebugLogFlags_EventActiveId = 1 << 0,
    ImGuiDebugLogFlags_EventFocus = 1 << 1,
    ImGuiDebugLogFlags_EventPopup = 1 << 2,
    ImGuiDebugLogFlags_EventNav = 1 << 3,
    ImGuiDebugLogFlags_EventClipper = 1 << 4,
    ImGuiDebugLogFlags_EventIO = 1 << 5,
    ImGuiDebugLogFlags_EventDocking = 1 << 6,
    ImGuiDebugLogFlags_EventViewport = 1 << 7,
    ImGuiDebugLogFlags_EventMask_ = ImGuiDebugLogFlags_EventActiveId | ImGuiDebugLogFlags_EventFocus | ImGuiDebugLogFlags_EventPopup | ImGuiDebugLogFlags_EventNav | ImGuiDebugLogFlags_EventClipper | ImGuiDebugLogFlags_EventIO | ImGuiDebugLogFlags_EventDocking | ImGuiDebugLogFlags_EventViewport,
    ImGuiDebugLogFlags_OutputToTTY = 1 << 10,
}ImGuiDebugLogFlags_;
struct ImGuiMetricsConfig
{
    bool ShowDebugLog;
    bool ShowStackTool;
    bool ShowWindowsRects;
    bool ShowWindowsBeginOrder;
    bool ShowTablesRects;
    bool ShowDrawCmdMesh;
    bool ShowDrawCmdBoundingBoxes;
    bool ShowDockingNodes;
    int ShowWindowsRectsType;
    int ShowTablesRectsType;
};
typedef struct ImGuiStackLevelInfo ImGuiStackLevelInfo;
struct ImGuiStackLevelInfo
{
    ImGuiID ID;
    ImS8 QueryFrameCount;
    bool QuerySuccess;
    ImGuiDataType DataType : 8;
    char Desc[57];
};
typedef struct ImGuiStackTool ImGuiStackTool;
typedef struct ImVector_ImGuiStackLevelInfo {int Size;int Capacity;ImGuiStackLevelInfo* Data;} ImVector_ImGuiStackLevelInfo;
struct ImGuiStackTool
{
    int LastActiveFrame;
    int StackLevel;
    ImGuiID QueryId;
    ImVector_ImGuiStackLevelInfo Results;
    bool CopyToClipboardOnCtrlC;
    float CopyToClipboardLastTime;
};
typedef void (*ImGuiContextHookCallback)(ImGuiContext* ctx, ImGuiContextHook* hook);
typedef enum { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost, ImGuiContextHookType_EndFramePre, ImGuiContextHookType_EndFramePost, ImGuiContextHookType_RenderPre, ImGuiContextHookType_RenderPost, ImGuiContextHookType_Shutdown, ImGuiContextHookType_PendingRemoval_ }ImGuiContextHookType;
struct ImGuiContextHook
{
    ImGuiID HookId;
    ImGuiContextHookType Type;
    ImGuiID Owner;
    ImGuiContextHookCallback Callback;
    void* UserData;
};
typedef struct ImVector_ImGuiInputEvent {int Size;int Capacity;ImGuiInputEvent* Data;} ImVector_ImGuiInputEvent;
typedef struct ImVector_ImGuiWindowStackData {int Size;int Capacity;ImGuiWindowStackData* Data;} ImVector_ImGuiWindowStackData;
typedef struct ImVector_ImGuiColorMod {int Size;int Capacity;ImGuiColorMod* Data;} ImVector_ImGuiColorMod;
typedef struct ImVector_ImGuiStyleMod {int Size;int Capacity;ImGuiStyleMod* Data;} ImVector_ImGuiStyleMod;
typedef struct ImVector_ImGuiID {int Size;int Capacity;ImGuiID* Data;} ImVector_ImGuiID;
typedef struct ImVector_ImGuiItemFlags {int Size;int Capacity;ImGuiItemFlags* Data;} ImVector_ImGuiItemFlags;
typedef struct ImVector_ImGuiGroupData {int Size;int Capacity;ImGuiGroupData* Data;} ImVector_ImGuiGroupData;
typedef struct ImVector_ImGuiPopupData {int Size;int Capacity;ImGuiPopupData* Data;} ImVector_ImGuiPopupData;
typedef struct ImVector_ImGuiViewportPPtr {int Size;int Capacity;ImGuiViewportP** Data;} ImVector_ImGuiViewportPPtr;
typedef struct ImVector_unsigned_char {int Size;int Capacity;unsigned char* Data;} ImVector_unsigned_char;
typedef struct ImVector_ImGuiListClipperData {int Size;int Capacity;ImGuiListClipperData* Data;} ImVector_ImGuiListClipperData;
typedef struct ImVector_ImGuiTableTempData {int Size;int Capacity;ImGuiTableTempData* Data;} ImVector_ImGuiTableTempData;
typedef struct ImVector_ImGuiTable {int Size;int Capacity;ImGuiTable* Data;} ImVector_ImGuiTable;
typedef struct ImPool_ImGuiTable {ImVector_ImGuiTable Buf;ImGuiStorage Map;ImPoolIdx FreeIdx;ImPoolIdx AliveCount;} ImPool_ImGuiTable;
typedef struct ImVector_ImGuiTabBar {int Size;int Capacity;ImGuiTabBar* Data;} ImVector_ImGuiTabBar;
typedef struct ImPool_ImGuiTabBar {ImVector_ImGuiTabBar Buf;ImGuiStorage Map;ImPoolIdx FreeIdx;ImPoolIdx AliveCount;} ImPool_ImGuiTabBar;
typedef struct ImVector_ImGuiPtrOrIndex {int Size;int Capacity;ImGuiPtrOrIndex* Data;} ImVector_ImGuiPtrOrIndex;
typedef struct ImVector_ImGuiShrinkWidthItem {int Size;int Capacity;ImGuiShrinkWidthItem* Data;} ImVector_ImGuiShrinkWidthItem;
typedef struct ImVector_ImGuiSettingsHandler {int Size;int Capacity;ImGuiSettingsHandler* Data;} ImVector_ImGuiSettingsHandler;
typedef struct ImChunkStream_ImGuiWindowSettings {ImVector_char Buf;} ImChunkStream_ImGuiWindowSettings;
typedef struct ImChunkStream_ImGuiTableSettings {ImVector_char Buf;} ImChunkStream_ImGuiTableSettings;
typedef struct ImVector_ImGuiContextHook {int Size;int Capacity;ImGuiContextHook* Data;} ImVector_ImGuiContextHook;
struct ImGuiContext
{
    bool Initialized;
    bool FontAtlasOwnedByContext;
    ImGuiIO IO;
    ImGuiPlatformIO PlatformIO;
    ImVector_ImGuiInputEvent InputEventsQueue;
    ImVector_ImGuiInputEvent InputEventsTrail;
    ImGuiStyle Style;
    ImGuiConfigFlags ConfigFlagsCurrFrame;
    ImGuiConfigFlags ConfigFlagsLastFrame;
    ImFont* Font;
    float FontSize;
    float FontBaseSize;
    ImDrawListSharedData DrawListSharedData;
    double Time;
    int FrameCount;
    int FrameCountEnded;
    int FrameCountPlatformEnded;
    int FrameCountRendered;
    bool WithinFrameScope;
    bool WithinFrameScopeWithImplicitWindow;
    bool WithinEndChild;
    bool GcCompactAll;
    bool TestEngineHookItems;
    void* TestEngine;
    ImVector_ImGuiWindowPtr Windows;
    ImVector_ImGuiWindowPtr WindowsFocusOrder;
    ImVector_ImGuiWindowPtr WindowsTempSortBuffer;
    ImVector_ImGuiWindowStackData CurrentWindowStack;
    ImGuiStorage WindowsById;
    int WindowsActiveCount;
    ImVec2 WindowsHoverPadding;
    ImGuiWindow* CurrentWindow;
    ImGuiWindow* HoveredWindow;
    ImGuiWindow* HoveredWindowUnderMovingWindow;
    ImGuiWindow* MovingWindow;
    ImGuiWindow* WheelingWindow;
    ImVec2 WheelingWindowRefMousePos;
    float WheelingWindowReleaseTimer;
    ImGuiID DebugHookIdInfo;
    ImGuiID HoveredId;
    ImGuiID HoveredIdPreviousFrame;
    bool HoveredIdAllowOverlap;
    bool HoveredIdDisabled;
    float HoveredIdTimer;
    float HoveredIdNotActiveTimer;
    ImGuiID ActiveId;
    ImGuiID ActiveIdIsAlive;
    float ActiveIdTimer;
    bool ActiveIdIsJustActivated;
    bool ActiveIdAllowOverlap;
    bool ActiveIdNoClearOnFocusLoss;
    bool ActiveIdHasBeenPressedBefore;
    bool ActiveIdHasBeenEditedBefore;
    bool ActiveIdHasBeenEditedThisFrame;
    ImVec2 ActiveIdClickOffset;
    ImGuiWindow* ActiveIdWindow;
    ImGuiInputSource ActiveIdSource;
    int ActiveIdMouseButton;
    ImGuiID ActiveIdPreviousFrame;
    bool ActiveIdPreviousFrameIsAlive;
    bool ActiveIdPreviousFrameHasBeenEditedBefore;
    ImGuiWindow* ActiveIdPreviousFrameWindow;
    ImGuiID LastActiveId;
    float LastActiveIdTimer;
    ImGuiKeyOwnerData KeysOwnerData[ImGuiKey_NamedKey_COUNT];
    ImGuiKeyRoutingTable KeysRoutingTable;
    ImU32 ActiveIdUsingNavDirMask;
    bool ActiveIdUsingAllKeyboardKeys;
    ImU32 ActiveIdUsingNavInputMask;
    ImGuiID CurrentFocusScopeId;
    ImGuiItemFlags CurrentItemFlags;
    ImGuiID DebugLocateId;
    ImGuiNextItemData NextItemData;
    ImGuiLastItemData LastItemData;
    ImGuiNextWindowData NextWindowData;
    ImVector_ImGuiColorMod ColorStack;
    ImVector_ImGuiStyleMod StyleVarStack;
    ImVector_ImFontPtr FontStack;
    ImVector_ImGuiID FocusScopeStack;
    ImVector_ImGuiItemFlags ItemFlagsStack;
    ImVector_ImGuiGroupData GroupStack;
    ImVector_ImGuiPopupData OpenPopupStack;
    ImVector_ImGuiPopupData BeginPopupStack;
    int BeginMenuCount;
    ImVector_ImGuiViewportPPtr Viewports;
    float CurrentDpiScale;
    ImGuiViewportP* CurrentViewport;
    ImGuiViewportP* MouseViewport;
    ImGuiViewportP* MouseLastHoveredViewport;
    ImGuiID PlatformLastFocusedViewportId;
    ImGuiPlatformMonitor FallbackMonitor;
    int ViewportFrontMostStampCount;
    ImGuiWindow* NavWindow;
    ImGuiID NavId;
    ImGuiID NavFocusScopeId;
    ImGuiID NavActivateId;
    ImGuiID NavActivateDownId;
    ImGuiID NavActivatePressedId;
    ImGuiID NavActivateInputId;
    ImGuiActivateFlags NavActivateFlags;
    ImGuiID NavJustMovedToId;
    ImGuiID NavJustMovedToFocusScopeId;
    ImGuiKeyChord NavJustMovedToKeyMods;
    ImGuiID NavNextActivateId;
    ImGuiActivateFlags NavNextActivateFlags;
    ImGuiInputSource NavInputSource;
    ImGuiNavLayer NavLayer;
    bool NavIdIsAlive;
    bool NavMousePosDirty;
    bool NavDisableHighlight;
    bool NavDisableMouseHover;
    bool NavAnyRequest;
    bool NavInitRequest;
    bool NavInitRequestFromMove;
    ImGuiID NavInitResultId;
    ImRect NavInitResultRectRel;
    bool NavMoveSubmitted;
    bool NavMoveScoringItems;
    bool NavMoveForwardToNextFrame;
    ImGuiNavMoveFlags NavMoveFlags;
    ImGuiScrollFlags NavMoveScrollFlags;
    ImGuiKeyChord NavMoveKeyMods;
    ImGuiDir NavMoveDir;
    ImGuiDir NavMoveDirForDebug;
    ImGuiDir NavMoveClipDir;
    ImRect NavScoringRect;
    ImRect NavScoringNoClipRect;
    int NavScoringDebugCount;
    int NavTabbingDir;
    int NavTabbingCounter;
    ImGuiNavItemData NavMoveResultLocal;
    ImGuiNavItemData NavMoveResultLocalVisible;
    ImGuiNavItemData NavMoveResultOther;
    ImGuiNavItemData NavTabbingResultFirst;
    ImGuiKeyChord ConfigNavWindowingKeyNext;
    ImGuiKeyChord ConfigNavWindowingKeyPrev;
    ImGuiWindow* NavWindowingTarget;
    ImGuiWindow* NavWindowingTargetAnim;
    ImGuiWindow* NavWindowingListWindow;
    float NavWindowingTimer;
    float NavWindowingHighlightAlpha;
    bool NavWindowingToggleLayer;
    ImVec2 NavWindowingAccumDeltaPos;
    ImVec2 NavWindowingAccumDeltaSize;
    float DimBgRatio;
    ImGuiMouseCursor MouseCursor;
    bool DragDropActive;
    bool DragDropWithinSource;
    bool DragDropWithinTarget;
    ImGuiDragDropFlags DragDropSourceFlags;
    int DragDropSourceFrameCount;
    int DragDropMouseButton;
    ImGuiPayload DragDropPayload;
    ImRect DragDropTargetRect;
    ImGuiID DragDropTargetId;
    ImGuiDragDropFlags DragDropAcceptFlags;
    float DragDropAcceptIdCurrRectSurface;
    ImGuiID DragDropAcceptIdCurr;
    ImGuiID DragDropAcceptIdPrev;
    int DragDropAcceptFrameCount;
    ImGuiID DragDropHoldJustPressedId;
    ImVector_unsigned_char DragDropPayloadBufHeap;
    unsigned char DragDropPayloadBufLocal[16];
    int ClipperTempDataStacked;
    ImVector_ImGuiListClipperData ClipperTempData;
    ImGuiTable* CurrentTable;
    int TablesTempDataStacked;
    ImVector_ImGuiTableTempData TablesTempData;
    ImPool_ImGuiTable Tables;
    ImVector_float TablesLastTimeActive;
    ImVector_ImDrawChannel DrawChannelsTempMergeBuffer;
    ImGuiTabBar* CurrentTabBar;
    ImPool_ImGuiTabBar TabBars;
    ImVector_ImGuiPtrOrIndex CurrentTabBarStack;
    ImVector_ImGuiShrinkWidthItem ShrinkWidthBuffer;
    ImGuiID HoverDelayId;
    ImGuiID HoverDelayIdPreviousFrame;
    float HoverDelayTimer;
    float HoverDelayClearTimer;
    ImVec2 MouseLastValidPos;
    ImGuiInputTextState InputTextState;
    ImFont InputTextPasswordFont;
    ImGuiID TempInputId;
    ImGuiColorEditFlags ColorEditOptions;
    float ColorEditLastHue;
    float ColorEditLastSat;
    ImU32 ColorEditLastColor;
    ImVec4 ColorPickerRef;
    ImGuiComboPreviewData ComboPreviewData;
    float SliderGrabClickOffset;
    float SliderCurrentAccum;
    bool SliderCurrentAccumDirty;
    bool DragCurrentAccumDirty;
    float DragCurrentAccum;
    float DragSpeedDefaultRatio;
    float ScrollbarClickDeltaToGrabCenter;
    float DisabledAlphaBackup;
    short DisabledStackSize;
    short TooltipOverrideCount;
    ImVector_char ClipboardHandlerData;
    ImVector_ImGuiID MenusIdSubmittedThisFrame;
    ImGuiPlatformImeData PlatformImeData;
    ImGuiPlatformImeData PlatformImeDataPrev;
    ImGuiID PlatformImeViewport;
    char PlatformLocaleDecimalPoint;
    ImGuiDockContext DockContext;
    bool SettingsLoaded;
    float SettingsDirtyTimer;
    ImGuiTextBuffer SettingsIniData;
    ImVector_ImGuiSettingsHandler SettingsHandlers;
    ImChunkStream_ImGuiWindowSettings SettingsWindows;
    ImChunkStream_ImGuiTableSettings SettingsTables;
    ImVector_ImGuiContextHook Hooks;
    ImGuiID HookIdNext;
    bool LogEnabled;
    ImGuiLogType LogType;
    ImFileHandle LogFile;
    ImGuiTextBuffer LogBuffer;
    const char* LogNextPrefix;
    const char* LogNextSuffix;
    float LogLinePosY;
    bool LogLineFirstItem;
    int LogDepthRef;
    int LogDepthToExpand;
    int LogDepthToExpandDefault;
    ImGuiDebugLogFlags DebugLogFlags;
    ImGuiTextBuffer DebugLogBuf;
    ImGuiTextIndex DebugLogIndex;
    ImU8 DebugLocateFrames;
    bool DebugItemPickerActive;
    ImU8 DebugItemPickerMouseButton;
    ImGuiID DebugItemPickerBreakId;
    ImGuiMetricsConfig DebugMetricsConfig;
    ImGuiStackTool DebugStackTool;
    ImGuiDockNode* DebugHoveredDockNode;
    float FramerateSecPerFrame[60];
    int FramerateSecPerFrameIdx;
    int FramerateSecPerFrameCount;
    float FramerateSecPerFrameAccum;
    int WantCaptureMouseNextFrame;
    int WantCaptureKeyboardNextFrame;
    int WantTextInputNextFrame;
    ImVector_char TempBuffer;
};
struct ImGuiWindowTempData
{
    ImVec2 CursorPos;
    ImVec2 CursorPosPrevLine;
    ImVec2 CursorStartPos;
    ImVec2 CursorMaxPos;
    ImVec2 IdealMaxPos;
    ImVec2 CurrLineSize;
    ImVec2 PrevLineSize;
    float CurrLineTextBaseOffset;
    float PrevLineTextBaseOffset;
    bool IsSameLine;
    bool IsSetPos;
    ImVec1 Indent;
    ImVec1 ColumnsOffset;
    ImVec1 GroupOffset;
    ImVec2 CursorStartPosLossyness;
    ImGuiNavLayer NavLayerCurrent;
    short NavLayersActiveMask;
    short NavLayersActiveMaskNext;
    bool NavHideHighlightOneFrame;
    bool NavHasScroll;
    bool MenuBarAppending;
    ImVec2 MenuBarOffset;
    ImGuiMenuColumns MenuColumns;
    int TreeDepth;
    ImU32 TreeJumpToParentOnPopMask;
    ImVector_ImGuiWindowPtr ChildWindows;
    ImGuiStorage* StateStorage;
    ImGuiOldColumns* CurrentColumns;
    int CurrentTableIdx;
    ImGuiLayoutType LayoutType;
    ImGuiLayoutType ParentLayoutType;
    float ItemWidth;
    float TextWrapPos;
    ImVector_float ItemWidthStack;
    ImVector_float TextWrapPosStack;
};
typedef struct ImVector_ImGuiOldColumns {int Size;int Capacity;ImGuiOldColumns* Data;} ImVector_ImGuiOldColumns;
struct ImGuiWindow
{
    char* Name;
    ImGuiID ID;
    ImGuiWindowFlags Flags, FlagsPreviousFrame;
    ImGuiWindowClass WindowClass;
    ImGuiViewportP* Viewport;
    ImGuiID ViewportId;
    ImVec2 ViewportPos;
    int ViewportAllowPlatformMonitorExtend;
    ImVec2 Pos;
    ImVec2 Size;
    ImVec2 SizeFull;
    ImVec2 ContentSize;
    ImVec2 ContentSizeIdeal;
    ImVec2 ContentSizeExplicit;
    ImVec2 WindowPadding;
    float WindowRounding;
    float WindowBorderSize;
    int NameBufLen;
    ImGuiID MoveId;
    ImGuiID TabId;
    ImGuiID ChildId;
    ImVec2 Scroll;
    ImVec2 ScrollMax;
    ImVec2 ScrollTarget;
    ImVec2 ScrollTargetCenterRatio;
    ImVec2 ScrollTargetEdgeSnapDist;
    ImVec2 ScrollbarSizes;
    bool ScrollbarX, ScrollbarY;
    bool ViewportOwned;
    bool Active;
    bool WasActive;
    bool WriteAccessed;
    bool Collapsed;
    bool WantCollapseToggle;
    bool SkipItems;
    bool Appearing;
    bool Hidden;
    bool IsFallbackWindow;
    bool IsExplicitChild;
    bool HasCloseButton;
    signed char ResizeBorderHeld;
    short BeginCount;
    short BeginCountPreviousFrame;
    short BeginOrderWithinParent;
    short BeginOrderWithinContext;
    short FocusOrder;
    ImGuiID PopupId;
    ImS8 AutoFitFramesX, AutoFitFramesY;
    ImS8 AutoFitChildAxises;
    bool AutoFitOnlyGrows;
    ImGuiDir AutoPosLastDirection;
    ImS8 HiddenFramesCanSkipItems;
    ImS8 HiddenFramesCannotSkipItems;
    ImS8 HiddenFramesForRenderOnly;
    ImS8 DisableInputsFrames;
    ImGuiCond SetWindowPosAllowFlags : 8;
    ImGuiCond SetWindowSizeAllowFlags : 8;
    ImGuiCond SetWindowCollapsedAllowFlags : 8;
    ImGuiCond SetWindowDockAllowFlags : 8;
    ImVec2 SetWindowPosVal;
    ImVec2 SetWindowPosPivot;
    ImVector_ImGuiID IDStack;
    ImGuiWindowTempData DC;
    ImRect OuterRectClipped;
    ImRect InnerRect;
    ImRect InnerClipRect;
    ImRect WorkRect;
    ImRect ParentWorkRect;
    ImRect ClipRect;
    ImRect ContentRegionRect;
    ImVec2ih HitTestHoleSize;
    ImVec2ih HitTestHoleOffset;
    int LastFrameActive;
    int LastFrameJustFocused;
    float LastTimeActive;
    float ItemWidthDefault;
    ImGuiStorage StateStorage;
    ImVector_ImGuiOldColumns ColumnsStorage;
    float FontWindowScale;
    float FontDpiScale;
    int SettingsOffset;
    ImDrawList* DrawList;
    ImDrawList DrawListInst;
    ImGuiWindow* ParentWindow;
    ImGuiWindow* ParentWindowInBeginStack;
    ImGuiWindow* RootWindow;
    ImGuiWindow* RootWindowPopupTree;
    ImGuiWindow* RootWindowDockTree;
    ImGuiWindow* RootWindowForTitleBarHighlight;
    ImGuiWindow* RootWindowForNav;
    ImGuiWindow* NavLastChildNavWindow;
    ImGuiID NavLastIds[ImGuiNavLayer_COUNT];
    ImRect NavRectRel[ImGuiNavLayer_COUNT];
    ImGuiID NavRootFocusScopeId;
    int MemoryDrawListIdxCapacity;
    int MemoryDrawListVtxCapacity;
    bool MemoryCompacted;
    bool DockIsActive :1;
    bool DockNodeIsVisible :1;
    bool DockTabIsVisible :1;
    bool DockTabWantClose :1;
    short DockOrder;
    ImGuiWindowDockStyle DockStyle;
    ImGuiDockNode* DockNode;
    ImGuiDockNode* DockNodeAsHost;
    ImGuiID DockId;
    ImGuiItemStatusFlags DockTabItemStatusFlags;
    ImRect DockTabItemRect;
};
typedef enum {
    ImGuiTabBarFlags_DockNode = 1 << 20,
    ImGuiTabBarFlags_IsFocused = 1 << 21,
    ImGuiTabBarFlags_SaveSettings = 1 << 22,
}ImGuiTabBarFlagsPrivate_;
typedef enum {
    ImGuiTabItemFlags_SectionMask_ = ImGuiTabItemFlags_Leading | ImGuiTabItemFlags_Trailing,
    ImGuiTabItemFlags_NoCloseButton = 1 << 20,
    ImGuiTabItemFlags_Button = 1 << 21,
    ImGuiTabItemFlags_Unsorted = 1 << 22,
    ImGuiTabItemFlags_Preview = 1 << 23,
}ImGuiTabItemFlagsPrivate_;
struct ImGuiTabItem
{
    ImGuiID ID;
    ImGuiTabItemFlags Flags;
    ImGuiWindow* Window;
    int LastFrameVisible;
    int LastFrameSelected;
    float Offset;
    float Width;
    float ContentWidth;
    float RequestedWidth;
    ImS32 NameOffset;
    ImS16 BeginOrder;
    ImS16 IndexDuringLayout;
    bool WantClose;
};
typedef struct ImVector_ImGuiTabItem {int Size;int Capacity;ImGuiTabItem* Data;} ImVector_ImGuiTabItem;
struct ImGuiTabBar
{
    ImVector_ImGuiTabItem Tabs;
    ImGuiTabBarFlags Flags;
    ImGuiID ID;
    ImGuiID SelectedTabId;
    ImGuiID NextSelectedTabId;
    ImGuiID VisibleTabId;
    int CurrFrameVisible;
    int PrevFrameVisible;
    ImRect BarRect;
    float CurrTabsContentsHeight;
    float PrevTabsContentsHeight;
    float WidthAllTabs;
    float WidthAllTabsIdeal;
    float ScrollingAnim;
    float ScrollingTarget;
    float ScrollingTargetDistToVisibility;
    float ScrollingSpeed;
    float ScrollingRectMinX;
    float ScrollingRectMaxX;
    ImGuiID ReorderRequestTabId;
    ImS16 ReorderRequestOffset;
    ImS8 BeginCount;
    bool WantLayout;
    bool VisibleTabWasSubmitted;
    bool TabsAddedNew;
    ImS16 TabsActiveCount;
    ImS16 LastTabItemIdx;
    float ItemSpacingY;
    ImVec2 FramePadding;
    ImVec2 BackupCursorPos;
    ImGuiTextBuffer TabsNames;
};
typedef ImS8 ImGuiTableColumnIdx;
typedef ImU8 ImGuiTableDrawChannelIdx;
struct ImGuiTableColumn
{
    ImGuiTableColumnFlags Flags;
    float WidthGiven;
    float MinX;
    float MaxX;
    float WidthRequest;
    float WidthAuto;
    float StretchWeight;
    float InitStretchWeightOrWidth;
    ImRect ClipRect;
    ImGuiID UserID;
    float WorkMinX;
    float WorkMaxX;
    float ItemWidth;
    float ContentMaxXFrozen;
    float ContentMaxXUnfrozen;
    float ContentMaxXHeadersUsed;
    float ContentMaxXHeadersIdeal;
    ImS16 NameOffset;
    ImGuiTableColumnIdx DisplayOrder;
    ImGuiTableColumnIdx IndexWithinEnabledSet;
    ImGuiTableColumnIdx PrevEnabledColumn;
    ImGuiTableColumnIdx NextEnabledColumn;
    ImGuiTableColumnIdx SortOrder;
    ImGuiTableDrawChannelIdx DrawChannelCurrent;
    ImGuiTableDrawChannelIdx DrawChannelFrozen;
    ImGuiTableDrawChannelIdx DrawChannelUnfrozen;
    bool IsEnabled;
    bool IsUserEnabled;
    bool IsUserEnabledNextFrame;
    bool IsVisibleX;
    bool IsVisibleY;
    bool IsRequestOutput;
    bool IsSkipItems;
    bool IsPreserveWidthAuto;
    ImS8 NavLayerCurrent;
    ImU8 AutoFitQueue;
    ImU8 CannotSkipItemsQueue;
    ImU8 SortDirection : 2;
    ImU8 SortDirectionsAvailCount : 2;
    ImU8 SortDirectionsAvailMask : 4;
    ImU8 SortDirectionsAvailList;
};
typedef struct ImGuiTableCellData ImGuiTableCellData;
struct ImGuiTableCellData
{
    ImU32 BgColor;
    ImGuiTableColumnIdx Column;
};
struct ImGuiTableInstanceData
{
    float LastOuterHeight;
    float LastFirstRowHeight;
};
typedef struct ImSpan_ImGuiTableColumn {ImGuiTableColumn* Data;ImGuiTableColumn* DataEnd;} ImSpan_ImGuiTableColumn;
typedef struct ImSpan_ImGuiTableColumnIdx {ImGuiTableColumnIdx* Data;ImGuiTableColumnIdx* DataEnd;} ImSpan_ImGuiTableColumnIdx;
typedef struct ImSpan_ImGuiTableCellData {ImGuiTableCellData* Data;ImGuiTableCellData* DataEnd;} ImSpan_ImGuiTableCellData;
typedef struct ImVector_ImGuiTableInstanceData {int Size;int Capacity;ImGuiTableInstanceData* Data;} ImVector_ImGuiTableInstanceData;
typedef struct ImVector_ImGuiTableColumnSortSpecs {int Size;int Capacity;ImGuiTableColumnSortSpecs* Data;} ImVector_ImGuiTableColumnSortSpecs;
struct ImGuiTable
{
    ImGuiID ID;
    ImGuiTableFlags Flags;
    void* RawData;
    ImGuiTableTempData* TempData;
    ImSpan_ImGuiTableColumn Columns;
    ImSpan_ImGuiTableColumnIdx DisplayOrderToIndex;
    ImSpan_ImGuiTableCellData RowCellData;
    ImU64 EnabledMaskByDisplayOrder;
    ImU64 EnabledMaskByIndex;
    ImU64 VisibleMaskByIndex;
    ImU64 RequestOutputMaskByIndex;
    ImGuiTableFlags SettingsLoadedFlags;
    int SettingsOffset;
    int LastFrameActive;
    int ColumnsCount;
    int CurrentRow;
    int CurrentColumn;
    ImS16 InstanceCurrent;
    ImS16 InstanceInteracted;
    float RowPosY1;
    float RowPosY2;
    float RowMinHeight;
    float RowTextBaseline;
    float RowIndentOffsetX;
    ImGuiTableRowFlags RowFlags : 16;
    ImGuiTableRowFlags LastRowFlags : 16;
    int RowBgColorCounter;
    ImU32 RowBgColor[2];
    ImU32 BorderColorStrong;
    ImU32 BorderColorLight;
    float BorderX1;
    float BorderX2;
    float HostIndentX;
    float MinColumnWidth;
    float OuterPaddingX;
    float CellPaddingX;
    float CellPaddingY;
    float CellSpacingX1;
    float CellSpacingX2;
    float InnerWidth;
    float ColumnsGivenWidth;
    float ColumnsAutoFitWidth;
    float ColumnsStretchSumWeights;
    float ResizedColumnNextWidth;
    float ResizeLockMinContentsX2;
    float RefScale;
    ImRect OuterRect;
    ImRect InnerRect;
    ImRect WorkRect;
    ImRect InnerClipRect;
    ImRect BgClipRect;
    ImRect Bg0ClipRectForDrawCmd;
    ImRect Bg2ClipRectForDrawCmd;
    ImRect HostClipRect;
    ImRect HostBackupInnerClipRect;
    ImGuiWindow* OuterWindow;
    ImGuiWindow* InnerWindow;
    ImGuiTextBuffer ColumnsNames;
    ImDrawListSplitter* DrawSplitter;
    ImGuiTableInstanceData InstanceDataFirst;
    ImVector_ImGuiTableInstanceData InstanceDataExtra;
    ImGuiTableColumnSortSpecs SortSpecsSingle;
    ImVector_ImGuiTableColumnSortSpecs SortSpecsMulti;
    ImGuiTableSortSpecs SortSpecs;
    ImGuiTableColumnIdx SortSpecsCount;
    ImGuiTableColumnIdx ColumnsEnabledCount;
    ImGuiTableColumnIdx ColumnsEnabledFixedCount;
    ImGuiTableColumnIdx DeclColumnsCount;
    ImGuiTableColumnIdx HoveredColumnBody;
    ImGuiTableColumnIdx HoveredColumnBorder;
    ImGuiTableColumnIdx AutoFitSingleColumn;
    ImGuiTableColumnIdx ResizedColumn;
    ImGuiTableColumnIdx LastResizedColumn;
    ImGuiTableColumnIdx HeldHeaderColumn;
    ImGuiTableColumnIdx ReorderColumn;
    ImGuiTableColumnIdx ReorderColumnDir;
    ImGuiTableColumnIdx LeftMostEnabledColumn;
    ImGuiTableColumnIdx RightMostEnabledColumn;
    ImGuiTableColumnIdx LeftMostStretchedColumn;
    ImGuiTableColumnIdx RightMostStretchedColumn;
    ImGuiTableColumnIdx ContextPopupColumn;
    ImGuiTableColumnIdx FreezeRowsRequest;
    ImGuiTableColumnIdx FreezeRowsCount;
    ImGuiTableColumnIdx FreezeColumnsRequest;
    ImGuiTableColumnIdx FreezeColumnsCount;
    ImGuiTableColumnIdx RowCellDataCurrent;
    ImGuiTableDrawChannelIdx DummyDrawChannel;
    ImGuiTableDrawChannelIdx Bg2DrawChannelCurrent;
    ImGuiTableDrawChannelIdx Bg2DrawChannelUnfrozen;
    bool IsLayoutLocked;
    bool IsInsideRow;
    bool IsInitializing;
    bool IsSortSpecsDirty;
    bool IsUsingHeaders;
    bool IsContextPopupOpen;
    bool IsSettingsRequestLoad;
    bool IsSettingsDirty;
    bool IsDefaultDisplayOrder;
    bool IsResetAllRequest;
    bool IsResetDisplayOrderRequest;
    bool IsUnfrozenRows;
    bool IsDefaultSizingPolicy;
    bool MemoryCompacted;
    bool HostSkipItems;
};
struct ImGuiTableTempData
{
    int TableIndex;
    float LastTimeActive;
    ImVec2 UserOuterSize;
    ImDrawListSplitter DrawSplitter;
    ImRect HostBackupWorkRect;
    ImRect HostBackupParentWorkRect;
    ImVec2 HostBackupPrevLineSize;
    ImVec2 HostBackupCurrLineSize;
    ImVec2 HostBackupCursorMaxPos;
    ImVec1 HostBackupColumnsOffset;
    float HostBackupItemWidth;
    int HostBackupItemWidthStackSize;
};
typedef struct ImGuiTableColumnSettings ImGuiTableColumnSettings;
struct ImGuiTableColumnSettings
{
    float WidthOrWeight;
    ImGuiID UserID;
    ImGuiTableColumnIdx Index;
    ImGuiTableColumnIdx DisplayOrder;
    ImGuiTableColumnIdx SortOrder;
    ImU8 SortDirection : 2;
    ImU8 IsEnabled : 1;
    ImU8 IsStretch : 1;
};
struct ImGuiTableSettings
{
    ImGuiID ID;
    ImGuiTableFlags SaveFlags;
    float RefScale;
    ImGuiTableColumnIdx ColumnsCount;
    ImGuiTableColumnIdx ColumnsCountMax;
    bool WantApply;
};
struct ImFontBuilderIO
{
    bool (*FontBuilder_Build)(ImFontAtlas* atlas);
};
#define IMGUI_HAS_DOCK       1
#else
struct GLFWwindow;
struct SDL_Window;
typedef union SDL_Event SDL_Event;
#endif // CIMGUI_DEFINE_ENUMS_AND_STRUCTS
#ifndef CIMGUI_DEFINE_ENUMS_AND_STRUCTS
typedef struct ImGuiStorage::ImGuiStoragePair ImGuiStoragePair;
typedef struct ImGuiTextFilter::ImGuiTextRange ImGuiTextRange;
typedef ImStb::STB_TexteditState STB_TexteditState;
typedef ImStb::StbTexteditRow StbTexteditRow;
typedef ImStb::StbUndoRecord StbUndoRecord;
typedef ImStb::StbUndoState StbUndoState;
typedef ImChunkStream<ImGuiTableSettings> ImChunkStream_ImGuiTableSettings;
typedef ImChunkStream<ImGuiWindowSettings> ImChunkStream_ImGuiWindowSettings;
typedef ImPool<ImGuiTabBar> ImPool_ImGuiTabBar;
typedef ImPool<ImGuiTable> ImPool_ImGuiTable;
typedef ImSpan<ImGuiTableCellData> ImSpan_ImGuiTableCellData;
typedef ImSpan<ImGuiTableColumn> ImSpan_ImGuiTableColumn;
typedef ImSpan<ImGuiTableColumnIdx> ImSpan_ImGuiTableColumnIdx;
typedef ImVector<ImDrawChannel> ImVector_ImDrawChannel;
typedef ImVector<ImDrawCmd> ImVector_ImDrawCmd;
typedef ImVector<ImDrawIdx> ImVector_ImDrawIdx;
typedef ImVector<ImDrawList*> ImVector_ImDrawListPtr;
typedef ImVector<ImDrawVert> ImVector_ImDrawVert;
typedef ImVector<ImFont*> ImVector_ImFontPtr;
typedef ImVector<ImFontAtlasCustomRect> ImVector_ImFontAtlasCustomRect;
typedef ImVector<ImFontConfig> ImVector_ImFontConfig;
typedef ImVector<ImFontGlyph> ImVector_ImFontGlyph;
typedef ImVector<ImGuiColorMod> ImVector_ImGuiColorMod;
typedef ImVector<ImGuiContextHook> ImVector_ImGuiContextHook;
typedef ImVector<ImGuiDockNodeSettings> ImVector_ImGuiDockNodeSettings;
typedef ImVector<ImGuiDockRequest> ImVector_ImGuiDockRequest;
typedef ImVector<ImGuiGroupData> ImVector_ImGuiGroupData;
typedef ImVector<ImGuiID> ImVector_ImGuiID;
typedef ImVector<ImGuiInputEvent> ImVector_ImGuiInputEvent;
typedef ImVector<ImGuiItemFlags> ImVector_ImGuiItemFlags;
typedef ImVector<ImGuiKeyRoutingData> ImVector_ImGuiKeyRoutingData;
typedef ImVector<ImGuiListClipperData> ImVector_ImGuiListClipperData;
typedef ImVector<ImGuiListClipperRange> ImVector_ImGuiListClipperRange;
typedef ImVector<ImGuiOldColumnData> ImVector_ImGuiOldColumnData;
typedef ImVector<ImGuiOldColumns> ImVector_ImGuiOldColumns;
typedef ImVector<ImGuiPlatformMonitor> ImVector_ImGuiPlatformMonitor;
typedef ImVector<ImGuiPopupData> ImVector_ImGuiPopupData;
typedef ImVector<ImGuiPtrOrIndex> ImVector_ImGuiPtrOrIndex;
typedef ImVector<ImGuiSettingsHandler> ImVector_ImGuiSettingsHandler;
typedef ImVector<ImGuiShrinkWidthItem> ImVector_ImGuiShrinkWidthItem;
typedef ImVector<ImGuiStackLevelInfo> ImVector_ImGuiStackLevelInfo;
typedef ImVector<ImGuiStoragePair> ImVector_ImGuiStoragePair;
typedef ImVector<ImGuiStyleMod> ImVector_ImGuiStyleMod;
typedef ImVector<ImGuiTabItem> ImVector_ImGuiTabItem;
typedef ImVector<ImGuiTableColumnSortSpecs> ImVector_ImGuiTableColumnSortSpecs;
typedef ImVector<ImGuiTableInstanceData> ImVector_ImGuiTableInstanceData;
typedef ImVector<ImGuiTableTempData> ImVector_ImGuiTableTempData;
typedef ImVector<ImGuiTextRange> ImVector_ImGuiTextRange;
typedef ImVector<ImGuiViewport*> ImVector_ImGuiViewportPtr;
typedef ImVector<ImGuiViewportP*> ImVector_ImGuiViewportPPtr;
typedef ImVector<ImGuiWindow*> ImVector_ImGuiWindowPtr;
typedef ImVector<ImGuiWindowStackData> ImVector_ImGuiWindowStackData;
typedef ImVector<ImTextureID> ImVector_ImTextureID;
typedef ImVector<ImU32> ImVector_ImU32;
typedef ImVector<ImVec2> ImVector_ImVec2;
typedef ImVector<ImVec4> ImVector_ImVec4;
typedef ImVector<ImWchar> ImVector_ImWchar;
typedef ImVector<char> ImVector_char;
typedef ImVector<const char*> ImVector_const_charPtr;
typedef ImVector<float> ImVector_float;
typedef ImVector<int> ImVector_int;
typedef ImVector<unsigned char> ImVector_unsigned_char;
#endif //CIMGUI_DEFINE_ENUMS_AND_STRUCTS
CIMGUI_API ImVec2* ImVec2_ImVec2_Nil(void);
CIMGUI_API void ImVec2_destroy(ImVec2* self);
CIMGUI_API ImVec2* ImVec2_ImVec2_Float(float _x,float _y);
CIMGUI_API ImVec4* ImVec4_ImVec4_Nil(void);
CIMGUI_API void ImVec4_destroy(ImVec4* self);
CIMGUI_API ImVec4* ImVec4_ImVec4_Float(float _x,float _y,float _z,float _w);
TYPE  ImGuiContext* f(igCreateContext)(ImFontAtlas* shared_font_atlas);
TYPE  void f(igDestroyContext)(ImGuiContext* ctx);
TYPE  ImGuiContext* f(igGetCurrentContext)(void);
TYPE  void f(igSetCurrentContext)(ImGuiContext* ctx);
TYPE  ImGuiIO* f(igGetIO)(void);
TYPE  ImGuiStyle* f(igGetStyle)(void);
TYPE  void f(igNewFrame)(void);
TYPE  void f(igEndFrame)(void);
TYPE  void f(igRender)(void);
TYPE  ImDrawData* f(igGetDrawData)(void);
TYPE  void f(igShowDemoWindow)(bool* p_open);
TYPE  void f(igShowMetricsWindow)(bool* p_open);
TYPE  void f(igShowDebugLogWindow)(bool* p_open);
TYPE  void f(igShowStackToolWindow)(bool* p_open);
TYPE  void f(igShowAboutWindow)(bool* p_open);
TYPE  void f(igShowStyleEditor)(ImGuiStyle* ref);
TYPE  bool f(igShowStyleSelector)(const char* label);
TYPE  void f(igShowFontSelector)(const char* label);
TYPE  void f(igShowUserGuide)(void);
TYPE  const char* f(igGetVersion)(void);
TYPE  void f(igStyleColorsDark)(ImGuiStyle* dst);
TYPE  void f(igStyleColorsLight)(ImGuiStyle* dst);
TYPE  void f(igStyleColorsClassic)(ImGuiStyle* dst);
TYPE  bool f(igBegin)(const char* name,bool* p_open,ImGuiWindowFlags flags);
TYPE  void f(igEnd)(void);
TYPE  bool f(igBeginChild_Str)(const char* str_id,const ImVec2 size,bool border,ImGuiWindowFlags flags);
TYPE  bool f(igBeginChild_ID)(ImGuiID id,const ImVec2 size,bool border,ImGuiWindowFlags flags);
TYPE  void f(igEndChild)(void);
TYPE  bool f(igIsWindowAppearing)(void);
TYPE  bool f(igIsWindowCollapsed)(void);
TYPE  bool f(igIsWindowFocused)(ImGuiFocusedFlags flags);
TYPE  bool f(igIsWindowHovered)(ImGuiHoveredFlags flags);
TYPE  ImDrawList* f(igGetWindowDrawList)(void);
TYPE  float f(igGetWindowDpiScale)(void);
TYPE  void f(igGetWindowPos)(ImVec2 *pOut);
TYPE  void f(igGetWindowSize)(ImVec2 *pOut);
TYPE  float f(igGetWindowWidth)(void);
TYPE  float f(igGetWindowHeight)(void);
TYPE  ImGuiViewport* f(igGetWindowViewport)(void);
TYPE  void f(igSetNextWindowPos)(const ImVec2 pos,ImGuiCond cond,const ImVec2 pivot);
TYPE  void f(igSetNextWindowSize)(const ImVec2 size,ImGuiCond cond);
TYPE  void f(igSetNextWindowSizeConstraints)(const ImVec2 size_min,const ImVec2 size_max,ImGuiSizeCallback custom_callback,void* custom_callback_data);
TYPE  void f(igSetNextWindowContentSize)(const ImVec2 size);
TYPE  void f(igSetNextWindowCollapsed)(bool collapsed,ImGuiCond cond);
TYPE  void f(igSetNextWindowFocus)(void);
TYPE  void f(igSetNextWindowScroll)(const ImVec2 scroll);
TYPE  void f(igSetNextWindowBgAlpha)(float alpha);
TYPE  void f(igSetNextWindowViewport)(ImGuiID viewport_id);
TYPE  void f(igSetWindowPos_Vec2)(const ImVec2 pos,ImGuiCond cond);
TYPE  void f(igSetWindowSize_Vec2)(const ImVec2 size,ImGuiCond cond);
TYPE  void f(igSetWindowCollapsed_Bool)(bool collapsed,ImGuiCond cond);
TYPE  void f(igSetWindowFocus_Nil)(void);
TYPE  void f(igSetWindowFontScale)(float scale);
TYPE  void f(igSetWindowPos_Str)(const char* name,const ImVec2 pos,ImGuiCond cond);
TYPE  void f(igSetWindowSize_Str)(const char* name,const ImVec2 size,ImGuiCond cond);
TYPE  void f(igSetWindowCollapsed_Str)(const char* name,bool collapsed,ImGuiCond cond);
TYPE  void f(igSetWindowFocus_Str)(const char* name);
TYPE  void f(igGetContentRegionAvail)(ImVec2 *pOut);
TYPE  void f(igGetContentRegionMax)(ImVec2 *pOut);
TYPE  void f(igGetWindowContentRegionMin)(ImVec2 *pOut);
TYPE  void f(igGetWindowContentRegionMax)(ImVec2 *pOut);
TYPE  float f(igGetScrollX)(void);
TYPE  float f(igGetScrollY)(void);
TYPE  void f(igSetScrollX_Float)(float scroll_x);
TYPE  void f(igSetScrollY_Float)(float scroll_y);
TYPE  float f(igGetScrollMaxX)(void);
TYPE  float f(igGetScrollMaxY)(void);
TYPE  void f(igSetScrollHereX)(float center_x_ratio);
TYPE  void f(igSetScrollHereY)(float center_y_ratio);
TYPE  void f(igSetScrollFromPosX_Float)(float local_x,float center_x_ratio);
TYPE  void f(igSetScrollFromPosY_Float)(float local_y,float center_y_ratio);
TYPE  void f(igPushFont)(ImFont* font);
TYPE  void f(igPopFont)(void);
TYPE  void f(igPushStyleColor_U32)(ImGuiCol idx,ImU32 col);
TYPE  void f(igPushStyleColor_Vec4)(ImGuiCol idx,const ImVec4 col);
TYPE  void f(igPopStyleColor)(int count);
TYPE  void f(igPushStyleVar_Float)(ImGuiStyleVar idx,float val);
TYPE  void f(igPushStyleVar_Vec2)(ImGuiStyleVar idx,const ImVec2 val);
TYPE  void f(igPopStyleVar)(int count);
TYPE  void f(igPushAllowKeyboardFocus)(bool allow_keyboard_focus);
TYPE  void f(igPopAllowKeyboardFocus)(void);
TYPE  void f(igPushButtonRepeat)(bool repeat);
TYPE  void f(igPopButtonRepeat)(void);
TYPE  void f(igPushItemWidth)(float item_width);
TYPE  void f(igPopItemWidth)(void);
TYPE  void f(igSetNextItemWidth)(float item_width);
TYPE  float f(igCalcItemWidth)(void);
TYPE  void f(igPushTextWrapPos)(float wrap_local_pos_x);
TYPE  void f(igPopTextWrapPos)(void);
TYPE  ImFont* f(igGetFont)(void);
TYPE  float f(igGetFontSize)(void);
TYPE  void f(igGetFontTexUvWhitePixel)(ImVec2 *pOut);
TYPE  ImU32 f(igGetColorU32_Col)(ImGuiCol idx,float alpha_mul);
TYPE  ImU32 f(igGetColorU32_Vec4)(const ImVec4 col);
TYPE  ImU32 f(igGetColorU32_U32)(ImU32 col);
TYPE  const ImVec4* f(igGetStyleColorVec4)(ImGuiCol idx);
TYPE  void f(igSeparator)(void);
TYPE  void f(igSameLine)(float offset_from_start_x,float spacing);
TYPE  void f(igNewLine)(void);
TYPE  void f(igSpacing)(void);
TYPE  void f(igDummy)(const ImVec2 size);
TYPE  void f(igIndent)(float indent_w);
TYPE  void f(igUnindent)(float indent_w);
TYPE  void f(igBeginGroup)(void);
TYPE  void f(igEndGroup)(void);
TYPE  void f(igGetCursorPos)(ImVec2 *pOut);
TYPE  float f(igGetCursorPosX)(void);
TYPE  float f(igGetCursorPosY)(void);
TYPE  void f(igSetCursorPos)(const ImVec2 local_pos);
TYPE  void f(igSetCursorPosX)(float local_x);
TYPE  void f(igSetCursorPosY)(float local_y);
TYPE  void f(igGetCursorStartPos)(ImVec2 *pOut);
TYPE  void f(igGetCursorScreenPos)(ImVec2 *pOut);
TYPE  void f(igSetCursorScreenPos)(const ImVec2 pos);
TYPE  void f(igAlignTextToFramePadding)(void);
TYPE  float f(igGetTextLineHeight)(void);
TYPE  float f(igGetTextLineHeightWithSpacing)(void);
TYPE  float f(igGetFrameHeight)(void);
TYPE  float f(igGetFrameHeightWithSpacing)(void);
TYPE  void f(igPushID_Str)(const char* str_id);
TYPE  void f(igPushID_StrStr)(const char* str_id_begin,const char* str_id_end);
TYPE  void f(igPushID_Ptr)(const void* ptr_id);
TYPE  void f(igPushID_Int)(int int_id);
TYPE  void f(igPopID)(void);
TYPE  ImGuiID f(igGetID_Str)(const char* str_id);
TYPE  ImGuiID f(igGetID_StrStr)(const char* str_id_begin,const char* str_id_end);
TYPE  ImGuiID f(igGetID_Ptr)(const void* ptr_id);
TYPE  void f(igTextUnformatted)(const char* text,const char* text_end);
TYPE  void f(igText)(const char* fmt,...);
TYPE  void f(igTextV)(const char* fmt,va_list args);
TYPE  void f(igTextColored)(const ImVec4 col,const char* fmt,...);
TYPE  void f(igTextColoredV)(const ImVec4 col,const char* fmt,va_list args);
TYPE  void f(igTextDisabled)(const char* fmt,...);
TYPE  void f(igTextDisabledV)(const char* fmt,va_list args);
TYPE  void f(igTextWrapped)(const char* fmt,...);
TYPE  void f(igTextWrappedV)(const char* fmt,va_list args);
TYPE  void f(igLabelText)(const char* label,const char* fmt,...);
TYPE  void f(igLabelTextV)(const char* label,const char* fmt,va_list args);
TYPE  void f(igBulletText)(const char* fmt,...);
TYPE  void f(igBulletTextV)(const char* fmt,va_list args);
TYPE  bool f(igButton)(const char* label,const ImVec2 size);
TYPE  bool f(igSmallButton)(const char* label);
TYPE  bool f(igInvisibleButton)(const char* str_id,const ImVec2 size,ImGuiButtonFlags flags);
TYPE  bool f(igArrowButton)(const char* str_id,ImGuiDir dir);
TYPE  bool f(igCheckbox)(const char* label,bool* v);
TYPE  bool f(igCheckboxFlags_IntPtr)(const char* label,int* flags,int flags_value);
TYPE  bool f(igCheckboxFlags_UintPtr)(const char* label,unsigned int* flags,unsigned int flags_value);
TYPE  bool f(igRadioButton_Bool)(const char* label,bool active);
TYPE  bool f(igRadioButton_IntPtr)(const char* label,int* v,int v_button);
TYPE  void f(igProgressBar)(float fraction,const ImVec2 size_arg,const char* overlay);
TYPE  void f(igBullet)(void);
TYPE  void f(igImage)(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 tint_col,const ImVec4 border_col);
TYPE  bool f(igImageButton)(const char* str_id,ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 bg_col,const ImVec4 tint_col);
TYPE  bool f(igBeginCombo)(const char* label,const char* preview_value,ImGuiComboFlags flags);
TYPE  void f(igEndCombo)(void);
TYPE  bool f(igCombo_Str_arr)(const char* label,int* current_item,const char* const items[],int items_count,int popup_max_height_in_items);
TYPE  bool f(igCombo_Str)(const char* label,int* current_item,const char* items_separated_by_zeros,int popup_max_height_in_items);
TYPE  bool f(igCombo_FnBoolPtr)(const char* label,int* current_item,bool(*items_getter)(void* data,int idx,const char** out_text),void* data,int items_count,int popup_max_height_in_items);
TYPE  bool f(igDragFloat)(const char* label,float* v,float v_speed,float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragFloat2)(const char* label,float v[2],float v_speed,float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragFloat3)(const char* label,float v[3],float v_speed,float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragFloat4)(const char* label,float v[4],float v_speed,float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragFloatRange2)(const char* label,float* v_current_min,float* v_current_max,float v_speed,float v_min,float v_max,const char* format,const char* format_max,ImGuiSliderFlags flags);
TYPE  bool f(igDragInt)(const char* label,int* v,float v_speed,int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragInt2)(const char* label,int v[2],float v_speed,int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragInt3)(const char* label,int v[3],float v_speed,int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragInt4)(const char* label,int v[4],float v_speed,int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragIntRange2)(const char* label,int* v_current_min,int* v_current_max,float v_speed,int v_min,int v_max,const char* format,const char* format_max,ImGuiSliderFlags flags);
TYPE  bool f(igDragScalar)(const char* label,ImGuiDataType data_type,void* p_data,float v_speed,const void* p_min,const void* p_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igDragScalarN)(const char* label,ImGuiDataType data_type,void* p_data,int components,float v_speed,const void* p_min,const void* p_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderFloat)(const char* label,float* v,float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderFloat2)(const char* label,float v[2],float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderFloat3)(const char* label,float v[3],float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderFloat4)(const char* label,float v[4],float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderAngle)(const char* label,float* v_rad,float v_degrees_min,float v_degrees_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderInt)(const char* label,int* v,int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderInt2)(const char* label,int v[2],int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderInt3)(const char* label,int v[3],int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderInt4)(const char* label,int v[4],int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderScalar)(const char* label,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderScalarN)(const char* label,ImGuiDataType data_type,void* p_data,int components,const void* p_min,const void* p_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igVSliderFloat)(const char* label,const ImVec2 size,float* v,float v_min,float v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igVSliderInt)(const char* label,const ImVec2 size,int* v,int v_min,int v_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igVSliderScalar)(const char* label,const ImVec2 size,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igInputText)(const char* label,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
TYPE  bool f(igInputTextMultiline)(const char* label,char* buf,size_t buf_size,const ImVec2 size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
TYPE  bool f(igInputTextWithHint)(const char* label,const char* hint,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
TYPE  bool f(igInputFloat)(const char* label,float* v,float step,float step_fast,const char* format,ImGuiInputTextFlags flags);
TYPE  bool f(igInputFloat2)(const char* label,float v[2],const char* format,ImGuiInputTextFlags flags);
TYPE  bool f(igInputFloat3)(const char* label,float v[3],const char* format,ImGuiInputTextFlags flags);
TYPE  bool f(igInputFloat4)(const char* label,float v[4],const char* format,ImGuiInputTextFlags flags);
TYPE  bool f(igInputInt)(const char* label,int* v,int step,int step_fast,ImGuiInputTextFlags flags);
TYPE  bool f(igInputInt2)(const char* label,int v[2],ImGuiInputTextFlags flags);
TYPE  bool f(igInputInt3)(const char* label,int v[3],ImGuiInputTextFlags flags);
TYPE  bool f(igInputInt4)(const char* label,int v[4],ImGuiInputTextFlags flags);
TYPE  bool f(igInputDouble)(const char* label,double* v,double step,double step_fast,const char* format,ImGuiInputTextFlags flags);
TYPE  bool f(igInputScalar)(const char* label,ImGuiDataType data_type,void* p_data,const void* p_step,const void* p_step_fast,const char* format,ImGuiInputTextFlags flags);
TYPE  bool f(igInputScalarN)(const char* label,ImGuiDataType data_type,void* p_data,int components,const void* p_step,const void* p_step_fast,const char* format,ImGuiInputTextFlags flags);
TYPE  bool f(igColorEdit3)(const char* label,float col[3],ImGuiColorEditFlags flags);
TYPE  bool f(igColorEdit4)(const char* label,float col[4],ImGuiColorEditFlags flags);
TYPE  bool f(igColorPicker3)(const char* label,float col[3],ImGuiColorEditFlags flags);
TYPE  bool f(igColorPicker4)(const char* label,float col[4],ImGuiColorEditFlags flags,const float* ref_col);
TYPE  bool f(igColorButton)(const char* desc_id,const ImVec4 col,ImGuiColorEditFlags flags,const ImVec2 size);
TYPE  void f(igSetColorEditOptions)(ImGuiColorEditFlags flags);
TYPE  bool f(igTreeNode_Str)(const char* label);
TYPE  bool f(igTreeNode_StrStr)(const char* str_id,const char* fmt,...);
TYPE  bool f(igTreeNode_Ptr)(const void* ptr_id,const char* fmt,...);
TYPE  bool f(igTreeNodeV_Str)(const char* str_id,const char* fmt,va_list args);
TYPE  bool f(igTreeNodeV_Ptr)(const void* ptr_id,const char* fmt,va_list args);
TYPE  bool f(igTreeNodeEx_Str)(const char* label,ImGuiTreeNodeFlags flags);
TYPE  bool f(igTreeNodeEx_StrStr)(const char* str_id,ImGuiTreeNodeFlags flags,const char* fmt,...);
TYPE  bool f(igTreeNodeEx_Ptr)(const void* ptr_id,ImGuiTreeNodeFlags flags,const char* fmt,...);
TYPE  bool f(igTreeNodeExV_Str)(const char* str_id,ImGuiTreeNodeFlags flags,const char* fmt,va_list args);
TYPE  bool f(igTreeNodeExV_Ptr)(const void* ptr_id,ImGuiTreeNodeFlags flags,const char* fmt,va_list args);
TYPE  void f(igTreePush_Str)(const char* str_id);
TYPE  void f(igTreePush_Ptr)(const void* ptr_id);
TYPE  void f(igTreePop)(void);
TYPE  float f(igGetTreeNodeToLabelSpacing)(void);
TYPE  bool f(igCollapsingHeader_TreeNodeFlags)(const char* label,ImGuiTreeNodeFlags flags);
TYPE  bool f(igCollapsingHeader_BoolPtr)(const char* label,bool* p_visible,ImGuiTreeNodeFlags flags);
TYPE  void f(igSetNextItemOpen)(bool is_open,ImGuiCond cond);
TYPE  bool f(igSelectable_Bool)(const char* label,bool selected,ImGuiSelectableFlags flags,const ImVec2 size);
TYPE  bool f(igSelectable_BoolPtr)(const char* label,bool* p_selected,ImGuiSelectableFlags flags,const ImVec2 size);
TYPE  bool f(igBeginListBox)(const char* label,const ImVec2 size);
TYPE  void f(igEndListBox)(void);
TYPE  bool f(igListBox_Str_arr)(const char* label,int* current_item,const char* const items[],int items_count,int height_in_items);
TYPE  bool f(igListBox_FnBoolPtr)(const char* label,int* current_item,bool(*items_getter)(void* data,int idx,const char** out_text),void* data,int items_count,int height_in_items);
TYPE  void f(igPlotLines_FloatPtr)(const char* label,const float* values,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride);
TYPE  void f(igPlotLines_FnFloatPtr)(const char* label,float(*values_getter)(void* data,int idx),void* data,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size);
TYPE  void f(igPlotHistogram_FloatPtr)(const char* label,const float* values,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride);
TYPE  void f(igPlotHistogram_FnFloatPtr)(const char* label,float(*values_getter)(void* data,int idx),void* data,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size);
TYPE  void f(igValue_Bool)(const char* prefix,bool b);
TYPE  void f(igValue_Int)(const char* prefix,int v);
TYPE  void f(igValue_Uint)(const char* prefix,unsigned int v);
TYPE  void f(igValue_Float)(const char* prefix,float v,const char* float_format);
TYPE  bool f(igBeginMenuBar)(void);
TYPE  void f(igEndMenuBar)(void);
TYPE  bool f(igBeginMainMenuBar)(void);
TYPE  void f(igEndMainMenuBar)(void);
TYPE  bool f(igBeginMenu)(const char* label,bool enabled);
TYPE  void f(igEndMenu)(void);
TYPE  bool f(igMenuItem_Bool)(const char* label,const char* shortcut,bool selected,bool enabled);
TYPE  bool f(igMenuItem_BoolPtr)(const char* label,const char* shortcut,bool* p_selected,bool enabled);
TYPE  void f(igBeginTooltip)(void);
TYPE  void f(igEndTooltip)(void);
TYPE  void f(igSetTooltip)(const char* fmt,...);
TYPE  void f(igSetTooltipV)(const char* fmt,va_list args);
TYPE  bool f(igBeginPopup)(const char* str_id,ImGuiWindowFlags flags);
TYPE  bool f(igBeginPopupModal)(const char* name,bool* p_open,ImGuiWindowFlags flags);
TYPE  void f(igEndPopup)(void);
TYPE  void f(igOpenPopup_Str)(const char* str_id,ImGuiPopupFlags popup_flags);
TYPE  void f(igOpenPopup_ID)(ImGuiID id,ImGuiPopupFlags popup_flags);
TYPE  void f(igOpenPopupOnItemClick)(const char* str_id,ImGuiPopupFlags popup_flags);
TYPE  void f(igCloseCurrentPopup)(void);
TYPE  bool f(igBeginPopupContextItem)(const char* str_id,ImGuiPopupFlags popup_flags);
TYPE  bool f(igBeginPopupContextWindow)(const char* str_id,ImGuiPopupFlags popup_flags);
TYPE  bool f(igBeginPopupContextVoid)(const char* str_id,ImGuiPopupFlags popup_flags);
TYPE  bool f(igIsPopupOpen_Str)(const char* str_id,ImGuiPopupFlags flags);
TYPE  bool f(igBeginTable)(const char* str_id,int column,ImGuiTableFlags flags,const ImVec2 outer_size,float inner_width);
TYPE  void f(igEndTable)(void);
TYPE  void f(igTableNextRow)(ImGuiTableRowFlags row_flags,float min_row_height);
TYPE  bool f(igTableNextColumn)(void);
TYPE  bool f(igTableSetColumnIndex)(int column_n);
TYPE  void f(igTableSetupColumn)(const char* label,ImGuiTableColumnFlags flags,float init_width_or_weight,ImGuiID user_id);
TYPE  void f(igTableSetupScrollFreeze)(int cols,int rows);
TYPE  void f(igTableHeadersRow)(void);
TYPE  void f(igTableHeader)(const char* label);
TYPE  ImGuiTableSortSpecs* f(igTableGetSortSpecs)(void);
TYPE  int f(igTableGetColumnCount)(void);
TYPE  int f(igTableGetColumnIndex)(void);
TYPE  int f(igTableGetRowIndex)(void);
TYPE  const char* f(igTableGetColumnName_Int)(int column_n);
TYPE  ImGuiTableColumnFlags f(igTableGetColumnFlags)(int column_n);
TYPE  void f(igTableSetColumnEnabled)(int column_n,bool v);
TYPE  void f(igTableSetBgColor)(ImGuiTableBgTarget target,ImU32 color,int column_n);
TYPE  void f(igColumns)(int count,const char* id,bool border);
TYPE  void f(igNextColumn)(void);
TYPE  int f(igGetColumnIndex)(void);
TYPE  float f(igGetColumnWidth)(int column_index);
TYPE  void f(igSetColumnWidth)(int column_index,float width);
TYPE  float f(igGetColumnOffset)(int column_index);
TYPE  void f(igSetColumnOffset)(int column_index,float offset_x);
TYPE  int f(igGetColumnsCount)(void);
TYPE  bool f(igBeginTabBar)(const char* str_id,ImGuiTabBarFlags flags);
TYPE  void f(igEndTabBar)(void);
TYPE  bool f(igBeginTabItem)(const char* label,bool* p_open,ImGuiTabItemFlags flags);
TYPE  void f(igEndTabItem)(void);
TYPE  bool f(igTabItemButton)(const char* label,ImGuiTabItemFlags flags);
TYPE  void f(igSetTabItemClosed)(const char* tab_or_docked_window_label);
TYPE  ImGuiID f(igDockSpace)(ImGuiID id,const ImVec2 size,ImGuiDockNodeFlags flags,const ImGuiWindowClass* window_class);
TYPE  ImGuiID f(igDockSpaceOverViewport)(const ImGuiViewport* viewport,ImGuiDockNodeFlags flags,const ImGuiWindowClass* window_class);
TYPE  void f(igSetNextWindowDockID)(ImGuiID dock_id,ImGuiCond cond);
TYPE  void f(igSetNextWindowClass)(const ImGuiWindowClass* window_class);
TYPE  ImGuiID f(igGetWindowDockID)(void);
TYPE  bool f(igIsWindowDocked)(void);
TYPE  void f(igLogToTTY)(int auto_open_depth);
TYPE  void f(igLogToFile)(int auto_open_depth,const char* filename);
TYPE  void f(igLogToClipboard)(int auto_open_depth);
TYPE  void f(igLogFinish)(void);
TYPE  void f(igLogButtons)(void);
TYPE  void f(igLogTextV)(const char* fmt,va_list args);
TYPE  bool f(igBeginDragDropSource)(ImGuiDragDropFlags flags);
TYPE  bool f(igSetDragDropPayload)(const char* type,const void* data,size_t sz,ImGuiCond cond);
TYPE  void f(igEndDragDropSource)(void);
TYPE  bool f(igBeginDragDropTarget)(void);
TYPE  const ImGuiPayload* f(igAcceptDragDropPayload)(const char* type,ImGuiDragDropFlags flags);
TYPE  void f(igEndDragDropTarget)(void);
TYPE  const ImGuiPayload* f(igGetDragDropPayload)(void);
TYPE  void f(igBeginDisabled)(bool disabled);
TYPE  void f(igEndDisabled)(void);
TYPE  void f(igPushClipRect)(const ImVec2 clip_rect_min,const ImVec2 clip_rect_max,bool intersect_with_current_clip_rect);
TYPE  void f(igPopClipRect)(void);
TYPE  void f(igSetItemDefaultFocus)(void);
TYPE  void f(igSetKeyboardFocusHere)(int offset);
TYPE  bool f(igIsItemHovered)(ImGuiHoveredFlags flags);
TYPE  bool f(igIsItemActive)(void);
TYPE  bool f(igIsItemFocused)(void);
TYPE  bool f(igIsItemClicked)(ImGuiMouseButton mouse_button);
TYPE  bool f(igIsItemVisible)(void);
TYPE  bool f(igIsItemEdited)(void);
TYPE  bool f(igIsItemActivated)(void);
TYPE  bool f(igIsItemDeactivated)(void);
TYPE  bool f(igIsItemDeactivatedAfterEdit)(void);
TYPE  bool f(igIsItemToggledOpen)(void);
TYPE  bool f(igIsAnyItemHovered)(void);
TYPE  bool f(igIsAnyItemActive)(void);
TYPE  bool f(igIsAnyItemFocused)(void);
TYPE  void f(igGetItemRectMin)(ImVec2 *pOut);
TYPE  void f(igGetItemRectMax)(ImVec2 *pOut);
TYPE  void f(igGetItemRectSize)(ImVec2 *pOut);
TYPE  void f(igSetItemAllowOverlap)(void);
TYPE  ImGuiViewport* f(igGetMainViewport)(void);
TYPE  ImDrawList* f(igGetBackgroundDrawList_Nil)(void);
TYPE  ImDrawList* f(igGetForegroundDrawList_Nil)(void);
TYPE  ImDrawList* f(igGetBackgroundDrawList_ViewportPtr)(ImGuiViewport* viewport);
TYPE  ImDrawList* f(igGetForegroundDrawList_ViewportPtr)(ImGuiViewport* viewport);
TYPE  bool f(igIsRectVisible_Nil)(const ImVec2 size);
TYPE  bool f(igIsRectVisible_Vec2)(const ImVec2 rect_min,const ImVec2 rect_max);
TYPE  double f(igGetTime)(void);
TYPE  int f(igGetFrameCount)(void);
TYPE  ImDrawListSharedData* f(igGetDrawListSharedData)(void);
TYPE  const char* f(igGetStyleColorName)(ImGuiCol idx);
TYPE  void f(igSetStateStorage)(ImGuiStorage* storage);
TYPE  ImGuiStorage* f(igGetStateStorage)(void);
TYPE  bool f(igBeginChildFrame)(ImGuiID id,const ImVec2 size,ImGuiWindowFlags flags);
TYPE  void f(igEndChildFrame)(void);
TYPE  void f(igCalcTextSize)(ImVec2 *pOut,const char* text,const char* text_end,bool hide_text_after_double_hash,float wrap_width);
TYPE  void f(igColorConvertU32ToFloat4)(ImVec4 *pOut,ImU32 in);
TYPE  ImU32 f(igColorConvertFloat4ToU32)(const ImVec4 in);
TYPE  void f(igColorConvertRGBtoHSV)(float r,float g,float b,float* out_h,float* out_s,float* out_v);
TYPE  void f(igColorConvertHSVtoRGB)(float h,float s,float v,float* out_r,float* out_g,float* out_b);
TYPE  bool f(igIsKeyDown_Nil)(ImGuiKey key);
TYPE  bool f(igIsKeyPressed_Bool)(ImGuiKey key,bool repeat);
TYPE  bool f(igIsKeyReleased_Nil)(ImGuiKey key);
TYPE  int f(igGetKeyPressedAmount)(ImGuiKey key,float repeat_delay,float rate);
TYPE  const char* f(igGetKeyName)(ImGuiKey key);
TYPE  void f(igSetNextFrameWantCaptureKeyboard)(bool want_capture_keyboard);
TYPE  bool f(igIsMouseDown_Nil)(ImGuiMouseButton button);
TYPE  bool f(igIsMouseClicked_Bool)(ImGuiMouseButton button,bool repeat);
TYPE  bool f(igIsMouseReleased_Nil)(ImGuiMouseButton button);
TYPE  bool f(igIsMouseDoubleClicked)(ImGuiMouseButton button);
TYPE  int f(igGetMouseClickedCount)(ImGuiMouseButton button);
TYPE  bool f(igIsMouseHoveringRect)(const ImVec2 r_min,const ImVec2 r_max,bool clip);
TYPE  bool f(igIsMousePosValid)(const ImVec2* mouse_pos);
TYPE  bool f(igIsAnyMouseDown)(void);
TYPE  void f(igGetMousePos)(ImVec2 *pOut);
TYPE  void f(igGetMousePosOnOpeningCurrentPopup)(ImVec2 *pOut);
TYPE  bool f(igIsMouseDragging)(ImGuiMouseButton button,float lock_threshold);
TYPE  void f(igGetMouseDragDelta)(ImVec2 *pOut,ImGuiMouseButton button,float lock_threshold);
TYPE  void f(igResetMouseDragDelta)(ImGuiMouseButton button);
TYPE  ImGuiMouseCursor f(igGetMouseCursor)(void);
TYPE  void f(igSetMouseCursor)(ImGuiMouseCursor cursor_type);
TYPE  void f(igSetNextFrameWantCaptureMouse)(bool want_capture_mouse);
TYPE  const char* f(igGetClipboardText)(void);
TYPE  void f(igSetClipboardText)(const char* text);
TYPE  void f(igLoadIniSettingsFromDisk)(const char* ini_filename);
TYPE  void f(igLoadIniSettingsFromMemory)(const char* ini_data,size_t ini_size);
TYPE  void f(igSaveIniSettingsToDisk)(const char* ini_filename);
TYPE  const char* f(igSaveIniSettingsToMemory)(size_t* out_ini_size);
TYPE  void f(igDebugTextEncoding)(const char* text);
TYPE  bool f(igDebugCheckVersionAndDataLayout)(const char* version_str,size_t sz_io,size_t sz_style,size_t sz_vec2,size_t sz_vec4,size_t sz_drawvert,size_t sz_drawidx);
TYPE  void f(igSetAllocatorFunctions)(ImGuiMemAllocFunc alloc_func,ImGuiMemFreeFunc free_func,void* user_data);
TYPE  void f(igGetAllocatorFunctions)(ImGuiMemAllocFunc* p_alloc_func,ImGuiMemFreeFunc* p_free_func,void** p_user_data);
TYPE  void* f(igMemAlloc)(size_t size);
TYPE  void f(igMemFree)(void* ptr);
TYPE  ImGuiPlatformIO* f(igGetPlatformIO)(void);
TYPE  void f(igUpdatePlatformWindows)(void);
TYPE  void f(igRenderPlatformWindowsDefault)(void* platform_render_arg,void* renderer_render_arg);
TYPE  void f(igDestroyPlatformWindows)(void);
TYPE  ImGuiViewport* f(igFindViewportByID)(ImGuiID id);
TYPE  ImGuiViewport* f(igFindViewportByPlatformHandle)(void* platform_handle);
TYPE  ImGuiStyle* f(ImGuiStyle_ImGuiStyle)(void);
TYPE  void f(ImGuiStyle_destroy)(ImGuiStyle* self);
TYPE  void f(ImGuiStyle_ScaleAllSizes)(ImGuiStyle* self,float scale_factor);
TYPE  void f(ImGuiIO_AddKeyEvent)(ImGuiIO* self,ImGuiKey key,bool down);
TYPE  void f(ImGuiIO_AddKeyAnalogEvent)(ImGuiIO* self,ImGuiKey key,bool down,float v);
TYPE  void f(ImGuiIO_AddMousePosEvent)(ImGuiIO* self,float x,float y);
TYPE  void f(ImGuiIO_AddMouseButtonEvent)(ImGuiIO* self,int button,bool down);
TYPE  void f(ImGuiIO_AddMouseWheelEvent)(ImGuiIO* self,float wh_x,float wh_y);
TYPE  void f(ImGuiIO_AddMouseViewportEvent)(ImGuiIO* self,ImGuiID id);
TYPE  void f(ImGuiIO_AddFocusEvent)(ImGuiIO* self,bool focused);
TYPE  void f(ImGuiIO_AddInputCharacter)(ImGuiIO* self,unsigned int c);
TYPE  void f(ImGuiIO_AddInputCharacterUTF16)(ImGuiIO* self,ImWchar16 c);
TYPE  void f(ImGuiIO_AddInputCharactersUTF8)(ImGuiIO* self,const char* str);
TYPE  void f(ImGuiIO_SetKeyEventNativeData)(ImGuiIO* self,ImGuiKey key,int native_keycode,int native_scancode,int native_legacy_index);
TYPE  void f(ImGuiIO_SetAppAcceptingEvents)(ImGuiIO* self,bool accepting_events);
TYPE  void f(ImGuiIO_ClearInputCharacters)(ImGuiIO* self);
TYPE  void f(ImGuiIO_ClearInputKeys)(ImGuiIO* self);
TYPE  ImGuiIO* f(ImGuiIO_ImGuiIO)(void);
TYPE  void f(ImGuiIO_destroy)(ImGuiIO* self);
TYPE  ImGuiInputTextCallbackData* f(ImGuiInputTextCallbackData_ImGuiInputTextCallbackData)(void);
TYPE  void f(ImGuiInputTextCallbackData_destroy)(ImGuiInputTextCallbackData* self);
TYPE  void f(ImGuiInputTextCallbackData_DeleteChars)(ImGuiInputTextCallbackData* self,int pos,int bytes_count);
TYPE  void f(ImGuiInputTextCallbackData_InsertChars)(ImGuiInputTextCallbackData* self,int pos,const char* text,const char* text_end);
TYPE  void f(ImGuiInputTextCallbackData_SelectAll)(ImGuiInputTextCallbackData* self);
TYPE  void f(ImGuiInputTextCallbackData_ClearSelection)(ImGuiInputTextCallbackData* self);
TYPE  bool f(ImGuiInputTextCallbackData_HasSelection)(ImGuiInputTextCallbackData* self);
TYPE  ImGuiWindowClass* f(ImGuiWindowClass_ImGuiWindowClass)(void);
TYPE  void f(ImGuiWindowClass_destroy)(ImGuiWindowClass* self);
TYPE  ImGuiPayload* f(ImGuiPayload_ImGuiPayload)(void);
TYPE  void f(ImGuiPayload_destroy)(ImGuiPayload* self);
TYPE  void f(ImGuiPayload_Clear)(ImGuiPayload* self);
TYPE  bool f(ImGuiPayload_IsDataType)(ImGuiPayload* self,const char* type);
TYPE  bool f(ImGuiPayload_IsPreview)(ImGuiPayload* self);
TYPE  bool f(ImGuiPayload_IsDelivery)(ImGuiPayload* self);
TYPE  ImGuiTableColumnSortSpecs* f(ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs)(void);
TYPE  void f(ImGuiTableColumnSortSpecs_destroy)(ImGuiTableColumnSortSpecs* self);
TYPE  ImGuiTableSortSpecs* f(ImGuiTableSortSpecs_ImGuiTableSortSpecs)(void);
TYPE  void f(ImGuiTableSortSpecs_destroy)(ImGuiTableSortSpecs* self);
TYPE  ImGuiOnceUponAFrame* f(ImGuiOnceUponAFrame_ImGuiOnceUponAFrame)(void);
TYPE  void f(ImGuiOnceUponAFrame_destroy)(ImGuiOnceUponAFrame* self);
TYPE  ImGuiTextFilter* f(ImGuiTextFilter_ImGuiTextFilter)(const char* default_filter);
TYPE  void f(ImGuiTextFilter_destroy)(ImGuiTextFilter* self);
TYPE  bool f(ImGuiTextFilter_Draw)(ImGuiTextFilter* self,const char* label,float width);
TYPE  bool f(ImGuiTextFilter_PassFilter)(ImGuiTextFilter* self,const char* text,const char* text_end);
TYPE  void f(ImGuiTextFilter_Build)(ImGuiTextFilter* self);
TYPE  void f(ImGuiTextFilter_Clear)(ImGuiTextFilter* self);
TYPE  bool f(ImGuiTextFilter_IsActive)(ImGuiTextFilter* self);
TYPE  ImGuiTextRange* f(ImGuiTextRange_ImGuiTextRange_Nil)(void);
TYPE  void f(ImGuiTextRange_destroy)(ImGuiTextRange* self);
TYPE  ImGuiTextRange* f(ImGuiTextRange_ImGuiTextRange_Str)(const char* _b,const char* _e);
TYPE  bool f(ImGuiTextRange_empty)(ImGuiTextRange* self);
TYPE  void f(ImGuiTextRange_split)(ImGuiTextRange* self,char separator,ImVector_ImGuiTextRange* out);
TYPE  ImGuiTextBuffer* f(ImGuiTextBuffer_ImGuiTextBuffer)(void);
TYPE  void f(ImGuiTextBuffer_destroy)(ImGuiTextBuffer* self);
TYPE  const char* f(ImGuiTextBuffer_begin)(ImGuiTextBuffer* self);
TYPE  const char* f(ImGuiTextBuffer_end)(ImGuiTextBuffer* self);
TYPE  int f(ImGuiTextBuffer_size)(ImGuiTextBuffer* self);
TYPE  bool f(ImGuiTextBuffer_empty)(ImGuiTextBuffer* self);
TYPE  void f(ImGuiTextBuffer_clear)(ImGuiTextBuffer* self);
TYPE  void f(ImGuiTextBuffer_reserve)(ImGuiTextBuffer* self,int capacity);
TYPE  const char* f(ImGuiTextBuffer_c_str)(ImGuiTextBuffer* self);
TYPE  void f(ImGuiTextBuffer_append)(ImGuiTextBuffer* self,const char* str,const char* str_end);
TYPE  void f(ImGuiTextBuffer_appendfv)(ImGuiTextBuffer* self,const char* fmt,va_list args);
TYPE  ImGuiStoragePair* f(ImGuiStoragePair_ImGuiStoragePair_Int)(ImGuiID _key,int _val_i);
TYPE  void f(ImGuiStoragePair_destroy)(ImGuiStoragePair* self);
TYPE  ImGuiStoragePair* f(ImGuiStoragePair_ImGuiStoragePair_Float)(ImGuiID _key,float _val_f);
TYPE  ImGuiStoragePair* f(ImGuiStoragePair_ImGuiStoragePair_Ptr)(ImGuiID _key,void* _val_p);
TYPE  void f(ImGuiStorage_Clear)(ImGuiStorage* self);
TYPE  int f(ImGuiStorage_GetInt)(ImGuiStorage* self,ImGuiID key,int default_val);
TYPE  void f(ImGuiStorage_SetInt)(ImGuiStorage* self,ImGuiID key,int val);
TYPE  bool f(ImGuiStorage_GetBool)(ImGuiStorage* self,ImGuiID key,bool default_val);
TYPE  void f(ImGuiStorage_SetBool)(ImGuiStorage* self,ImGuiID key,bool val);
TYPE  float f(ImGuiStorage_GetFloat)(ImGuiStorage* self,ImGuiID key,float default_val);
TYPE  void f(ImGuiStorage_SetFloat)(ImGuiStorage* self,ImGuiID key,float val);
TYPE  void* f(ImGuiStorage_GetVoidPtr)(ImGuiStorage* self,ImGuiID key);
TYPE  void f(ImGuiStorage_SetVoidPtr)(ImGuiStorage* self,ImGuiID key,void* val);
TYPE  int* f(ImGuiStorage_GetIntRef)(ImGuiStorage* self,ImGuiID key,int default_val);
TYPE  bool* f(ImGuiStorage_GetBoolRef)(ImGuiStorage* self,ImGuiID key,bool default_val);
TYPE  float* f(ImGuiStorage_GetFloatRef)(ImGuiStorage* self,ImGuiID key,float default_val);
TYPE  void** f(ImGuiStorage_GetVoidPtrRef)(ImGuiStorage* self,ImGuiID key,void* default_val);
TYPE  void f(ImGuiStorage_SetAllInt)(ImGuiStorage* self,int val);
TYPE  void f(ImGuiStorage_BuildSortByKey)(ImGuiStorage* self);
TYPE  ImGuiListClipper* f(ImGuiListClipper_ImGuiListClipper)(void);
TYPE  void f(ImGuiListClipper_destroy)(ImGuiListClipper* self);
TYPE  void f(ImGuiListClipper_Begin)(ImGuiListClipper* self,int items_count,float items_height);
TYPE  void f(ImGuiListClipper_End)(ImGuiListClipper* self);
TYPE  bool f(ImGuiListClipper_Step)(ImGuiListClipper* self);
TYPE  void f(ImGuiListClipper_ForceDisplayRangeByIndices)(ImGuiListClipper* self,int item_min,int item_max);
TYPE  ImColor* f(ImColor_ImColor_Nil)(void);
TYPE  void f(ImColor_destroy)(ImColor* self);
TYPE  ImColor* f(ImColor_ImColor_Float)(float r,float g,float b,float a);
TYPE  ImColor* f(ImColor_ImColor_Vec4)(const ImVec4 col);
TYPE  ImColor* f(ImColor_ImColor_Int)(int r,int g,int b,int a);
TYPE  ImColor* f(ImColor_ImColor_U32)(ImU32 rgba);
TYPE  void f(ImColor_SetHSV)(ImColor* self,float h,float s,float v,float a);
TYPE  void f(ImColor_HSV)(ImColor *pOut,float h,float s,float v,float a);
TYPE  ImDrawCmd* f(ImDrawCmd_ImDrawCmd)(void);
TYPE  void f(ImDrawCmd_destroy)(ImDrawCmd* self);
TYPE  ImTextureID f(ImDrawCmd_GetTexID)(ImDrawCmd* self);
TYPE  ImDrawListSplitter* f(ImDrawListSplitter_ImDrawListSplitter)(void);
TYPE  void f(ImDrawListSplitter_destroy)(ImDrawListSplitter* self);
TYPE  void f(ImDrawListSplitter_Clear)(ImDrawListSplitter* self);
TYPE  void f(ImDrawListSplitter_ClearFreeMemory)(ImDrawListSplitter* self);
TYPE  void f(ImDrawListSplitter_Split)(ImDrawListSplitter* self,ImDrawList* draw_list,int count);
TYPE  void f(ImDrawListSplitter_Merge)(ImDrawListSplitter* self,ImDrawList* draw_list);
TYPE  void f(ImDrawListSplitter_SetCurrentChannel)(ImDrawListSplitter* self,ImDrawList* draw_list,int channel_idx);
TYPE  ImDrawList* f(ImDrawList_ImDrawList)(ImDrawListSharedData* shared_data);
TYPE  void f(ImDrawList_destroy)(ImDrawList* self);
TYPE  void f(ImDrawList_PushClipRect)(ImDrawList* self,const ImVec2 clip_rect_min,const ImVec2 clip_rect_max,bool intersect_with_current_clip_rect);
TYPE  void f(ImDrawList_PushClipRectFullScreen)(ImDrawList* self);
TYPE  void f(ImDrawList_PopClipRect)(ImDrawList* self);
TYPE  void f(ImDrawList_PushTextureID)(ImDrawList* self,ImTextureID texture_id);
TYPE  void f(ImDrawList_PopTextureID)(ImDrawList* self);
TYPE  void f(ImDrawList_GetClipRectMin)(ImVec2 *pOut,ImDrawList* self);
TYPE  void f(ImDrawList_GetClipRectMax)(ImVec2 *pOut,ImDrawList* self);
TYPE  void f(ImDrawList_AddLine)(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,ImU32 col,float thickness);
TYPE  void f(ImDrawList_AddRect)(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawFlags flags,float thickness);
TYPE  void f(ImDrawList_AddRectFilled)(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawFlags flags);
TYPE  void f(ImDrawList_AddRectFilledMultiColor)(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col_upr_left,ImU32 col_upr_right,ImU32 col_bot_right,ImU32 col_bot_left);
TYPE  void f(ImDrawList_AddQuad)(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness);
TYPE  void f(ImDrawList_AddQuadFilled)(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col);
TYPE  void f(ImDrawList_AddTriangle)(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col,float thickness);
TYPE  void f(ImDrawList_AddTriangleFilled)(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col);
TYPE  void f(ImDrawList_AddCircle)(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness);
TYPE  void f(ImDrawList_AddCircleFilled)(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments);
TYPE  void f(ImDrawList_AddNgon)(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness);
TYPE  void f(ImDrawList_AddNgonFilled)(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments);
TYPE  void f(ImDrawList_AddText_Vec2)(ImDrawList* self,const ImVec2 pos,ImU32 col,const char* text_begin,const char* text_end);
TYPE  void f(ImDrawList_AddText_FontPtr)(ImDrawList* self,const ImFont* font,float font_size,const ImVec2 pos,ImU32 col,const char* text_begin,const char* text_end,float wrap_width,const ImVec4* cpu_fine_clip_rect);
TYPE  void f(ImDrawList_AddPolyline)(ImDrawList* self,const ImVec2* points,int num_points,ImU32 col,ImDrawFlags flags,float thickness);
TYPE  void f(ImDrawList_AddConvexPolyFilled)(ImDrawList* self,const ImVec2* points,int num_points,ImU32 col);
TYPE  void f(ImDrawList_AddBezierCubic)(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness,int num_segments);
TYPE  void f(ImDrawList_AddBezierQuadratic)(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col,float thickness,int num_segments);
TYPE  void f(ImDrawList_AddImage)(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col);
TYPE  void f(ImDrawList_AddImageQuad)(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 uv1,const ImVec2 uv2,const ImVec2 uv3,const ImVec2 uv4,ImU32 col);
TYPE  void f(ImDrawList_AddImageRounded)(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col,float rounding,ImDrawFlags flags);
TYPE  void f(ImDrawList_PathClear)(ImDrawList* self);
TYPE  void f(ImDrawList_PathLineTo)(ImDrawList* self,const ImVec2 pos);
TYPE  void f(ImDrawList_PathLineToMergeDuplicate)(ImDrawList* self,const ImVec2 pos);
TYPE  void f(ImDrawList_PathFillConvex)(ImDrawList* self,ImU32 col);
TYPE  void f(ImDrawList_PathStroke)(ImDrawList* self,ImU32 col,ImDrawFlags flags,float thickness);
TYPE  void f(ImDrawList_PathArcTo)(ImDrawList* self,const ImVec2 center,float radius,float a_min,float a_max,int num_segments);
TYPE  void f(ImDrawList_PathArcToFast)(ImDrawList* self,const ImVec2 center,float radius,int a_min_of_12,int a_max_of_12);
TYPE  void f(ImDrawList_PathBezierCubicCurveTo)(ImDrawList* self,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,int num_segments);
TYPE  void f(ImDrawList_PathBezierQuadraticCurveTo)(ImDrawList* self,const ImVec2 p2,const ImVec2 p3,int num_segments);
TYPE  void f(ImDrawList_PathRect)(ImDrawList* self,const ImVec2 rect_min,const ImVec2 rect_max,float rounding,ImDrawFlags flags);
TYPE  void f(ImDrawList_AddCallback)(ImDrawList* self,ImDrawCallback callback,void* callback_data);
TYPE  void f(ImDrawList_AddDrawCmd)(ImDrawList* self);
TYPE  ImDrawList* f(ImDrawList_CloneOutput)(ImDrawList* self);
TYPE  void f(ImDrawList_ChannelsSplit)(ImDrawList* self,int count);
TYPE  void f(ImDrawList_ChannelsMerge)(ImDrawList* self);
TYPE  void f(ImDrawList_ChannelsSetCurrent)(ImDrawList* self,int n);
TYPE  void f(ImDrawList_PrimReserve)(ImDrawList* self,int idx_count,int vtx_count);
TYPE  void f(ImDrawList_PrimUnreserve)(ImDrawList* self,int idx_count,int vtx_count);
TYPE  void f(ImDrawList_PrimRect)(ImDrawList* self,const ImVec2 a,const ImVec2 b,ImU32 col);
TYPE  void f(ImDrawList_PrimRectUV)(ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,ImU32 col);
TYPE  void f(ImDrawList_PrimQuadUV)(ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,const ImVec2 uv_a,const ImVec2 uv_b,const ImVec2 uv_c,const ImVec2 uv_d,ImU32 col);
TYPE  void f(ImDrawList_PrimWriteVtx)(ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col);
TYPE  void f(ImDrawList_PrimWriteIdx)(ImDrawList* self,ImDrawIdx idx);
TYPE  void f(ImDrawList_PrimVtx)(ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col);
TYPE  void f(ImDrawList__ResetForNewFrame)(ImDrawList* self);
TYPE  void f(ImDrawList__ClearFreeMemory)(ImDrawList* self);
TYPE  void f(ImDrawList__PopUnusedDrawCmd)(ImDrawList* self);
TYPE  void f(ImDrawList__TryMergeDrawCmds)(ImDrawList* self);
TYPE  void f(ImDrawList__OnChangedClipRect)(ImDrawList* self);
TYPE  void f(ImDrawList__OnChangedTextureID)(ImDrawList* self);
TYPE  void f(ImDrawList__OnChangedVtxOffset)(ImDrawList* self);
TYPE  int f(ImDrawList__CalcCircleAutoSegmentCount)(ImDrawList* self,float radius);
TYPE  void f(ImDrawList__PathArcToFastEx)(ImDrawList* self,const ImVec2 center,float radius,int a_min_sample,int a_max_sample,int a_step);
TYPE  void f(ImDrawList__PathArcToN)(ImDrawList* self,const ImVec2 center,float radius,float a_min,float a_max,int num_segments);
TYPE  ImDrawData* f(ImDrawData_ImDrawData)(void);
TYPE  void f(ImDrawData_destroy)(ImDrawData* self);
TYPE  void f(ImDrawData_Clear)(ImDrawData* self);
TYPE  void f(ImDrawData_DeIndexAllBuffers)(ImDrawData* self);
TYPE  void f(ImDrawData_ScaleClipRects)(ImDrawData* self,const ImVec2 fb_scale);
TYPE  ImFontConfig* f(ImFontConfig_ImFontConfig)(void);
TYPE  void f(ImFontConfig_destroy)(ImFontConfig* self);
TYPE  ImFontGlyphRangesBuilder* f(ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder)(void);
TYPE  void f(ImFontGlyphRangesBuilder_destroy)(ImFontGlyphRangesBuilder* self);
TYPE  void f(ImFontGlyphRangesBuilder_Clear)(ImFontGlyphRangesBuilder* self);
TYPE  bool f(ImFontGlyphRangesBuilder_GetBit)(ImFontGlyphRangesBuilder* self,size_t n);
TYPE  void f(ImFontGlyphRangesBuilder_SetBit)(ImFontGlyphRangesBuilder* self,size_t n);
TYPE  void f(ImFontGlyphRangesBuilder_AddChar)(ImFontGlyphRangesBuilder* self,ImWchar c);
TYPE  void f(ImFontGlyphRangesBuilder_AddText)(ImFontGlyphRangesBuilder* self,const char* text,const char* text_end);
TYPE  void f(ImFontGlyphRangesBuilder_AddRanges)(ImFontGlyphRangesBuilder* self,const ImWchar* ranges);
TYPE  void f(ImFontGlyphRangesBuilder_BuildRanges)(ImFontGlyphRangesBuilder* self,ImVector_ImWchar* out_ranges);
TYPE  ImFontAtlasCustomRect* f(ImFontAtlasCustomRect_ImFontAtlasCustomRect)(void);
TYPE  void f(ImFontAtlasCustomRect_destroy)(ImFontAtlasCustomRect* self);
TYPE  bool f(ImFontAtlasCustomRect_IsPacked)(ImFontAtlasCustomRect* self);
TYPE  ImFontAtlas* f(ImFontAtlas_ImFontAtlas)(void);
TYPE  void f(ImFontAtlas_destroy)(ImFontAtlas* self);
TYPE  ImFont* f(ImFontAtlas_AddFont)(ImFontAtlas* self,const ImFontConfig* font_cfg);
TYPE  ImFont* f(ImFontAtlas_AddFontDefault)(ImFontAtlas* self,const ImFontConfig* font_cfg);
TYPE  ImFont* f(ImFontAtlas_AddFontFromFileTTF)(ImFontAtlas* self,const char* filename,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
TYPE  ImFont* f(ImFontAtlas_AddFontFromMemoryTTF)(ImFontAtlas* self,void* font_data,int font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
TYPE  ImFont* f(ImFontAtlas_AddFontFromMemoryCompressedTTF)(ImFontAtlas* self,const void* compressed_font_data,int compressed_font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
TYPE  ImFont* f(ImFontAtlas_AddFontFromMemoryCompressedBase85TTF)(ImFontAtlas* self,const char* compressed_font_data_base85,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges);
TYPE  void f(ImFontAtlas_ClearInputData)(ImFontAtlas* self);
TYPE  void f(ImFontAtlas_ClearTexData)(ImFontAtlas* self);
TYPE  void f(ImFontAtlas_ClearFonts)(ImFontAtlas* self);
TYPE  void f(ImFontAtlas_Clear)(ImFontAtlas* self);
TYPE  bool f(ImFontAtlas_Build)(ImFontAtlas* self);
TYPE  void f(ImFontAtlas_GetTexDataAsAlpha8)(ImFontAtlas* self,unsigned char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel);
TYPE  void f(ImFontAtlas_GetTexDataAsRGBA32)(ImFontAtlas* self,unsigned char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel);
TYPE  bool f(ImFontAtlas_IsBuilt)(ImFontAtlas* self);
TYPE  void f(ImFontAtlas_SetTexID)(ImFontAtlas* self,ImTextureID id);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesDefault)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesGreek)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesKorean)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesJapanese)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesChineseFull)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesCyrillic)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesThai)(ImFontAtlas* self);
TYPE  const ImWchar* f(ImFontAtlas_GetGlyphRangesVietnamese)(ImFontAtlas* self);
TYPE  int f(ImFontAtlas_AddCustomRectRegular)(ImFontAtlas* self,int width,int height);
TYPE  int f(ImFontAtlas_AddCustomRectFontGlyph)(ImFontAtlas* self,ImFont* font,ImWchar id,int width,int height,float advance_x,const ImVec2 offset);
TYPE  ImFontAtlasCustomRect* f(ImFontAtlas_GetCustomRectByIndex)(ImFontAtlas* self,int index);
TYPE  void f(ImFontAtlas_CalcCustomRectUV)(ImFontAtlas* self,const ImFontAtlasCustomRect* rect,ImVec2* out_uv_min,ImVec2* out_uv_max);
TYPE  bool f(ImFontAtlas_GetMouseCursorTexData)(ImFontAtlas* self,ImGuiMouseCursor cursor,ImVec2* out_offset,ImVec2* out_size,ImVec2 out_uv_border[2],ImVec2 out_uv_fill[2]);
TYPE  ImFont* f(ImFont_ImFont)(void);
TYPE  void f(ImFont_destroy)(ImFont* self);
TYPE  const ImFontGlyph* f(ImFont_FindGlyph)(ImFont* self,ImWchar c);
TYPE  const ImFontGlyph* f(ImFont_FindGlyphNoFallback)(ImFont* self,ImWchar c);
TYPE  float f(ImFont_GetCharAdvance)(ImFont* self,ImWchar c);
TYPE  bool f(ImFont_IsLoaded)(ImFont* self);
TYPE  const char* f(ImFont_GetDebugName)(ImFont* self);
TYPE  void f(ImFont_CalcTextSizeA)(ImVec2 *pOut,ImFont* self,float size,float max_width,float wrap_width,const char* text_begin,const char* text_end,const char** remaining);
TYPE  const char* f(ImFont_CalcWordWrapPositionA)(ImFont* self,float scale,const char* text,const char* text_end,float wrap_width);
TYPE  void f(ImFont_RenderChar)(ImFont* self,ImDrawList* draw_list,float size,const ImVec2 pos,ImU32 col,ImWchar c);
TYPE  void f(ImFont_RenderText)(ImFont* self,ImDrawList* draw_list,float size,const ImVec2 pos,ImU32 col,const ImVec4 clip_rect,const char* text_begin,const char* text_end,float wrap_width,bool cpu_fine_clip);
TYPE  void f(ImFont_BuildLookupTable)(ImFont* self);
TYPE  void f(ImFont_ClearOutputData)(ImFont* self);
TYPE  void f(ImFont_GrowIndex)(ImFont* self,int new_size);
TYPE  void f(ImFont_AddGlyph)(ImFont* self,const ImFontConfig* src_cfg,ImWchar c,float x0,float y0,float x1,float y1,float u0,float v0,float u1,float v1,float advance_x);
TYPE  void f(ImFont_AddRemapChar)(ImFont* self,ImWchar dst,ImWchar src,bool overwrite_dst);
TYPE  void f(ImFont_SetGlyphVisible)(ImFont* self,ImWchar c,bool visible);
TYPE  bool f(ImFont_IsGlyphRangeUnused)(ImFont* self,unsigned int c_begin,unsigned int c_last);
TYPE  ImGuiViewport* f(ImGuiViewport_ImGuiViewport)(void);
TYPE  void f(ImGuiViewport_destroy)(ImGuiViewport* self);
TYPE  void f(ImGuiViewport_GetCenter)(ImVec2 *pOut,ImGuiViewport* self);
TYPE  void f(ImGuiViewport_GetWorkCenter)(ImVec2 *pOut,ImGuiViewport* self);
TYPE  ImGuiPlatformIO* f(ImGuiPlatformIO_ImGuiPlatformIO)(void);
TYPE  void f(ImGuiPlatformIO_destroy)(ImGuiPlatformIO* self);
TYPE  ImGuiPlatformMonitor* f(ImGuiPlatformMonitor_ImGuiPlatformMonitor)(void);
TYPE  void f(ImGuiPlatformMonitor_destroy)(ImGuiPlatformMonitor* self);
TYPE  ImGuiPlatformImeData* f(ImGuiPlatformImeData_ImGuiPlatformImeData)(void);
TYPE  void f(ImGuiPlatformImeData_destroy)(ImGuiPlatformImeData* self);
TYPE  ImGuiKey f(igGetKeyIndex)(ImGuiKey key);
TYPE  ImGuiID f(igImHashData)(const void* data,size_t data_size,ImU32 seed);
TYPE  ImGuiID f(igImHashStr)(const char* data,size_t data_size,ImU32 seed);
TYPE  void f(igImQsort)(void* base,size_t count,size_t size_of_element,int(*compare_func)(void const*,void const*));
TYPE  ImU32 f(igImAlphaBlendColors)(ImU32 col_a,ImU32 col_b);
TYPE  bool f(igImIsPowerOfTwo_Int)(int v);
TYPE  bool f(igImIsPowerOfTwo_U64)(ImU64 v);
TYPE  int f(igImUpperPowerOfTwo)(int v);
TYPE  int f(igImStricmp)(const char* str1,const char* str2);
TYPE  int f(igImStrnicmp)(const char* str1,const char* str2,size_t count);
TYPE  void f(igImStrncpy)(char* dst,const char* src,size_t count);
TYPE  char* f(igImStrdup)(const char* str);
TYPE  char* f(igImStrdupcpy)(char* dst,size_t* p_dst_size,const char* str);
TYPE  const char* f(igImStrchrRange)(const char* str_begin,const char* str_end,char c);
TYPE  int f(igImStrlenW)(const ImWchar* str);
TYPE  const char* f(igImStreolRange)(const char* str,const char* str_end);
TYPE  const ImWchar* f(igImStrbolW)(const ImWchar* buf_mid_line,const ImWchar* buf_begin);
TYPE  const char* f(igImStristr)(const char* haystack,const char* haystack_end,const char* needle,const char* needle_end);
TYPE  void f(igImStrTrimBlanks)(char* str);
TYPE  const char* f(igImStrSkipBlank)(const char* str);
TYPE  char f(igImToUpper)(char c);
TYPE  bool f(igImCharIsBlankA)(char c);
TYPE  bool f(igImCharIsBlankW)(unsigned int c);
TYPE  int f(igImFormatString)(char* buf,size_t buf_size,const char* fmt,...);
TYPE  int f(igImFormatStringV)(char* buf,size_t buf_size,const char* fmt,va_list args);
TYPE  void f(igImFormatStringToTempBuffer)(const char** out_buf,const char** out_buf_end,const char* fmt,...);
TYPE  void f(igImFormatStringToTempBufferV)(const char** out_buf,const char** out_buf_end,const char* fmt,va_list args);
TYPE  const char* f(igImParseFormatFindStart)(const char* format);
TYPE  const char* f(igImParseFormatFindEnd)(const char* format);
TYPE  const char* f(igImParseFormatTrimDecorations)(const char* format,char* buf,size_t buf_size);
TYPE  void f(igImParseFormatSanitizeForPrinting)(const char* fmt_in,char* fmt_out,size_t fmt_out_size);
TYPE  const char* f(igImParseFormatSanitizeForScanning)(const char* fmt_in,char* fmt_out,size_t fmt_out_size);
TYPE  int f(igImParseFormatPrecision)(const char* format,int default_value);
TYPE  const char* f(igImTextCharToUtf8)(char out_buf[5],unsigned int c);
TYPE  int f(igImTextStrToUtf8)(char* out_buf,int out_buf_size,const ImWchar* in_text,const ImWchar* in_text_end);
TYPE  int f(igImTextCharFromUtf8)(unsigned int* out_char,const char* in_text,const char* in_text_end);
TYPE  int f(igImTextStrFromUtf8)(ImWchar* out_buf,int out_buf_size,const char* in_text,const char* in_text_end,const char** in_remaining);
TYPE  int f(igImTextCountCharsFromUtf8)(const char* in_text,const char* in_text_end);
TYPE  int f(igImTextCountUtf8BytesFromChar)(const char* in_text,const char* in_text_end);
TYPE  int f(igImTextCountUtf8BytesFromStr)(const ImWchar* in_text,const ImWchar* in_text_end);
TYPE  ImFileHandle f(igImFileOpen)(const char* filename,const char* mode);
TYPE  bool f(igImFileClose)(ImFileHandle file);
TYPE  ImU64 f(igImFileGetSize)(ImFileHandle file);
TYPE  ImU64 f(igImFileRead)(void* data,ImU64 size,ImU64 count,ImFileHandle file);
TYPE  ImU64 f(igImFileWrite)(const void* data,ImU64 size,ImU64 count,ImFileHandle file);
TYPE  void* f(igImFileLoadToMemory)(const char* filename,const char* mode,size_t* out_file_size,int padding_bytes);
TYPE  float f(igImPow_Float)(float x,float y);
TYPE  double f(igImPow_double)(double x,double y);
TYPE  float f(igImLog_Float)(float x);
TYPE  double f(igImLog_double)(double x);
TYPE  int f(igImAbs_Int)(int x);
TYPE  float f(igImAbs_Float)(float x);
TYPE  double f(igImAbs_double)(double x);
TYPE  float f(igImSign_Float)(float x);
TYPE  double f(igImSign_double)(double x);
TYPE  float f(igImRsqrt_Float)(float x);
TYPE  double f(igImRsqrt_double)(double x);
TYPE  void f(igImMin)(ImVec2 *pOut,const ImVec2 lhs,const ImVec2 rhs);
TYPE  void f(igImMax)(ImVec2 *pOut,const ImVec2 lhs,const ImVec2 rhs);
TYPE  void f(igImClamp)(ImVec2 *pOut,const ImVec2 v,const ImVec2 mn,ImVec2 mx);
TYPE  void f(igImLerp_Vec2Float)(ImVec2 *pOut,const ImVec2 a,const ImVec2 b,float t);
TYPE  void f(igImLerp_Vec2Vec2)(ImVec2 *pOut,const ImVec2 a,const ImVec2 b,const ImVec2 t);
TYPE  void f(igImLerp_Vec4)(ImVec4 *pOut,const ImVec4 a,const ImVec4 b,float t);
TYPE  float f(igImSaturate)(float f);
TYPE  float f(igImLengthSqr_Vec2)(const ImVec2 lhs);
TYPE  float f(igImLengthSqr_Vec4)(const ImVec4 lhs);
TYPE  float f(igImInvLength)(const ImVec2 lhs,float fail_value);
TYPE  float f(igImFloor_Float)(float f);
TYPE  float f(igImFloorSigned_Float)(float f);
TYPE  void f(igImFloor_Vec2)(ImVec2 *pOut,const ImVec2 v);
TYPE  void f(igImFloorSigned_Vec2)(ImVec2 *pOut,const ImVec2 v);
TYPE  int f(igImModPositive)(int a,int b);
TYPE  float f(igImDot)(const ImVec2 a,const ImVec2 b);
TYPE  void f(igImRotate)(ImVec2 *pOut,const ImVec2 v,float cos_a,float sin_a);
TYPE  float f(igImLinearSweep)(float current,float target,float speed);
TYPE  void f(igImMul)(ImVec2 *pOut,const ImVec2 lhs,const ImVec2 rhs);
TYPE  bool f(igImIsFloatAboveGuaranteedIntegerPrecision)(float f);
TYPE  void f(igImBezierCubicCalc)(ImVec2 *pOut,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,float t);
TYPE  void f(igImBezierCubicClosestPoint)(ImVec2 *pOut,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 p,int num_segments);
TYPE  void f(igImBezierCubicClosestPointCasteljau)(ImVec2 *pOut,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 p,float tess_tol);
TYPE  void f(igImBezierQuadraticCalc)(ImVec2 *pOut,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,float t);
TYPE  void f(igImLineClosestPoint)(ImVec2 *pOut,const ImVec2 a,const ImVec2 b,const ImVec2 p);
TYPE  bool f(igImTriangleContainsPoint)(const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 p);
TYPE  void f(igImTriangleClosestPoint)(ImVec2 *pOut,const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 p);
TYPE  void f(igImTriangleBarycentricCoords)(const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 p,float* out_u,float* out_v,float* out_w);
TYPE  float f(igImTriangleArea)(const ImVec2 a,const ImVec2 b,const ImVec2 c);
TYPE  ImGuiDir f(igImGetDirQuadrantFromDelta)(float dx,float dy);
CIMGUI_API ImVec1* ImVec1_ImVec1_Nil(void);
CIMGUI_API void ImVec1_destroy(ImVec1* self);
CIMGUI_API ImVec1* ImVec1_ImVec1_Float(float _x);
CIMGUI_API ImVec2ih* ImVec2ih_ImVec2ih_Nil(void);
CIMGUI_API void ImVec2ih_destroy(ImVec2ih* self);
CIMGUI_API ImVec2ih* ImVec2ih_ImVec2ih_short(short _x,short _y);
CIMGUI_API ImVec2ih* ImVec2ih_ImVec2ih_Vec2(const ImVec2 rhs);
TYPE  ImRect* f(ImRect_ImRect_Nil)(void);
TYPE  void f(ImRect_destroy)(ImRect* self);
TYPE  ImRect* f(ImRect_ImRect_Vec2)(const ImVec2 min,const ImVec2 max);
TYPE  ImRect* f(ImRect_ImRect_Vec4)(const ImVec4 v);
TYPE  ImRect* f(ImRect_ImRect_Float)(float x1,float y1,float x2,float y2);
TYPE  void f(ImRect_GetCenter)(ImVec2 *pOut,ImRect* self);
TYPE  void f(ImRect_GetSize)(ImVec2 *pOut,ImRect* self);
TYPE  float f(ImRect_GetWidth)(ImRect* self);
TYPE  float f(ImRect_GetHeight)(ImRect* self);
TYPE  float f(ImRect_GetArea)(ImRect* self);
TYPE  void f(ImRect_GetTL)(ImVec2 *pOut,ImRect* self);
TYPE  void f(ImRect_GetTR)(ImVec2 *pOut,ImRect* self);
TYPE  void f(ImRect_GetBL)(ImVec2 *pOut,ImRect* self);
TYPE  void f(ImRect_GetBR)(ImVec2 *pOut,ImRect* self);
TYPE  bool f(ImRect_Contains_Vec2)(ImRect* self,const ImVec2 p);
TYPE  bool f(ImRect_Contains_Rect)(ImRect* self,const ImRect r);
TYPE  bool f(ImRect_Overlaps)(ImRect* self,const ImRect r);
TYPE  void f(ImRect_Add_Vec2)(ImRect* self,const ImVec2 p);
TYPE  void f(ImRect_Add_Rect)(ImRect* self,const ImRect r);
TYPE  void f(ImRect_Expand_Float)(ImRect* self,const float amount);
TYPE  void f(ImRect_Expand_Vec2)(ImRect* self,const ImVec2 amount);
TYPE  void f(ImRect_Translate)(ImRect* self,const ImVec2 d);
TYPE  void f(ImRect_TranslateX)(ImRect* self,float dx);
TYPE  void f(ImRect_TranslateY)(ImRect* self,float dy);
TYPE  void f(ImRect_ClipWith)(ImRect* self,const ImRect r);
TYPE  void f(ImRect_ClipWithFull)(ImRect* self,const ImRect r);
TYPE  void f(ImRect_Floor)(ImRect* self);
TYPE  bool f(ImRect_IsInverted)(ImRect* self);
TYPE  void f(ImRect_ToVec4)(ImVec4 *pOut,ImRect* self);
TYPE  bool f(igImBitArrayTestBit)(const ImU32* arr,int n);
TYPE  void f(igImBitArrayClearBit)(ImU32* arr,int n);
TYPE  void f(igImBitArraySetBit)(ImU32* arr,int n);
TYPE  void f(igImBitArraySetBitRange)(ImU32* arr,int n,int n2);
CIMGUI_API void ImBitVector_Create(ImBitVector* self,int sz);
CIMGUI_API void ImBitVector_Clear(ImBitVector* self);
CIMGUI_API bool ImBitVector_TestBit(ImBitVector* self,int n);
CIMGUI_API void ImBitVector_SetBit(ImBitVector* self,int n);
CIMGUI_API void ImBitVector_ClearBit(ImBitVector* self,int n);
TYPE  void f(ImGuiTextIndex_clear)(ImGuiTextIndex* self);
TYPE  int f(ImGuiTextIndex_size)(ImGuiTextIndex* self);
TYPE  const char* f(ImGuiTextIndex_get_line_begin)(ImGuiTextIndex* self,const char* base,int n);
TYPE  const char* f(ImGuiTextIndex_get_line_end)(ImGuiTextIndex* self,const char* base,int n);
TYPE  void f(ImGuiTextIndex_append)(ImGuiTextIndex* self,const char* base,int old_size,int new_size);
TYPE  ImDrawListSharedData* f(ImDrawListSharedData_ImDrawListSharedData)(void);
TYPE  void f(ImDrawListSharedData_destroy)(ImDrawListSharedData* self);
TYPE  void f(ImDrawListSharedData_SetCircleTessellationMaxError)(ImDrawListSharedData* self,float max_error);
TYPE  void f(ImDrawDataBuilder_Clear)(ImDrawDataBuilder* self);
TYPE  void f(ImDrawDataBuilder_ClearFreeMemory)(ImDrawDataBuilder* self);
TYPE  int f(ImDrawDataBuilder_GetDrawListCount)(ImDrawDataBuilder* self);
TYPE  void f(ImDrawDataBuilder_FlattenIntoSingleLayer)(ImDrawDataBuilder* self);
TYPE  ImGuiStyleMod* f(ImGuiStyleMod_ImGuiStyleMod_Int)(ImGuiStyleVar idx,int v);
TYPE  void f(ImGuiStyleMod_destroy)(ImGuiStyleMod* self);
TYPE  ImGuiStyleMod* f(ImGuiStyleMod_ImGuiStyleMod_Float)(ImGuiStyleVar idx,float v);
TYPE  ImGuiStyleMod* f(ImGuiStyleMod_ImGuiStyleMod_Vec2)(ImGuiStyleVar idx,ImVec2 v);
TYPE  ImGuiComboPreviewData* f(ImGuiComboPreviewData_ImGuiComboPreviewData)(void);
TYPE  void f(ImGuiComboPreviewData_destroy)(ImGuiComboPreviewData* self);
TYPE  ImGuiMenuColumns* f(ImGuiMenuColumns_ImGuiMenuColumns)(void);
TYPE  void f(ImGuiMenuColumns_destroy)(ImGuiMenuColumns* self);
TYPE  void f(ImGuiMenuColumns_Update)(ImGuiMenuColumns* self,float spacing,bool window_reappearing);
TYPE  float f(ImGuiMenuColumns_DeclColumns)(ImGuiMenuColumns* self,float w_icon,float w_label,float w_shortcut,float w_mark);
TYPE  void f(ImGuiMenuColumns_CalcNextTotalWidth)(ImGuiMenuColumns* self,bool update_offsets);
TYPE  ImGuiInputTextState* f(ImGuiInputTextState_ImGuiInputTextState)(void);
TYPE  void f(ImGuiInputTextState_destroy)(ImGuiInputTextState* self);
TYPE  void f(ImGuiInputTextState_ClearText)(ImGuiInputTextState* self);
TYPE  void f(ImGuiInputTextState_ClearFreeMemory)(ImGuiInputTextState* self);
TYPE  int f(ImGuiInputTextState_GetUndoAvailCount)(ImGuiInputTextState* self);
TYPE  int f(ImGuiInputTextState_GetRedoAvailCount)(ImGuiInputTextState* self);
TYPE  void f(ImGuiInputTextState_OnKeyPressed)(ImGuiInputTextState* self,int key);
TYPE  void f(ImGuiInputTextState_CursorAnimReset)(ImGuiInputTextState* self);
TYPE  void f(ImGuiInputTextState_CursorClamp)(ImGuiInputTextState* self);
TYPE  bool f(ImGuiInputTextState_HasSelection)(ImGuiInputTextState* self);
TYPE  void f(ImGuiInputTextState_ClearSelection)(ImGuiInputTextState* self);
TYPE  int f(ImGuiInputTextState_GetCursorPos)(ImGuiInputTextState* self);
TYPE  int f(ImGuiInputTextState_GetSelectionStart)(ImGuiInputTextState* self);
TYPE  int f(ImGuiInputTextState_GetSelectionEnd)(ImGuiInputTextState* self);
TYPE  void f(ImGuiInputTextState_SelectAll)(ImGuiInputTextState* self);
TYPE  ImGuiPopupData* f(ImGuiPopupData_ImGuiPopupData)(void);
TYPE  void f(ImGuiPopupData_destroy)(ImGuiPopupData* self);
TYPE  ImGuiNextWindowData* f(ImGuiNextWindowData_ImGuiNextWindowData)(void);
TYPE  void f(ImGuiNextWindowData_destroy)(ImGuiNextWindowData* self);
TYPE  void f(ImGuiNextWindowData_ClearFlags)(ImGuiNextWindowData* self);
TYPE  ImGuiNextItemData* f(ImGuiNextItemData_ImGuiNextItemData)(void);
TYPE  void f(ImGuiNextItemData_destroy)(ImGuiNextItemData* self);
TYPE  void f(ImGuiNextItemData_ClearFlags)(ImGuiNextItemData* self);
TYPE  ImGuiLastItemData* f(ImGuiLastItemData_ImGuiLastItemData)(void);
TYPE  void f(ImGuiLastItemData_destroy)(ImGuiLastItemData* self);
TYPE  ImGuiStackSizes* f(ImGuiStackSizes_ImGuiStackSizes)(void);
TYPE  void f(ImGuiStackSizes_destroy)(ImGuiStackSizes* self);
TYPE  void f(ImGuiStackSizes_SetToCurrentState)(ImGuiStackSizes* self);
TYPE  void f(ImGuiStackSizes_CompareWithCurrentState)(ImGuiStackSizes* self);
TYPE  ImGuiPtrOrIndex* f(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr)(void* ptr);
TYPE  void f(ImGuiPtrOrIndex_destroy)(ImGuiPtrOrIndex* self);
TYPE  ImGuiPtrOrIndex* f(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int)(int index);
TYPE  ImGuiInputEvent* f(ImGuiInputEvent_ImGuiInputEvent)(void);
TYPE  void f(ImGuiInputEvent_destroy)(ImGuiInputEvent* self);
TYPE  ImGuiKeyRoutingData* f(ImGuiKeyRoutingData_ImGuiKeyRoutingData)(void);
TYPE  void f(ImGuiKeyRoutingData_destroy)(ImGuiKeyRoutingData* self);
TYPE  ImGuiKeyRoutingTable* f(ImGuiKeyRoutingTable_ImGuiKeyRoutingTable)(void);
TYPE  void f(ImGuiKeyRoutingTable_destroy)(ImGuiKeyRoutingTable* self);
TYPE  void f(ImGuiKeyRoutingTable_Clear)(ImGuiKeyRoutingTable* self);
TYPE  ImGuiKeyOwnerData* f(ImGuiKeyOwnerData_ImGuiKeyOwnerData)(void);
TYPE  void f(ImGuiKeyOwnerData_destroy)(ImGuiKeyOwnerData* self);
TYPE  ImGuiListClipperRange f(ImGuiListClipperRange_FromIndices)(int min,int max);
TYPE  ImGuiListClipperRange f(ImGuiListClipperRange_FromPositions)(float y1,float y2,int off_min,int off_max);
TYPE  ImGuiListClipperData* f(ImGuiListClipperData_ImGuiListClipperData)(void);
TYPE  void f(ImGuiListClipperData_destroy)(ImGuiListClipperData* self);
TYPE  void f(ImGuiListClipperData_Reset)(ImGuiListClipperData* self,ImGuiListClipper* clipper);
TYPE  ImGuiNavItemData* f(ImGuiNavItemData_ImGuiNavItemData)(void);
TYPE  void f(ImGuiNavItemData_destroy)(ImGuiNavItemData* self);
TYPE  void f(ImGuiNavItemData_Clear)(ImGuiNavItemData* self);
TYPE  ImGuiOldColumnData* f(ImGuiOldColumnData_ImGuiOldColumnData)(void);
TYPE  void f(ImGuiOldColumnData_destroy)(ImGuiOldColumnData* self);
TYPE  ImGuiOldColumns* f(ImGuiOldColumns_ImGuiOldColumns)(void);
TYPE  void f(ImGuiOldColumns_destroy)(ImGuiOldColumns* self);
TYPE  ImGuiDockNode* f(ImGuiDockNode_ImGuiDockNode)(ImGuiID id);
TYPE  void f(ImGuiDockNode_destroy)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsRootNode)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsDockSpace)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsFloatingNode)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsCentralNode)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsHiddenTabBar)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsNoTabBar)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsSplitNode)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsLeafNode)(ImGuiDockNode* self);
TYPE  bool f(ImGuiDockNode_IsEmpty)(ImGuiDockNode* self);
TYPE  void f(ImGuiDockNode_Rect)(ImRect *pOut,ImGuiDockNode* self);
TYPE  void f(ImGuiDockNode_SetLocalFlags)(ImGuiDockNode* self,ImGuiDockNodeFlags flags);
TYPE  void f(ImGuiDockNode_UpdateMergedFlags)(ImGuiDockNode* self);
TYPE  ImGuiDockContext* f(ImGuiDockContext_ImGuiDockContext)(void);
TYPE  void f(ImGuiDockContext_destroy)(ImGuiDockContext* self);
TYPE  ImGuiViewportP* f(ImGuiViewportP_ImGuiViewportP)(void);
TYPE  void f(ImGuiViewportP_destroy)(ImGuiViewportP* self);
TYPE  void f(ImGuiViewportP_ClearRequestFlags)(ImGuiViewportP* self);
TYPE  void f(ImGuiViewportP_CalcWorkRectPos)(ImVec2 *pOut,ImGuiViewportP* self,const ImVec2 off_min);
TYPE  void f(ImGuiViewportP_CalcWorkRectSize)(ImVec2 *pOut,ImGuiViewportP* self,const ImVec2 off_min,const ImVec2 off_max);
TYPE  void f(ImGuiViewportP_UpdateWorkRect)(ImGuiViewportP* self);
TYPE  void f(ImGuiViewportP_GetMainRect)(ImRect *pOut,ImGuiViewportP* self);
TYPE  void f(ImGuiViewportP_GetWorkRect)(ImRect *pOut,ImGuiViewportP* self);
TYPE  void f(ImGuiViewportP_GetBuildWorkRect)(ImRect *pOut,ImGuiViewportP* self);
TYPE  ImGuiWindowSettings* f(ImGuiWindowSettings_ImGuiWindowSettings)(void);
TYPE  void f(ImGuiWindowSettings_destroy)(ImGuiWindowSettings* self);
TYPE  char* f(ImGuiWindowSettings_GetName)(ImGuiWindowSettings* self);
TYPE  ImGuiSettingsHandler* f(ImGuiSettingsHandler_ImGuiSettingsHandler)(void);
TYPE  void f(ImGuiSettingsHandler_destroy)(ImGuiSettingsHandler* self);
TYPE  ImGuiMetricsConfig* f(ImGuiMetricsConfig_ImGuiMetricsConfig)(void);
TYPE  void f(ImGuiMetricsConfig_destroy)(ImGuiMetricsConfig* self);
TYPE  ImGuiStackLevelInfo* f(ImGuiStackLevelInfo_ImGuiStackLevelInfo)(void);
TYPE  void f(ImGuiStackLevelInfo_destroy)(ImGuiStackLevelInfo* self);
TYPE  ImGuiStackTool* f(ImGuiStackTool_ImGuiStackTool)(void);
TYPE  void f(ImGuiStackTool_destroy)(ImGuiStackTool* self);
TYPE  ImGuiContextHook* f(ImGuiContextHook_ImGuiContextHook)(void);
TYPE  void f(ImGuiContextHook_destroy)(ImGuiContextHook* self);
TYPE  ImGuiContext* f(ImGuiContext_ImGuiContext)(ImFontAtlas* shared_font_atlas);
TYPE  void f(ImGuiContext_destroy)(ImGuiContext* self);
TYPE  ImGuiWindow* f(ImGuiWindow_ImGuiWindow)(ImGuiContext* context,const char* name);
TYPE  void f(ImGuiWindow_destroy)(ImGuiWindow* self);
TYPE  ImGuiID f(ImGuiWindow_GetID_Str)(ImGuiWindow* self,const char* str,const char* str_end);
TYPE  ImGuiID f(ImGuiWindow_GetID_Ptr)(ImGuiWindow* self,const void* ptr);
TYPE  ImGuiID f(ImGuiWindow_GetID_Int)(ImGuiWindow* self,int n);
TYPE  ImGuiID f(ImGuiWindow_GetIDFromRectangle)(ImGuiWindow* self,const ImRect r_abs);
TYPE  void f(ImGuiWindow_Rect)(ImRect *pOut,ImGuiWindow* self);
TYPE  float f(ImGuiWindow_CalcFontSize)(ImGuiWindow* self);
TYPE  float f(ImGuiWindow_TitleBarHeight)(ImGuiWindow* self);
TYPE  void f(ImGuiWindow_TitleBarRect)(ImRect *pOut,ImGuiWindow* self);
TYPE  float f(ImGuiWindow_MenuBarHeight)(ImGuiWindow* self);
TYPE  void f(ImGuiWindow_MenuBarRect)(ImRect *pOut,ImGuiWindow* self);
TYPE  ImGuiTabItem* f(ImGuiTabItem_ImGuiTabItem)(void);
TYPE  void f(ImGuiTabItem_destroy)(ImGuiTabItem* self);
TYPE  ImGuiTabBar* f(ImGuiTabBar_ImGuiTabBar)(void);
TYPE  void f(ImGuiTabBar_destroy)(ImGuiTabBar* self);
TYPE  int f(ImGuiTabBar_GetTabOrder)(ImGuiTabBar* self,const ImGuiTabItem* tab);
TYPE  const char* f(ImGuiTabBar_GetTabName)(ImGuiTabBar* self,const ImGuiTabItem* tab);
TYPE  ImGuiTableColumn* f(ImGuiTableColumn_ImGuiTableColumn)(void);
TYPE  void f(ImGuiTableColumn_destroy)(ImGuiTableColumn* self);
TYPE  ImGuiTableInstanceData* f(ImGuiTableInstanceData_ImGuiTableInstanceData)(void);
TYPE  void f(ImGuiTableInstanceData_destroy)(ImGuiTableInstanceData* self);
TYPE  ImGuiTable* f(ImGuiTable_ImGuiTable)(void);
TYPE  void f(ImGuiTable_destroy)(ImGuiTable* self);
TYPE  ImGuiTableTempData* f(ImGuiTableTempData_ImGuiTableTempData)(void);
TYPE  void f(ImGuiTableTempData_destroy)(ImGuiTableTempData* self);
TYPE  ImGuiTableColumnSettings* f(ImGuiTableColumnSettings_ImGuiTableColumnSettings)(void);
TYPE  void f(ImGuiTableColumnSettings_destroy)(ImGuiTableColumnSettings* self);
TYPE  ImGuiTableSettings* f(ImGuiTableSettings_ImGuiTableSettings)(void);
TYPE  void f(ImGuiTableSettings_destroy)(ImGuiTableSettings* self);
TYPE  ImGuiTableColumnSettings* f(ImGuiTableSettings_GetColumnSettings)(ImGuiTableSettings* self);
TYPE  ImGuiWindow* f(igGetCurrentWindowRead)(void);
TYPE  ImGuiWindow* f(igGetCurrentWindow)(void);
TYPE  ImGuiWindow* f(igFindWindowByID)(ImGuiID id);
TYPE  ImGuiWindow* f(igFindWindowByName)(const char* name);
TYPE  void f(igUpdateWindowParentAndRootLinks)(ImGuiWindow* window,ImGuiWindowFlags flags,ImGuiWindow* parent_window);
TYPE  void f(igCalcWindowNextAutoFitSize)(ImVec2 *pOut,ImGuiWindow* window);
TYPE  bool f(igIsWindowChildOf)(ImGuiWindow* window,ImGuiWindow* potential_parent,bool popup_hierarchy,bool dock_hierarchy);
TYPE  bool f(igIsWindowWithinBeginStackOf)(ImGuiWindow* window,ImGuiWindow* potential_parent);
TYPE  bool f(igIsWindowAbove)(ImGuiWindow* potential_above,ImGuiWindow* potential_below);
TYPE  bool f(igIsWindowNavFocusable)(ImGuiWindow* window);
TYPE  void f(igSetWindowPos_WindowPtr)(ImGuiWindow* window,const ImVec2 pos,ImGuiCond cond);
TYPE  void f(igSetWindowSize_WindowPtr)(ImGuiWindow* window,const ImVec2 size,ImGuiCond cond);
TYPE  void f(igSetWindowCollapsed_WindowPtr)(ImGuiWindow* window,bool collapsed,ImGuiCond cond);
TYPE  void f(igSetWindowHitTestHole)(ImGuiWindow* window,const ImVec2 pos,const ImVec2 size);
TYPE  void f(igWindowRectAbsToRel)(ImRect *pOut,ImGuiWindow* window,const ImRect r);
TYPE  void f(igWindowRectRelToAbs)(ImRect *pOut,ImGuiWindow* window,const ImRect r);
TYPE  void f(igFocusWindow)(ImGuiWindow* window);
TYPE  void f(igFocusTopMostWindowUnderOne)(ImGuiWindow* under_this_window,ImGuiWindow* ignore_window);
TYPE  void f(igBringWindowToFocusFront)(ImGuiWindow* window);
TYPE  void f(igBringWindowToDisplayFront)(ImGuiWindow* window);
TYPE  void f(igBringWindowToDisplayBack)(ImGuiWindow* window);
TYPE  void f(igBringWindowToDisplayBehind)(ImGuiWindow* window,ImGuiWindow* above_window);
TYPE  int f(igFindWindowDisplayIndex)(ImGuiWindow* window);
TYPE  ImGuiWindow* f(igFindBottomMostVisibleWindowWithinBeginStack)(ImGuiWindow* window);
TYPE  void f(igSetCurrentFont)(ImFont* font);
TYPE  ImFont* f(igGetDefaultFont)(void);
TYPE  ImDrawList* f(igGetForegroundDrawList_WindowPtr)(ImGuiWindow* window);
TYPE  void f(igInitialize)(void);
TYPE  void f(igShutdown)(void);
TYPE  void f(igUpdateInputEvents)(bool trickle_fast_inputs);
TYPE  void f(igUpdateHoveredWindowAndCaptureFlags)(void);
TYPE  void f(igStartMouseMovingWindow)(ImGuiWindow* window);
TYPE  void f(igStartMouseMovingWindowOrNode)(ImGuiWindow* window,ImGuiDockNode* node,bool undock_floating_node);
TYPE  void f(igUpdateMouseMovingWindowNewFrame)(void);
TYPE  void f(igUpdateMouseMovingWindowEndFrame)(void);
TYPE  ImGuiID f(igAddContextHook)(ImGuiContext* context,const ImGuiContextHook* hook);
TYPE  void f(igRemoveContextHook)(ImGuiContext* context,ImGuiID hook_to_remove);
TYPE  void f(igCallContextHooks)(ImGuiContext* context,ImGuiContextHookType type);
TYPE  void f(igTranslateWindowsInViewport)(ImGuiViewportP* viewport,const ImVec2 old_pos,const ImVec2 new_pos);
TYPE  void f(igScaleWindowsInViewport)(ImGuiViewportP* viewport,float scale);
TYPE  void f(igDestroyPlatformWindow)(ImGuiViewportP* viewport);
TYPE  void f(igSetWindowViewport)(ImGuiWindow* window,ImGuiViewportP* viewport);
TYPE  void f(igSetCurrentViewport)(ImGuiWindow* window,ImGuiViewportP* viewport);
TYPE  const ImGuiPlatformMonitor* f(igGetViewportPlatformMonitor)(ImGuiViewport* viewport);
TYPE  ImGuiViewportP* f(igFindHoveredViewportFromPlatformWindowStack)(const ImVec2 mouse_platform_pos);
TYPE  void f(igMarkIniSettingsDirty_Nil)(void);
TYPE  void f(igMarkIniSettingsDirty_WindowPtr)(ImGuiWindow* window);
TYPE  void f(igClearIniSettings)(void);
TYPE  ImGuiWindowSettings* f(igCreateNewWindowSettings)(const char* name);
TYPE  ImGuiWindowSettings* f(igFindWindowSettings)(ImGuiID id);
TYPE  ImGuiWindowSettings* f(igFindOrCreateWindowSettings)(const char* name);
TYPE  void f(igAddSettingsHandler)(const ImGuiSettingsHandler* handler);
TYPE  void f(igRemoveSettingsHandler)(const char* type_name);
TYPE  ImGuiSettingsHandler* f(igFindSettingsHandler)(const char* type_name);
TYPE  void f(igSetScrollX_WindowPtr)(ImGuiWindow* window,float scroll_x);
TYPE  void f(igSetScrollY_WindowPtr)(ImGuiWindow* window,float scroll_y);
TYPE  void f(igSetScrollFromPosX_WindowPtr)(ImGuiWindow* window,float local_x,float center_x_ratio);
TYPE  void f(igSetScrollFromPosY_WindowPtr)(ImGuiWindow* window,float local_y,float center_y_ratio);
TYPE  void f(igScrollToItem)(ImGuiScrollFlags flags);
TYPE  void f(igScrollToRect)(ImGuiWindow* window,const ImRect rect,ImGuiScrollFlags flags);
TYPE  void f(igScrollToRectEx)(ImVec2 *pOut,ImGuiWindow* window,const ImRect rect,ImGuiScrollFlags flags);
TYPE  void f(igScrollToBringRectIntoView)(ImGuiWindow* window,const ImRect rect);
TYPE  ImGuiID f(igGetItemID)(void);
TYPE  ImGuiItemStatusFlags f(igGetItemStatusFlags)(void);
TYPE  ImGuiItemFlags f(igGetItemFlags)(void);
TYPE  ImGuiID f(igGetActiveID)(void);
TYPE  ImGuiID f(igGetFocusID)(void);
TYPE  void f(igSetActiveID)(ImGuiID id,ImGuiWindow* window);
TYPE  void f(igSetFocusID)(ImGuiID id,ImGuiWindow* window);
TYPE  void f(igClearActiveID)(void);
TYPE  ImGuiID f(igGetHoveredID)(void);
TYPE  void f(igSetHoveredID)(ImGuiID id);
TYPE  void f(igKeepAliveID)(ImGuiID id);
TYPE  void f(igMarkItemEdited)(ImGuiID id);
TYPE  void f(igPushOverrideID)(ImGuiID id);
TYPE  ImGuiID f(igGetIDWithSeed)(const char* str_id_begin,const char* str_id_end,ImGuiID seed);
TYPE  void f(igItemSize_Vec2)(const ImVec2 size,float text_baseline_y);
TYPE  void f(igItemSize_Rect)(const ImRect bb,float text_baseline_y);
TYPE  bool f(igItemAdd)(const ImRect bb,ImGuiID id,const ImRect* nav_bb,ImGuiItemFlags extra_flags);
TYPE  bool f(igItemHoverable)(const ImRect bb,ImGuiID id);
TYPE  bool f(igIsClippedEx)(const ImRect bb,ImGuiID id);
TYPE  void f(igSetLastItemData)(ImGuiID item_id,ImGuiItemFlags in_flags,ImGuiItemStatusFlags status_flags,const ImRect item_rect);
TYPE  void f(igCalcItemSize)(ImVec2 *pOut,ImVec2 size,float default_w,float default_h);
TYPE  float f(igCalcWrapWidthForPos)(const ImVec2 pos,float wrap_pos_x);
TYPE  void f(igPushMultiItemsWidths)(int components,float width_full);
TYPE  bool f(igIsItemToggledSelection)(void);
TYPE  void f(igGetContentRegionMaxAbs)(ImVec2 *pOut);
TYPE  void f(igShrinkWidths)(ImGuiShrinkWidthItem* items,int count,float width_excess);
TYPE  void f(igPushItemFlag)(ImGuiItemFlags option,bool enabled);
TYPE  void f(igPopItemFlag)(void);
TYPE  void f(igLogBegin)(ImGuiLogType type,int auto_open_depth);
TYPE  void f(igLogToBuffer)(int auto_open_depth);
TYPE  void f(igLogRenderedText)(const ImVec2* ref_pos,const char* text,const char* text_end);
TYPE  void f(igLogSetNextTextDecoration)(const char* prefix,const char* suffix);
TYPE  bool f(igBeginChildEx)(const char* name,ImGuiID id,const ImVec2 size_arg,bool border,ImGuiWindowFlags flags);
TYPE  void f(igOpenPopupEx)(ImGuiID id,ImGuiPopupFlags popup_flags);
TYPE  void f(igClosePopupToLevel)(int remaining,bool restore_focus_to_window_under_popup);
TYPE  void f(igClosePopupsOverWindow)(ImGuiWindow* ref_window,bool restore_focus_to_window_under_popup);
TYPE  void f(igClosePopupsExceptModals)(void);
TYPE  bool f(igIsPopupOpen_ID)(ImGuiID id,ImGuiPopupFlags popup_flags);
TYPE  bool f(igBeginPopupEx)(ImGuiID id,ImGuiWindowFlags extra_flags);
TYPE  void f(igBeginTooltipEx)(ImGuiTooltipFlags tooltip_flags,ImGuiWindowFlags extra_window_flags);
TYPE  void f(igGetPopupAllowedExtentRect)(ImRect *pOut,ImGuiWindow* window);
TYPE  ImGuiWindow* f(igGetTopMostPopupModal)(void);
TYPE  ImGuiWindow* f(igGetTopMostAndVisiblePopupModal)(void);
TYPE  void f(igFindBestWindowPosForPopup)(ImVec2 *pOut,ImGuiWindow* window);
TYPE  void f(igFindBestWindowPosForPopupEx)(ImVec2 *pOut,const ImVec2 ref_pos,const ImVec2 size,ImGuiDir* last_dir,const ImRect r_outer,const ImRect r_avoid,ImGuiPopupPositionPolicy policy);
TYPE  bool f(igBeginViewportSideBar)(const char* name,ImGuiViewport* viewport,ImGuiDir dir,float size,ImGuiWindowFlags window_flags);
TYPE  bool f(igBeginMenuEx)(const char* label,const char* icon,bool enabled);
TYPE  bool f(igMenuItemEx)(const char* label,const char* icon,const char* shortcut,bool selected,bool enabled);
TYPE  bool f(igBeginComboPopup)(ImGuiID popup_id,const ImRect bb,ImGuiComboFlags flags);
TYPE  bool f(igBeginComboPreview)(void);
TYPE  void f(igEndComboPreview)(void);
TYPE  void f(igNavInitWindow)(ImGuiWindow* window,bool force_reinit);
TYPE  void f(igNavInitRequestApplyResult)(void);
TYPE  bool f(igNavMoveRequestButNoResultYet)(void);
TYPE  void f(igNavMoveRequestSubmit)(ImGuiDir move_dir,ImGuiDir clip_dir,ImGuiNavMoveFlags move_flags,ImGuiScrollFlags scroll_flags);
TYPE  void f(igNavMoveRequestForward)(ImGuiDir move_dir,ImGuiDir clip_dir,ImGuiNavMoveFlags move_flags,ImGuiScrollFlags scroll_flags);
TYPE  void f(igNavMoveRequestResolveWithLastItem)(ImGuiNavItemData* result);
TYPE  void f(igNavMoveRequestCancel)(void);
TYPE  void f(igNavMoveRequestApplyResult)(void);
TYPE  void f(igNavMoveRequestTryWrapping)(ImGuiWindow* window,ImGuiNavMoveFlags move_flags);
TYPE  void f(igActivateItem)(ImGuiID id);
TYPE  void f(igSetNavWindow)(ImGuiWindow* window);
TYPE  void f(igSetNavID)(ImGuiID id,ImGuiNavLayer nav_layer,ImGuiID focus_scope_id,const ImRect rect_rel);
TYPE  bool f(igIsNamedKey)(ImGuiKey key);
TYPE  bool f(igIsNamedKeyOrModKey)(ImGuiKey key);
TYPE  bool f(igIsLegacyKey)(ImGuiKey key);
TYPE  bool f(igIsGamepadKey)(ImGuiKey key);
TYPE  bool f(igIsAliasKey)(ImGuiKey key);
TYPE  ImGuiKey f(igConvertSingleModFlagToKey)(ImGuiKey key);
TYPE  ImGuiKeyData* f(igGetKeyData)(ImGuiKey key);
TYPE  void f(igGetKeyChordName)(ImGuiKeyChord key_chord,char* out_buf,int out_buf_size);
TYPE  ImGuiKey f(igMouseButtonToKey)(ImGuiMouseButton button);
TYPE  bool f(igIsMouseDragPastThreshold)(ImGuiMouseButton button,float lock_threshold);
TYPE  void f(igGetKeyVector2d)(ImVec2 *pOut,ImGuiKey key_left,ImGuiKey key_right,ImGuiKey key_up,ImGuiKey key_down);
TYPE  float f(igGetNavTweakPressedAmount)(ImGuiAxis axis);
TYPE  int f(igCalcTypematicRepeatAmount)(float t0,float t1,float repeat_delay,float repeat_rate);
TYPE  void f(igGetTypematicRepeatRate)(ImGuiInputFlags flags,float* repeat_delay,float* repeat_rate);
TYPE  void f(igSetActiveIdUsingAllKeyboardKeys)(void);
TYPE  bool f(igIsActiveIdUsingNavDir)(ImGuiDir dir);
TYPE  ImGuiID f(igGetKeyOwner)(ImGuiKey key);
TYPE  void f(igSetKeyOwner)(ImGuiKey key,ImGuiID owner_id,ImGuiInputFlags flags);
TYPE  void f(igSetItemKeyOwner)(ImGuiKey key,ImGuiInputFlags flags);
TYPE  bool f(igTestKeyOwner)(ImGuiKey key,ImGuiID owner_id);
TYPE  ImGuiKeyOwnerData* f(igGetKeyOwnerData)(ImGuiKey key);
TYPE  bool f(igIsKeyDown_ID)(ImGuiKey key,ImGuiID owner_id);
TYPE  bool f(igIsKeyPressed_ID)(ImGuiKey key,ImGuiID owner_id,ImGuiInputFlags flags);
TYPE  bool f(igIsKeyReleased_ID)(ImGuiKey key,ImGuiID owner_id);
TYPE  bool f(igIsMouseDown_ID)(ImGuiMouseButton button,ImGuiID owner_id);
TYPE  bool f(igIsMouseClicked_ID)(ImGuiMouseButton button,ImGuiID owner_id,ImGuiInputFlags flags);
TYPE  bool f(igIsMouseReleased_ID)(ImGuiMouseButton button,ImGuiID owner_id);
TYPE  bool f(igShortcut)(ImGuiKeyChord key_chord,ImGuiID owner_id,ImGuiInputFlags flags);
TYPE  bool f(igSetShortcutRouting)(ImGuiKeyChord key_chord,ImGuiID owner_id,ImGuiInputFlags flags);
TYPE  bool f(igTestShortcutRouting)(ImGuiKeyChord key_chord,ImGuiID owner_id);
TYPE  ImGuiKeyRoutingData* f(igGetShortcutRoutingData)(ImGuiKeyChord key_chord);
TYPE  void f(igDockContextInitialize)(ImGuiContext* ctx);
TYPE  void f(igDockContextShutdown)(ImGuiContext* ctx);
TYPE  void f(igDockContextClearNodes)(ImGuiContext* ctx,ImGuiID root_id,bool clear_settings_refs);
TYPE  void f(igDockContextRebuildNodes)(ImGuiContext* ctx);
TYPE  void f(igDockContextNewFrameUpdateUndocking)(ImGuiContext* ctx);
TYPE  void f(igDockContextNewFrameUpdateDocking)(ImGuiContext* ctx);
TYPE  void f(igDockContextEndFrame)(ImGuiContext* ctx);
TYPE  ImGuiID f(igDockContextGenNodeID)(ImGuiContext* ctx);
TYPE  void f(igDockContextQueueDock)(ImGuiContext* ctx,ImGuiWindow* target,ImGuiDockNode* target_node,ImGuiWindow* payload,ImGuiDir split_dir,float split_ratio,bool split_outer);
TYPE  void f(igDockContextQueueUndockWindow)(ImGuiContext* ctx,ImGuiWindow* window);
TYPE  void f(igDockContextQueueUndockNode)(ImGuiContext* ctx,ImGuiDockNode* node);
TYPE  bool f(igDockContextCalcDropPosForDocking)(ImGuiWindow* target,ImGuiDockNode* target_node,ImGuiWindow* payload_window,ImGuiDockNode* payload_node,ImGuiDir split_dir,bool split_outer,ImVec2* out_pos);
TYPE  ImGuiDockNode* f(igDockContextFindNodeByID)(ImGuiContext* ctx,ImGuiID id);
TYPE  bool f(igDockNodeBeginAmendTabBar)(ImGuiDockNode* node);
TYPE  void f(igDockNodeEndAmendTabBar)(void);
TYPE  ImGuiDockNode* f(igDockNodeGetRootNode)(ImGuiDockNode* node);
TYPE  bool f(igDockNodeIsInHierarchyOf)(ImGuiDockNode* node,ImGuiDockNode* parent);
TYPE  int f(igDockNodeGetDepth)(const ImGuiDockNode* node);
TYPE  ImGuiID f(igDockNodeGetWindowMenuButtonId)(const ImGuiDockNode* node);
TYPE  ImGuiDockNode* f(igGetWindowDockNode)(void);
TYPE  bool f(igGetWindowAlwaysWantOwnTabBar)(ImGuiWindow* window);
TYPE  void f(igBeginDocked)(ImGuiWindow* window,bool* p_open);
TYPE  void f(igBeginDockableDragDropSource)(ImGuiWindow* window);
TYPE  void f(igBeginDockableDragDropTarget)(ImGuiWindow* window);
TYPE  void f(igSetWindowDock)(ImGuiWindow* window,ImGuiID dock_id,ImGuiCond cond);
TYPE  void f(igDockBuilderDockWindow)(const char* window_name,ImGuiID node_id);
TYPE  ImGuiDockNode* f(igDockBuilderGetNode)(ImGuiID node_id);
TYPE  ImGuiDockNode* f(igDockBuilderGetCentralNode)(ImGuiID node_id);
TYPE  ImGuiID f(igDockBuilderAddNode)(ImGuiID node_id,ImGuiDockNodeFlags flags);
TYPE  void f(igDockBuilderRemoveNode)(ImGuiID node_id);
TYPE  void f(igDockBuilderRemoveNodeDockedWindows)(ImGuiID node_id,bool clear_settings_refs);
TYPE  void f(igDockBuilderRemoveNodeChildNodes)(ImGuiID node_id);
TYPE  void f(igDockBuilderSetNodePos)(ImGuiID node_id,ImVec2 pos);
TYPE  void f(igDockBuilderSetNodeSize)(ImGuiID node_id,ImVec2 size);
TYPE  ImGuiID f(igDockBuilderSplitNode)(ImGuiID node_id,ImGuiDir split_dir,float size_ratio_for_node_at_dir,ImGuiID* out_id_at_dir,ImGuiID* out_id_at_opposite_dir);
TYPE  void f(igDockBuilderCopyDockSpace)(ImGuiID src_dockspace_id,ImGuiID dst_dockspace_id,ImVector_const_charPtr* in_window_remap_pairs);
TYPE  void f(igDockBuilderCopyNode)(ImGuiID src_node_id,ImGuiID dst_node_id,ImVector_ImGuiID* out_node_remap_pairs);
TYPE  void f(igDockBuilderCopyWindowSettings)(const char* src_name,const char* dst_name);
TYPE  void f(igDockBuilderFinish)(ImGuiID node_id);
TYPE  void f(igPushFocusScope)(ImGuiID id);
TYPE  void f(igPopFocusScope)(void);
TYPE  ImGuiID f(igGetCurrentFocusScope)(void);
TYPE  bool f(igIsDragDropActive)(void);
TYPE  bool f(igBeginDragDropTargetCustom)(const ImRect bb,ImGuiID id);
TYPE  void f(igClearDragDrop)(void);
TYPE  bool f(igIsDragDropPayloadBeingAccepted)(void);
TYPE  void f(igRenderDragDropTargetRect)(const ImRect bb);
TYPE  void f(igSetWindowClipRectBeforeSetChannel)(ImGuiWindow* window,const ImRect clip_rect);
TYPE  void f(igBeginColumns)(const char* str_id,int count,ImGuiOldColumnFlags flags);
TYPE  void f(igEndColumns)(void);
TYPE  void f(igPushColumnClipRect)(int column_index);
TYPE  void f(igPushColumnsBackground)(void);
TYPE  void f(igPopColumnsBackground)(void);
TYPE  ImGuiID f(igGetColumnsID)(const char* str_id,int count);
TYPE  ImGuiOldColumns* f(igFindOrCreateColumns)(ImGuiWindow* window,ImGuiID id);
TYPE  float f(igGetColumnOffsetFromNorm)(const ImGuiOldColumns* columns,float offset_norm);
TYPE  float f(igGetColumnNormFromOffset)(const ImGuiOldColumns* columns,float offset);
TYPE  void f(igTableOpenContextMenu)(int column_n);
TYPE  void f(igTableSetColumnWidth)(int column_n,float width);
TYPE  void f(igTableSetColumnSortDirection)(int column_n,ImGuiSortDirection sort_direction,bool append_to_sort_specs);
TYPE  int f(igTableGetHoveredColumn)(void);
TYPE  float f(igTableGetHeaderRowHeight)(void);
TYPE  void f(igTablePushBackgroundChannel)(void);
TYPE  void f(igTablePopBackgroundChannel)(void);
TYPE  ImGuiTable* f(igGetCurrentTable)(void);
TYPE  ImGuiTable* f(igTableFindByID)(ImGuiID id);
TYPE  bool f(igBeginTableEx)(const char* name,ImGuiID id,int columns_count,ImGuiTableFlags flags,const ImVec2 outer_size,float inner_width);
TYPE  void f(igTableBeginInitMemory)(ImGuiTable* table,int columns_count);
TYPE  void f(igTableBeginApplyRequests)(ImGuiTable* table);
TYPE  void f(igTableSetupDrawChannels)(ImGuiTable* table);
TYPE  void f(igTableUpdateLayout)(ImGuiTable* table);
TYPE  void f(igTableUpdateBorders)(ImGuiTable* table);
TYPE  void f(igTableUpdateColumnsWeightFromWidth)(ImGuiTable* table);
TYPE  void f(igTableDrawBorders)(ImGuiTable* table);
TYPE  void f(igTableDrawContextMenu)(ImGuiTable* table);
TYPE  bool f(igTableBeginContextMenuPopup)(ImGuiTable* table);
TYPE  void f(igTableMergeDrawChannels)(ImGuiTable* table);
TYPE  ImGuiTableInstanceData* f(igTableGetInstanceData)(ImGuiTable* table,int instance_no);
TYPE  void f(igTableSortSpecsSanitize)(ImGuiTable* table);
TYPE  void f(igTableSortSpecsBuild)(ImGuiTable* table);
TYPE  ImGuiSortDirection f(igTableGetColumnNextSortDirection)(ImGuiTableColumn* column);
TYPE  void f(igTableFixColumnSortDirection)(ImGuiTable* table,ImGuiTableColumn* column);
TYPE  float f(igTableGetColumnWidthAuto)(ImGuiTable* table,ImGuiTableColumn* column);
TYPE  void f(igTableBeginRow)(ImGuiTable* table);
TYPE  void f(igTableEndRow)(ImGuiTable* table);
TYPE  void f(igTableBeginCell)(ImGuiTable* table,int column_n);
TYPE  void f(igTableEndCell)(ImGuiTable* table);
TYPE  void f(igTableGetCellBgRect)(ImRect *pOut,const ImGuiTable* table,int column_n);
TYPE  const char* f(igTableGetColumnName_TablePtr)(const ImGuiTable* table,int column_n);
TYPE  ImGuiID f(igTableGetColumnResizeID)(const ImGuiTable* table,int column_n,int instance_no);
TYPE  float f(igTableGetMaxColumnWidth)(const ImGuiTable* table,int column_n);
TYPE  void f(igTableSetColumnWidthAutoSingle)(ImGuiTable* table,int column_n);
TYPE  void f(igTableSetColumnWidthAutoAll)(ImGuiTable* table);
TYPE  void f(igTableRemove)(ImGuiTable* table);
TYPE  void f(igTableGcCompactTransientBuffers_TablePtr)(ImGuiTable* table);
TYPE  void f(igTableGcCompactTransientBuffers_TableTempDataPtr)(ImGuiTableTempData* table);
TYPE  void f(igTableGcCompactSettings)(void);
TYPE  void f(igTableLoadSettings)(ImGuiTable* table);
TYPE  void f(igTableSaveSettings)(ImGuiTable* table);
TYPE  void f(igTableResetSettings)(ImGuiTable* table);
TYPE  ImGuiTableSettings* f(igTableGetBoundSettings)(ImGuiTable* table);
TYPE  void f(igTableSettingsAddSettingsHandler)(void);
TYPE  ImGuiTableSettings* f(igTableSettingsCreate)(ImGuiID id,int columns_count);
TYPE  ImGuiTableSettings* f(igTableSettingsFindByID)(ImGuiID id);
TYPE  bool f(igBeginTabBarEx)(ImGuiTabBar* tab_bar,const ImRect bb,ImGuiTabBarFlags flags,ImGuiDockNode* dock_node);
TYPE  ImGuiTabItem* f(igTabBarFindTabByID)(ImGuiTabBar* tab_bar,ImGuiID tab_id);
TYPE  ImGuiTabItem* f(igTabBarFindMostRecentlySelectedTabForActiveWindow)(ImGuiTabBar* tab_bar);
TYPE  void f(igTabBarAddTab)(ImGuiTabBar* tab_bar,ImGuiTabItemFlags tab_flags,ImGuiWindow* window);
TYPE  void f(igTabBarRemoveTab)(ImGuiTabBar* tab_bar,ImGuiID tab_id);
TYPE  void f(igTabBarCloseTab)(ImGuiTabBar* tab_bar,ImGuiTabItem* tab);
TYPE  void f(igTabBarQueueReorder)(ImGuiTabBar* tab_bar,const ImGuiTabItem* tab,int offset);
TYPE  void f(igTabBarQueueReorderFromMousePos)(ImGuiTabBar* tab_bar,const ImGuiTabItem* tab,ImVec2 mouse_pos);
TYPE  bool f(igTabBarProcessReorder)(ImGuiTabBar* tab_bar);
TYPE  bool f(igTabItemEx)(ImGuiTabBar* tab_bar,const char* label,bool* p_open,ImGuiTabItemFlags flags,ImGuiWindow* docked_window);
TYPE  void f(igTabItemCalcSize_Str)(ImVec2 *pOut,const char* label,bool has_close_button_or_unsaved_marker);
TYPE  void f(igTabItemCalcSize_WindowPtr)(ImVec2 *pOut,ImGuiWindow* window);
TYPE  void f(igTabItemBackground)(ImDrawList* draw_list,const ImRect bb,ImGuiTabItemFlags flags,ImU32 col);
TYPE  void f(igTabItemLabelAndCloseButton)(ImDrawList* draw_list,const ImRect bb,ImGuiTabItemFlags flags,ImVec2 frame_padding,const char* label,ImGuiID tab_id,ImGuiID close_button_id,bool is_contents_visible,bool* out_just_closed,bool* out_text_clipped);
TYPE  void f(igRenderText)(ImVec2 pos,const char* text,const char* text_end,bool hide_text_after_hash);
TYPE  void f(igRenderTextWrapped)(ImVec2 pos,const char* text,const char* text_end,float wrap_width);
TYPE  void f(igRenderTextClipped)(const ImVec2 pos_min,const ImVec2 pos_max,const char* text,const char* text_end,const ImVec2* text_size_if_known,const ImVec2 align,const ImRect* clip_rect);
TYPE  void f(igRenderTextClippedEx)(ImDrawList* draw_list,const ImVec2 pos_min,const ImVec2 pos_max,const char* text,const char* text_end,const ImVec2* text_size_if_known,const ImVec2 align,const ImRect* clip_rect);
TYPE  void f(igRenderTextEllipsis)(ImDrawList* draw_list,const ImVec2 pos_min,const ImVec2 pos_max,float clip_max_x,float ellipsis_max_x,const char* text,const char* text_end,const ImVec2* text_size_if_known);
TYPE  void f(igRenderFrame)(ImVec2 p_min,ImVec2 p_max,ImU32 fill_col,bool border,float rounding);
TYPE  void f(igRenderFrameBorder)(ImVec2 p_min,ImVec2 p_max,float rounding);
TYPE  void f(igRenderColorRectWithAlphaCheckerboard)(ImDrawList* draw_list,ImVec2 p_min,ImVec2 p_max,ImU32 fill_col,float grid_step,ImVec2 grid_off,float rounding,ImDrawFlags flags);
TYPE  void f(igRenderNavHighlight)(const ImRect bb,ImGuiID id,ImGuiNavHighlightFlags flags);
TYPE  const char* f(igFindRenderedTextEnd)(const char* text,const char* text_end);
TYPE  void f(igRenderMouseCursor)(ImVec2 pos,float scale,ImGuiMouseCursor mouse_cursor,ImU32 col_fill,ImU32 col_border,ImU32 col_shadow);
TYPE  void f(igRenderArrow)(ImDrawList* draw_list,ImVec2 pos,ImU32 col,ImGuiDir dir,float scale);
TYPE  void f(igRenderBullet)(ImDrawList* draw_list,ImVec2 pos,ImU32 col);
TYPE  void f(igRenderCheckMark)(ImDrawList* draw_list,ImVec2 pos,ImU32 col,float sz);
TYPE  void f(igRenderArrowPointingAt)(ImDrawList* draw_list,ImVec2 pos,ImVec2 half_sz,ImGuiDir direction,ImU32 col);
TYPE  void f(igRenderArrowDockMenu)(ImDrawList* draw_list,ImVec2 p_min,float sz,ImU32 col);
TYPE  void f(igRenderRectFilledRangeH)(ImDrawList* draw_list,const ImRect rect,ImU32 col,float x_start_norm,float x_end_norm,float rounding);
TYPE  void f(igRenderRectFilledWithHole)(ImDrawList* draw_list,const ImRect outer,const ImRect inner,ImU32 col,float rounding);
TYPE  ImDrawFlags f(igCalcRoundingFlagsForRectInRect)(const ImRect r_in,const ImRect r_outer,float threshold);
TYPE  void f(igTextEx)(const char* text,const char* text_end,ImGuiTextFlags flags);
TYPE  bool f(igButtonEx)(const char* label,const ImVec2 size_arg,ImGuiButtonFlags flags);
TYPE  bool f(igCloseButton)(ImGuiID id,const ImVec2 pos);
TYPE  bool f(igCollapseButton)(ImGuiID id,const ImVec2 pos,ImGuiDockNode* dock_node);
TYPE  bool f(igArrowButtonEx)(const char* str_id,ImGuiDir dir,ImVec2 size_arg,ImGuiButtonFlags flags);
TYPE  void f(igScrollbar)(ImGuiAxis axis);
TYPE  bool f(igScrollbarEx)(const ImRect bb,ImGuiID id,ImGuiAxis axis,ImS64* p_scroll_v,ImS64 avail_v,ImS64 contents_v,ImDrawFlags flags);
TYPE  bool f(igImageButtonEx)(ImGuiID id,ImTextureID texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 bg_col,const ImVec4 tint_col);
TYPE  void f(igGetWindowScrollbarRect)(ImRect *pOut,ImGuiWindow* window,ImGuiAxis axis);
TYPE  ImGuiID f(igGetWindowScrollbarID)(ImGuiWindow* window,ImGuiAxis axis);
TYPE  ImGuiID f(igGetWindowResizeCornerID)(ImGuiWindow* window,int n);
TYPE  ImGuiID f(igGetWindowResizeBorderID)(ImGuiWindow* window,ImGuiDir dir);
TYPE  void f(igSeparatorEx)(ImGuiSeparatorFlags flags);
TYPE  bool f(igCheckboxFlags_S64Ptr)(const char* label,ImS64* flags,ImS64 flags_value);
TYPE  bool f(igCheckboxFlags_U64Ptr)(const char* label,ImU64* flags,ImU64 flags_value);
TYPE  bool f(igButtonBehavior)(const ImRect bb,ImGuiID id,bool* out_hovered,bool* out_held,ImGuiButtonFlags flags);
TYPE  bool f(igDragBehavior)(ImGuiID id,ImGuiDataType data_type,void* p_v,float v_speed,const void* p_min,const void* p_max,const char* format,ImGuiSliderFlags flags);
TYPE  bool f(igSliderBehavior)(const ImRect bb,ImGuiID id,ImGuiDataType data_type,void* p_v,const void* p_min,const void* p_max,const char* format,ImGuiSliderFlags flags,ImRect* out_grab_bb);
TYPE  bool f(igSplitterBehavior)(const ImRect bb,ImGuiID id,ImGuiAxis axis,float* size1,float* size2,float min_size1,float min_size2,float hover_extend,float hover_visibility_delay,ImU32 bg_col);
TYPE  bool f(igTreeNodeBehavior)(ImGuiID id,ImGuiTreeNodeFlags flags,const char* label,const char* label_end);
TYPE  void f(igTreePushOverrideID)(ImGuiID id);
TYPE  void f(igTreeNodeSetOpen)(ImGuiID id,bool open);
TYPE  bool f(igTreeNodeUpdateNextOpen)(ImGuiID id,ImGuiTreeNodeFlags flags);
TYPE  const ImGuiDataTypeInfo* f(igDataTypeGetInfo)(ImGuiDataType data_type);
TYPE  int f(igDataTypeFormatString)(char* buf,int buf_size,ImGuiDataType data_type,const void* p_data,const char* format);
TYPE  void f(igDataTypeApplyOp)(ImGuiDataType data_type,int op,void* output,const void* arg_1,const void* arg_2);
TYPE  bool f(igDataTypeApplyFromText)(const char* buf,ImGuiDataType data_type,void* p_data,const char* format);
TYPE  int f(igDataTypeCompare)(ImGuiDataType data_type,const void* arg_1,const void* arg_2);
TYPE  bool f(igDataTypeClamp)(ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max);
TYPE  bool f(igInputTextEx)(const char* label,const char* hint,char* buf,int buf_size,const ImVec2 size_arg,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data);
TYPE  bool f(igTempInputText)(const ImRect bb,ImGuiID id,const char* label,char* buf,int buf_size,ImGuiInputTextFlags flags);
TYPE  bool f(igTempInputScalar)(const ImRect bb,ImGuiID id,const char* label,ImGuiDataType data_type,void* p_data,const char* format,const void* p_clamp_min,const void* p_clamp_max);
TYPE  bool f(igTempInputIsActive)(ImGuiID id);
TYPE  ImGuiInputTextState* f(igGetInputTextState)(ImGuiID id);
TYPE  void f(igColorTooltip)(const char* text,const float* col,ImGuiColorEditFlags flags);
TYPE  void f(igColorEditOptionsPopup)(const float* col,ImGuiColorEditFlags flags);
TYPE  void f(igColorPickerOptionsPopup)(const float* ref_col,ImGuiColorEditFlags flags);
TYPE  int f(igPlotEx)(ImGuiPlotType plot_type,const char* label,float(*values_getter)(void* data,int idx),void* data,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 frame_size);
TYPE  void f(igShadeVertsLinearColorGradientKeepAlpha)(ImDrawList* draw_list,int vert_start_idx,int vert_end_idx,ImVec2 gradient_p0,ImVec2 gradient_p1,ImU32 col0,ImU32 col1);
TYPE  void f(igShadeVertsLinearUV)(ImDrawList* draw_list,int vert_start_idx,int vert_end_idx,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,bool clamp);
TYPE  void f(igGcCompactTransientMiscBuffers)(void);
TYPE  void f(igGcCompactTransientWindowBuffers)(ImGuiWindow* window);
TYPE  void f(igGcAwakeTransientWindowBuffers)(ImGuiWindow* window);
TYPE  void f(igDebugLog)(const char* fmt,...);
TYPE  void f(igDebugLogV)(const char* fmt,va_list args);
TYPE  void f(igErrorCheckEndFrameRecover)(ImGuiErrorLogCallback log_callback,void* user_data);
TYPE  void f(igErrorCheckEndWindowRecover)(ImGuiErrorLogCallback log_callback,void* user_data);
TYPE  void f(igErrorCheckUsingSetCursorPosToExtendParentBoundaries)(void);
TYPE  void f(igDebugLocateItem)(ImGuiID target_id);
TYPE  void f(igDebugLocateItemOnHover)(ImGuiID target_id);
TYPE  void f(igDebugLocateItemResolveWithLastItem)(void);
TYPE  void f(igDebugDrawItemRect)(ImU32 col);
TYPE  void f(igDebugStartItemPicker)(void);
TYPE  void f(igShowFontAtlas)(ImFontAtlas* atlas);
TYPE  void f(igDebugHookIdInfo)(ImGuiID id,ImGuiDataType data_type,const void* data_id,const void* data_id_end);
TYPE  void f(igDebugNodeColumns)(ImGuiOldColumns* columns);
TYPE  void f(igDebugNodeDockNode)(ImGuiDockNode* node,const char* label);
TYPE  void f(igDebugNodeDrawList)(ImGuiWindow* window,ImGuiViewportP* viewport,const ImDrawList* draw_list,const char* label);
TYPE  void f(igDebugNodeDrawCmdShowMeshAndBoundingBox)(ImDrawList* out_draw_list,const ImDrawList* draw_list,const ImDrawCmd* draw_cmd,bool show_mesh,bool show_aabb);
TYPE  void f(igDebugNodeFont)(ImFont* font);
TYPE  void f(igDebugNodeFontGlyph)(ImFont* font,const ImFontGlyph* glyph);
TYPE  void f(igDebugNodeStorage)(ImGuiStorage* storage,const char* label);
TYPE  void f(igDebugNodeTabBar)(ImGuiTabBar* tab_bar,const char* label);
TYPE  void f(igDebugNodeTable)(ImGuiTable* table);
TYPE  void f(igDebugNodeTableSettings)(ImGuiTableSettings* settings);
TYPE  void f(igDebugNodeInputTextState)(ImGuiInputTextState* state);
TYPE  void f(igDebugNodeWindow)(ImGuiWindow* window,const char* label);
TYPE  void f(igDebugNodeWindowSettings)(ImGuiWindowSettings* settings);
TYPE  void f(igDebugNodeWindowsList)(ImVector_ImGuiWindowPtr* windows,const char* label);
TYPE  void f(igDebugNodeWindowsListByBeginStackParent)(ImGuiWindow** windows,int windows_size,ImGuiWindow* parent_in_begin_stack);
TYPE  void f(igDebugNodeViewport)(ImGuiViewportP* viewport);
TYPE  void f(igDebugRenderViewportThumbnail)(ImDrawList* draw_list,ImGuiViewportP* viewport,const ImRect bb);
TYPE  bool f(igIsKeyPressedMap)(ImGuiKey key,bool repeat);
TYPE  const ImFontBuilderIO* f(igImFontAtlasGetBuilderForStbTruetype)(void);
TYPE  void f(igImFontAtlasBuildInit)(ImFontAtlas* atlas);
TYPE  void f(igImFontAtlasBuildSetupFont)(ImFontAtlas* atlas,ImFont* font,ImFontConfig* font_config,float ascent,float descent);
TYPE  void f(igImFontAtlasBuildPackCustomRects)(ImFontAtlas* atlas,void* stbrp_context_opaque);
TYPE  void f(igImFontAtlasBuildFinish)(ImFontAtlas* atlas);
TYPE  void f(igImFontAtlasBuildRender8bppRectFromString)(ImFontAtlas* atlas,int x,int y,int w,int h,const char* in_str,char in_marker_char,unsigned char in_marker_pixel_value);
TYPE  void f(igImFontAtlasBuildRender32bppRectFromString)(ImFontAtlas* atlas,int x,int y,int w,int h,const char* in_str,char in_marker_char,unsigned int in_marker_pixel_value);
TYPE  void f(igImFontAtlasBuildMultiplyCalcLookupTable)(unsigned char out_table[256],float in_multiply_factor);
TYPE  void f(igImFontAtlasBuildMultiplyRectAlpha8)(const unsigned char table[256],unsigned char* pixels,int x,int y,int w,int h,int stride);
/////////////////////////hand written functions
//no LogTextV
TYPE  void f(igLogText)(CONST char *fmt, ...);
//no appendfV
TYPE  void f(ImGuiTextBuffer_appendf)(struct ImGuiTextBuffer *buffer, const char *fmt, ...);
//for getting FLT_MAX in bindings
TYPE  float f(igGET_FLT_MAX)(void);
//for getting FLT_MIN in bindings
TYPE  float f(igGET_FLT_MIN)(void);
CIMGUI_API ImVector_ImWchar* ImVector_ImWchar_create(void);
CIMGUI_API void ImVector_ImWchar_destroy(ImVector_ImWchar* self);
CIMGUI_API void ImVector_ImWchar_Init(ImVector_ImWchar* p);
CIMGUI_API void ImVector_ImWchar_UnInit(ImVector_ImWchar* p);
#endif //CIMGUI_INCLUDED
#ifndef NO_FPTR
d(igCreateContext)d(igDestroyContext)d(igGetCurrentContext)d(igSetCurrentContext)d(igGetIO)d(igGetStyle)d(igNewFrame)d(igEndFrame)d(igRender)d(igGetDrawData)d(igShowDemoWindow)d(igShowMetricsWindow)d(igShowDebugLogWindow)d(igShowStackToolWindow)d(igShowAboutWindow)d(igShowStyleEditor)d(igShowStyleSelector)d(igShowFontSelector)d(igShowUserGuide)d(igGetVersion)d(igStyleColorsDark)d(igStyleColorsLight)d(igStyleColorsClassic)d(igBegin)d(igEnd)d(igBeginChild_Str)d(igBeginChild_ID)d(igEndChild)d(igIsWindowAppearing)d(igIsWindowCollapsed)d(igIsWindowFocused)d(igIsWindowHovered)d(igGetWindowDrawList)d(igGetWindowDpiScale)d(igGetWindowPos)d(igGetWindowSize)d(igGetWindowWidth)d(igGetWindowHeight)d(igGetWindowViewport)d(igSetNextWindowPos)d(igSetNextWindowSize)d(igSetNextWindowSizeConstraints)d(igSetNextWindowContentSize)d(igSetNextWindowCollapsed)d(igSetNextWindowFocus)d(igSetNextWindowScroll)d(igSetNextWindowBgAlpha)d(igSetNextWindowViewport)d(igSetWindowPos_Vec2)d(igSetWindowSize_Vec2)d(igSetWindowCollapsed_Bool)d(igSetWindowFocus_Nil)d(igSetWindowFontScale)d(igSetWindowPos_Str)d(igSetWindowSize_Str)d(igSetWindowCollapsed_Str)d(igSetWindowFocus_Str)d(igGetContentRegionAvail)d(igGetContentRegionMax)d(igGetWindowContentRegionMin)d(igGetWindowContentRegionMax)d(igGetScrollX)d(igGetScrollY)d(igSetScrollX_Float)d(igSetScrollY_Float)d(igGetScrollMaxX)d(igGetScrollMaxY)d(igSetScrollHereX)d(igSetScrollHereY)d(igSetScrollFromPosX_Float)d(igSetScrollFromPosY_Float)d(igPushFont)d(igPopFont)d(igPushStyleColor_U32)d(igPushStyleColor_Vec4)d(igPopStyleColor)d(igPushStyleVar_Float)d(igPushStyleVar_Vec2)d(igPopStyleVar)d(igPushAllowKeyboardFocus)d(igPopAllowKeyboardFocus)d(igPushButtonRepeat)d(igPopButtonRepeat)d(igPushItemWidth)d(igPopItemWidth)d(igSetNextItemWidth)d(igCalcItemWidth)d(igPushTextWrapPos)d(igPopTextWrapPos)d(igGetFont)d(igGetFontSize)d(igGetFontTexUvWhitePixel)d(igGetColorU32_Col)d(igGetColorU32_Vec4)d(igGetColorU32_U32)d(igGetStyleColorVec4)d(igSeparator)d(igSameLine)d(igNewLine)d(igSpacing)d(igDummy)d(igIndent)d(igUnindent)d(igBeginGroup)d(igEndGroup)d(igGetCursorPos)d(igGetCursorPosX)d(igGetCursorPosY)d(igSetCursorPos)d(igSetCursorPosX)d(igSetCursorPosY)d(igGetCursorStartPos)d(igGetCursorScreenPos)d(igSetCursorScreenPos)d(igAlignTextToFramePadding)d(igGetTextLineHeight)d(igGetTextLineHeightWithSpacing)d(igGetFrameHeight)d(igGetFrameHeightWithSpacing)d(igPushID_Str)d(igPushID_StrStr)d(igPushID_Ptr)d(igPushID_Int)d(igPopID)d(igGetID_Str)d(igGetID_StrStr)d(igGetID_Ptr)d(igTextUnformatted)d(igText)d(igTextV)d(igTextColored)d(igTextColoredV)d(igTextDisabled)d(igTextDisabledV)d(igTextWrapped)d(igTextWrappedV)d(igLabelText)d(igLabelTextV)d(igBulletText)d(igBulletTextV)d(igButton)d(igSmallButton)d(igInvisibleButton)d(igArrowButton)d(igCheckbox)d(igCheckboxFlags_IntPtr)d(igCheckboxFlags_UintPtr)d(igRadioButton_Bool)d(igRadioButton_IntPtr)d(igProgressBar)d(igBullet)d(igImage)d(igImageButton)d(igBeginCombo)d(igEndCombo)d(igCombo_Str_arr)d(igCombo_Str)d(igCombo_FnBoolPtr)d(igDragFloat)d(igDragFloat2)d(igDragFloat3)d(igDragFloat4)d(igDragFloatRange2)d(igDragInt)d(igDragInt2)d(igDragInt3)d(igDragInt4)d(igDragIntRange2)d(igDragScalar)d(igDragScalarN)d(igSliderFloat)d(igSliderFloat2)d(igSliderFloat3)d(igSliderFloat4)d(igSliderAngle)d(igSliderInt)d(igSliderInt2)d(igSliderInt3)d(igSliderInt4)d(igSliderScalar)d(igSliderScalarN)d(igVSliderFloat)d(igVSliderInt)d(igVSliderScalar)d(igInputText)d(igInputTextMultiline)d(igInputTextWithHint)d(igInputFloat)d(igInputFloat2)d(igInputFloat3)d(igInputFloat4)d(igInputInt)d(igInputInt2)d(igInputInt3)d(igInputInt4)d(igInputDouble)d(igInputScalar)d(igInputScalarN)d(igColorEdit3)d(igColorEdit4)d(igColorPicker3)d(igColorPicker4)d(igColorButton)d(igSetColorEditOptions)d(igTreeNode_Str)d(igTreeNode_StrStr)d(igTreeNode_Ptr)d(igTreeNodeV_Str)d(igTreeNodeV_Ptr)d(igTreeNodeEx_Str)d(igTreeNodeEx_StrStr)d(igTreeNodeEx_Ptr)d(igTreeNodeExV_Str)d(igTreeNodeExV_Ptr)d(igTreePush_Str)d(igTreePush_Ptr)d(igTreePop)d(igGetTreeNodeToLabelSpacing)d(igCollapsingHeader_TreeNodeFlags)d(igCollapsingHeader_BoolPtr)d(igSetNextItemOpen)d(igSelectable_Bool)d(igSelectable_BoolPtr)d(igBeginListBox)d(igEndListBox)d(igListBox_Str_arr)d(igListBox_FnBoolPtr)d(igPlotLines_FloatPtr)d(igPlotLines_FnFloatPtr)d(igPlotHistogram_FloatPtr)d(igPlotHistogram_FnFloatPtr)d(igValue_Bool)d(igValue_Int)d(igValue_Uint)d(igValue_Float)d(igBeginMenuBar)d(igEndMenuBar)d(igBeginMainMenuBar)d(igEndMainMenuBar)d(igBeginMenu)d(igEndMenu)d(igMenuItem_Bool)d(igMenuItem_BoolPtr)d(igBeginTooltip)d(igEndTooltip)d(igSetTooltip)d(igSetTooltipV)d(igBeginPopup)d(igBeginPopupModal)d(igEndPopup)d(igOpenPopup_Str)d(igOpenPopup_ID)d(igOpenPopupOnItemClick)d(igCloseCurrentPopup)d(igBeginPopupContextItem)d(igBeginPopupContextWindow)d(igBeginPopupContextVoid)d(igIsPopupOpen_Str)d(igBeginTable)d(igEndTable)d(igTableNextRow)d(igTableNextColumn)d(igTableSetColumnIndex)d(igTableSetupColumn)d(igTableSetupScrollFreeze)d(igTableHeadersRow)d(igTableHeader)d(igTableGetSortSpecs)d(igTableGetColumnCount)d(igTableGetColumnIndex)d(igTableGetRowIndex)d(igTableGetColumnName_Int)d(igTableGetColumnFlags)d(igTableSetColumnEnabled)d(igTableSetBgColor)d(igColumns)d(igNextColumn)d(igGetColumnIndex)d(igGetColumnWidth)d(igSetColumnWidth)d(igGetColumnOffset)d(igSetColumnOffset)d(igGetColumnsCount)d(igBeginTabBar)d(igEndTabBar)d(igBeginTabItem)d(igEndTabItem)d(igTabItemButton)d(igSetTabItemClosed)d(igDockSpace)d(igDockSpaceOverViewport)d(igSetNextWindowDockID)d(igSetNextWindowClass)d(igGetWindowDockID)d(igIsWindowDocked)d(igLogToTTY)d(igLogToFile)d(igLogToClipboard)d(igLogFinish)d(igLogButtons)d(igLogTextV)d(igBeginDragDropSource)d(igSetDragDropPayload)d(igEndDragDropSource)d(igBeginDragDropTarget)d(igAcceptDragDropPayload)d(igEndDragDropTarget)d(igGetDragDropPayload)d(igBeginDisabled)d(igEndDisabled)d(igPushClipRect)d(igPopClipRect)d(igSetItemDefaultFocus)d(igSetKeyboardFocusHere)d(igIsItemHovered)d(igIsItemActive)d(igIsItemFocused)d(igIsItemClicked)d(igIsItemVisible)d(igIsItemEdited)d(igIsItemActivated)d(igIsItemDeactivated)d(igIsItemDeactivatedAfterEdit)d(igIsItemToggledOpen)d(igIsAnyItemHovered)d(igIsAnyItemActive)d(igIsAnyItemFocused)d(igGetItemRectMin)d(igGetItemRectMax)d(igGetItemRectSize)d(igSetItemAllowOverlap)d(igGetMainViewport)d(igGetBackgroundDrawList_Nil)d(igGetForegroundDrawList_Nil)d(igGetBackgroundDrawList_ViewportPtr)d(igGetForegroundDrawList_ViewportPtr)d(igIsRectVisible_Nil)d(igIsRectVisible_Vec2)d(igGetTime)d(igGetFrameCount)d(igGetDrawListSharedData)d(igGetStyleColorName)d(igSetStateStorage)d(igGetStateStorage)d(igBeginChildFrame)d(igEndChildFrame)d(igCalcTextSize)d(igColorConvertU32ToFloat4)d(igColorConvertFloat4ToU32)d(igColorConvertRGBtoHSV)d(igColorConvertHSVtoRGB)d(igIsKeyDown_Nil)d(igIsKeyPressed_Bool)d(igIsKeyReleased_Nil)d(igGetKeyPressedAmount)d(igGetKeyName)d(igSetNextFrameWantCaptureKeyboard)d(igIsMouseDown_Nil)d(igIsMouseClicked_Bool)d(igIsMouseReleased_Nil)d(igIsMouseDoubleClicked)d(igGetMouseClickedCount)d(igIsMouseHoveringRect)d(igIsMousePosValid)d(igIsAnyMouseDown)d(igGetMousePos)d(igGetMousePosOnOpeningCurrentPopup)d(igIsMouseDragging)d(igGetMouseDragDelta)d(igResetMouseDragDelta)d(igGetMouseCursor)d(igSetMouseCursor)d(igSetNextFrameWantCaptureMouse)d(igGetClipboardText)d(igSetClipboardText)d(igLoadIniSettingsFromDisk)d(igLoadIniSettingsFromMemory)d(igSaveIniSettingsToDisk)d(igSaveIniSettingsToMemory)d(igDebugTextEncoding)d(igDebugCheckVersionAndDataLayout)d(igSetAllocatorFunctions)d(igGetAllocatorFunctions)d(igMemAlloc)d(igMemFree)d(igGetPlatformIO)d(igUpdatePlatformWindows)d(igRenderPlatformWindowsDefault)d(igDestroyPlatformWindows)d(igFindViewportByID)d(igFindViewportByPlatformHandle)d(ImGuiStyle_ImGuiStyle)d(ImGuiStyle_destroy)d(ImGuiStyle_ScaleAllSizes)d(ImGuiIO_AddKeyEvent)d(ImGuiIO_AddKeyAnalogEvent)d(ImGuiIO_AddMousePosEvent)d(ImGuiIO_AddMouseButtonEvent)d(ImGuiIO_AddMouseWheelEvent)d(ImGuiIO_AddMouseViewportEvent)d(ImGuiIO_AddFocusEvent)d(ImGuiIO_AddInputCharacter)d(ImGuiIO_AddInputCharacterUTF16)d(ImGuiIO_AddInputCharactersUTF8)d(ImGuiIO_SetKeyEventNativeData)d(ImGuiIO_SetAppAcceptingEvents)d(ImGuiIO_ClearInputCharacters)d(ImGuiIO_ClearInputKeys)d(ImGuiIO_ImGuiIO)d(ImGuiIO_destroy)d(ImGuiInputTextCallbackData_ImGuiInputTextCallbackData)d(ImGuiInputTextCallbackData_destroy)d(ImGuiInputTextCallbackData_DeleteChars)d(ImGuiInputTextCallbackData_InsertChars)d(ImGuiInputTextCallbackData_SelectAll)d(ImGuiInputTextCallbackData_ClearSelection)d(ImGuiInputTextCallbackData_HasSelection)d(ImGuiWindowClass_ImGuiWindowClass)d(ImGuiWindowClass_destroy)d(ImGuiPayload_ImGuiPayload)d(ImGuiPayload_destroy)d(ImGuiPayload_Clear)d(ImGuiPayload_IsDataType)d(ImGuiPayload_IsPreview)d(ImGuiPayload_IsDelivery)d(ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs)d(ImGuiTableColumnSortSpecs_destroy)d(ImGuiTableSortSpecs_ImGuiTableSortSpecs)d(ImGuiTableSortSpecs_destroy)d(ImGuiOnceUponAFrame_ImGuiOnceUponAFrame)d(ImGuiOnceUponAFrame_destroy)d(ImGuiTextFilter_ImGuiTextFilter)d(ImGuiTextFilter_destroy)d(ImGuiTextFilter_Draw)d(ImGuiTextFilter_PassFilter)d(ImGuiTextFilter_Build)d(ImGuiTextFilter_Clear)d(ImGuiTextFilter_IsActive)d(ImGuiTextRange_ImGuiTextRange_Nil)d(ImGuiTextRange_destroy)d(ImGuiTextRange_ImGuiTextRange_Str)d(ImGuiTextRange_empty)d(ImGuiTextRange_split)d(ImGuiTextBuffer_ImGuiTextBuffer)d(ImGuiTextBuffer_destroy)d(ImGuiTextBuffer_begin)d(ImGuiTextBuffer_end)d(ImGuiTextBuffer_size)d(ImGuiTextBuffer_empty)d(ImGuiTextBuffer_clear)d(ImGuiTextBuffer_reserve)d(ImGuiTextBuffer_c_str)d(ImGuiTextBuffer_append)d(ImGuiTextBuffer_appendfv)d(ImGuiStoragePair_ImGuiStoragePair_Int)d(ImGuiStoragePair_destroy)d(ImGuiStoragePair_ImGuiStoragePair_Float)d(ImGuiStoragePair_ImGuiStoragePair_Ptr)d(ImGuiStorage_Clear)d(ImGuiStorage_GetInt)d(ImGuiStorage_SetInt)d(ImGuiStorage_GetBool)d(ImGuiStorage_SetBool)d(ImGuiStorage_GetFloat)d(ImGuiStorage_SetFloat)d(ImGuiStorage_GetVoidPtr)d(ImGuiStorage_SetVoidPtr)d(ImGuiStorage_GetIntRef)d(ImGuiStorage_GetBoolRef)d(ImGuiStorage_GetFloatRef)d(ImGuiStorage_GetVoidPtrRef)d(ImGuiStorage_SetAllInt)d(ImGuiStorage_BuildSortByKey)d(ImGuiListClipper_ImGuiListClipper)d(ImGuiListClipper_destroy)d(ImGuiListClipper_Begin)d(ImGuiListClipper_End)d(ImGuiListClipper_Step)d(ImGuiListClipper_ForceDisplayRangeByIndices)d(ImColor_ImColor_Nil)d(ImColor_destroy)d(ImColor_ImColor_Float)d(ImColor_ImColor_Vec4)d(ImColor_ImColor_Int)d(ImColor_ImColor_U32)d(ImColor_SetHSV)d(ImColor_HSV)d(ImDrawCmd_ImDrawCmd)d(ImDrawCmd_destroy)d(ImDrawCmd_GetTexID)d(ImDrawListSplitter_ImDrawListSplitter)d(ImDrawListSplitter_destroy)d(ImDrawListSplitter_Clear)d(ImDrawListSplitter_ClearFreeMemory)d(ImDrawListSplitter_Split)d(ImDrawListSplitter_Merge)d(ImDrawListSplitter_SetCurrentChannel)d(ImDrawList_ImDrawList)d(ImDrawList_destroy)d(ImDrawList_PushClipRect)d(ImDrawList_PushClipRectFullScreen)d(ImDrawList_PopClipRect)d(ImDrawList_PushTextureID)d(ImDrawList_PopTextureID)d(ImDrawList_GetClipRectMin)d(ImDrawList_GetClipRectMax)d(ImDrawList_AddLine)d(ImDrawList_AddRect)d(ImDrawList_AddRectFilled)d(ImDrawList_AddRectFilledMultiColor)d(ImDrawList_AddQuad)d(ImDrawList_AddQuadFilled)d(ImDrawList_AddTriangle)d(ImDrawList_AddTriangleFilled)d(ImDrawList_AddCircle)d(ImDrawList_AddCircleFilled)d(ImDrawList_AddNgon)d(ImDrawList_AddNgonFilled)d(ImDrawList_AddText_Vec2)d(ImDrawList_AddText_FontPtr)d(ImDrawList_AddPolyline)d(ImDrawList_AddConvexPolyFilled)d(ImDrawList_AddBezierCubic)d(ImDrawList_AddBezierQuadratic)d(ImDrawList_AddImage)d(ImDrawList_AddImageQuad)d(ImDrawList_AddImageRounded)d(ImDrawList_PathClear)d(ImDrawList_PathLineTo)d(ImDrawList_PathLineToMergeDuplicate)d(ImDrawList_PathFillConvex)d(ImDrawList_PathStroke)d(ImDrawList_PathArcTo)d(ImDrawList_PathArcToFast)d(ImDrawList_PathBezierCubicCurveTo)d(ImDrawList_PathBezierQuadraticCurveTo)d(ImDrawList_PathRect)d(ImDrawList_AddCallback)d(ImDrawList_AddDrawCmd)d(ImDrawList_CloneOutput)d(ImDrawList_ChannelsSplit)d(ImDrawList_ChannelsMerge)d(ImDrawList_ChannelsSetCurrent)d(ImDrawList_PrimReserve)d(ImDrawList_PrimUnreserve)d(ImDrawList_PrimRect)d(ImDrawList_PrimRectUV)d(ImDrawList_PrimQuadUV)d(ImDrawList_PrimWriteVtx)d(ImDrawList_PrimWriteIdx)d(ImDrawList_PrimVtx)d(ImDrawList__ResetForNewFrame)d(ImDrawList__ClearFreeMemory)d(ImDrawList__PopUnusedDrawCmd)d(ImDrawList__TryMergeDrawCmds)d(ImDrawList__OnChangedClipRect)d(ImDrawList__OnChangedTextureID)d(ImDrawList__OnChangedVtxOffset)d(ImDrawList__CalcCircleAutoSegmentCount)d(ImDrawList__PathArcToFastEx)d(ImDrawList__PathArcToN)d(ImDrawData_ImDrawData)d(ImDrawData_destroy)d(ImDrawData_Clear)d(ImDrawData_DeIndexAllBuffers)d(ImDrawData_ScaleClipRects)d(ImFontConfig_ImFontConfig)d(ImFontConfig_destroy)d(ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder)d(ImFontGlyphRangesBuilder_destroy)d(ImFontGlyphRangesBuilder_Clear)d(ImFontGlyphRangesBuilder_GetBit)d(ImFontGlyphRangesBuilder_SetBit)d(ImFontGlyphRangesBuilder_AddChar)d(ImFontGlyphRangesBuilder_AddText)d(ImFontGlyphRangesBuilder_AddRanges)d(ImFontGlyphRangesBuilder_BuildRanges)d(ImFontAtlasCustomRect_ImFontAtlasCustomRect)d(ImFontAtlasCustomRect_destroy)d(ImFontAtlasCustomRect_IsPacked)d(ImFontAtlas_ImFontAtlas)d(ImFontAtlas_destroy)d(ImFontAtlas_AddFont)d(ImFontAtlas_AddFontDefault)d(ImFontAtlas_AddFontFromFileTTF)d(ImFontAtlas_AddFontFromMemoryTTF)d(ImFontAtlas_AddFontFromMemoryCompressedTTF)d(ImFontAtlas_AddFontFromMemoryCompressedBase85TTF)d(ImFontAtlas_ClearInputData)d(ImFontAtlas_ClearTexData)d(ImFontAtlas_ClearFonts)d(ImFontAtlas_Clear)d(ImFontAtlas_Build)d(ImFontAtlas_GetTexDataAsAlpha8)d(ImFontAtlas_GetTexDataAsRGBA32)d(ImFontAtlas_IsBuilt)d(ImFontAtlas_SetTexID)d(ImFontAtlas_GetGlyphRangesDefault)d(ImFontAtlas_GetGlyphRangesGreek)d(ImFontAtlas_GetGlyphRangesKorean)d(ImFontAtlas_GetGlyphRangesJapanese)d(ImFontAtlas_GetGlyphRangesChineseFull)d(ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon)d(ImFontAtlas_GetGlyphRangesCyrillic)d(ImFontAtlas_GetGlyphRangesThai)d(ImFontAtlas_GetGlyphRangesVietnamese)d(ImFontAtlas_AddCustomRectRegular)d(ImFontAtlas_AddCustomRectFontGlyph)d(ImFontAtlas_GetCustomRectByIndex)d(ImFontAtlas_CalcCustomRectUV)d(ImFontAtlas_GetMouseCursorTexData)d(ImFont_ImFont)d(ImFont_destroy)d(ImFont_FindGlyph)d(ImFont_FindGlyphNoFallback)d(ImFont_GetCharAdvance)d(ImFont_IsLoaded)d(ImFont_GetDebugName)d(ImFont_CalcTextSizeA)d(ImFont_CalcWordWrapPositionA)d(ImFont_RenderChar)d(ImFont_RenderText)d(ImFont_BuildLookupTable)d(ImFont_ClearOutputData)d(ImFont_GrowIndex)d(ImFont_AddGlyph)d(ImFont_AddRemapChar)d(ImFont_SetGlyphVisible)d(ImFont_IsGlyphRangeUnused)d(ImGuiViewport_ImGuiViewport)d(ImGuiViewport_destroy)d(ImGuiViewport_GetCenter)d(ImGuiViewport_GetWorkCenter)d(ImGuiPlatformIO_ImGuiPlatformIO)d(ImGuiPlatformIO_destroy)d(ImGuiPlatformMonitor_ImGuiPlatformMonitor)d(ImGuiPlatformMonitor_destroy)d(ImGuiPlatformImeData_ImGuiPlatformImeData)d(ImGuiPlatformImeData_destroy)d(igGetKeyIndex)d(igImHashData)d(igImHashStr)d(igImQsort)d(igImAlphaBlendColors)d(igImIsPowerOfTwo_Int)d(igImIsPowerOfTwo_U64)d(igImUpperPowerOfTwo)d(igImStricmp)d(igImStrnicmp)d(igImStrncpy)d(igImStrdup)d(igImStrdupcpy)d(igImStrchrRange)d(igImStrlenW)d(igImStreolRange)d(igImStrbolW)d(igImStristr)d(igImStrTrimBlanks)d(igImStrSkipBlank)d(igImToUpper)d(igImCharIsBlankA)d(igImCharIsBlankW)d(igImFormatString)d(igImFormatStringV)d(igImFormatStringToTempBuffer)d(igImFormatStringToTempBufferV)d(igImParseFormatFindStart)d(igImParseFormatFindEnd)d(igImParseFormatTrimDecorations)d(igImParseFormatSanitizeForPrinting)d(igImParseFormatSanitizeForScanning)d(igImParseFormatPrecision)d(igImTextCharToUtf8)d(igImTextStrToUtf8)d(igImTextCharFromUtf8)d(igImTextStrFromUtf8)d(igImTextCountCharsFromUtf8)d(igImTextCountUtf8BytesFromChar)d(igImTextCountUtf8BytesFromStr)d(igImFileOpen)d(igImFileClose)d(igImFileGetSize)d(igImFileRead)d(igImFileWrite)d(igImFileLoadToMemory)d(igImPow_Float)d(igImPow_double)d(igImLog_Float)d(igImLog_double)d(igImAbs_Int)d(igImAbs_Float)d(igImAbs_double)d(igImSign_Float)d(igImSign_double)d(igImRsqrt_Float)d(igImRsqrt_double)d(igImMin)d(igImMax)d(igImClamp)d(igImLerp_Vec2Float)d(igImLerp_Vec2Vec2)d(igImLerp_Vec4)d(igImSaturate)d(igImLengthSqr_Vec2)d(igImLengthSqr_Vec4)d(igImInvLength)d(igImFloor_Float)d(igImFloorSigned_Float)d(igImFloor_Vec2)d(igImFloorSigned_Vec2)d(igImModPositive)d(igImDot)d(igImRotate)d(igImLinearSweep)d(igImMul)d(igImIsFloatAboveGuaranteedIntegerPrecision)d(igImBezierCubicCalc)d(igImBezierCubicClosestPoint)d(igImBezierCubicClosestPointCasteljau)d(igImBezierQuadraticCalc)d(igImLineClosestPoint)d(igImTriangleContainsPoint)d(igImTriangleClosestPoint)d(igImTriangleBarycentricCoords)d(igImTriangleArea)d(igImGetDirQuadrantFromDelta)d(ImRect_ImRect_Nil)d(ImRect_destroy)d(ImRect_ImRect_Vec2)d(ImRect_ImRect_Vec4)d(ImRect_ImRect_Float)d(ImRect_GetCenter)d(ImRect_GetSize)d(ImRect_GetWidth)d(ImRect_GetHeight)d(ImRect_GetArea)d(ImRect_GetTL)d(ImRect_GetTR)d(ImRect_GetBL)d(ImRect_GetBR)d(ImRect_Contains_Vec2)d(ImRect_Contains_Rect)d(ImRect_Overlaps)d(ImRect_Add_Vec2)d(ImRect_Add_Rect)d(ImRect_Expand_Float)d(ImRect_Expand_Vec2)d(ImRect_Translate)d(ImRect_TranslateX)d(ImRect_TranslateY)d(ImRect_ClipWith)d(ImRect_ClipWithFull)d(ImRect_Floor)d(ImRect_IsInverted)d(ImRect_ToVec4)d(igImBitArrayTestBit)d(igImBitArrayClearBit)d(igImBitArraySetBit)d(igImBitArraySetBitRange)d(ImGuiTextIndex_clear)d(ImGuiTextIndex_size)d(ImGuiTextIndex_get_line_begin)d(ImGuiTextIndex_get_line_end)d(ImGuiTextIndex_append)d(ImDrawListSharedData_ImDrawListSharedData)d(ImDrawListSharedData_destroy)d(ImDrawListSharedData_SetCircleTessellationMaxError)d(ImDrawDataBuilder_Clear)d(ImDrawDataBuilder_ClearFreeMemory)d(ImDrawDataBuilder_GetDrawListCount)d(ImDrawDataBuilder_FlattenIntoSingleLayer)d(ImGuiStyleMod_ImGuiStyleMod_Int)d(ImGuiStyleMod_destroy)d(ImGuiStyleMod_ImGuiStyleMod_Float)d(ImGuiStyleMod_ImGuiStyleMod_Vec2)d(ImGuiComboPreviewData_ImGuiComboPreviewData)d(ImGuiComboPreviewData_destroy)d(ImGuiMenuColumns_ImGuiMenuColumns)d(ImGuiMenuColumns_destroy)d(ImGuiMenuColumns_Update)d(ImGuiMenuColumns_DeclColumns)d(ImGuiMenuColumns_CalcNextTotalWidth)d(ImGuiInputTextState_ImGuiInputTextState)d(ImGuiInputTextState_destroy)d(ImGuiInputTextState_ClearText)d(ImGuiInputTextState_ClearFreeMemory)d(ImGuiInputTextState_GetUndoAvailCount)d(ImGuiInputTextState_GetRedoAvailCount)d(ImGuiInputTextState_OnKeyPressed)d(ImGuiInputTextState_CursorAnimReset)d(ImGuiInputTextState_CursorClamp)d(ImGuiInputTextState_HasSelection)d(ImGuiInputTextState_ClearSelection)d(ImGuiInputTextState_GetCursorPos)d(ImGuiInputTextState_GetSelectionStart)d(ImGuiInputTextState_GetSelectionEnd)d(ImGuiInputTextState_SelectAll)d(ImGuiPopupData_ImGuiPopupData)d(ImGuiPopupData_destroy)d(ImGuiNextWindowData_ImGuiNextWindowData)d(ImGuiNextWindowData_destroy)d(ImGuiNextWindowData_ClearFlags)d(ImGuiNextItemData_ImGuiNextItemData)d(ImGuiNextItemData_destroy)d(ImGuiNextItemData_ClearFlags)d(ImGuiLastItemData_ImGuiLastItemData)d(ImGuiLastItemData_destroy)d(ImGuiStackSizes_ImGuiStackSizes)d(ImGuiStackSizes_destroy)d(ImGuiStackSizes_SetToCurrentState)d(ImGuiStackSizes_CompareWithCurrentState)d(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr)d(ImGuiPtrOrIndex_destroy)d(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int)d(ImGuiInputEvent_ImGuiInputEvent)d(ImGuiInputEvent_destroy)d(ImGuiKeyRoutingData_ImGuiKeyRoutingData)d(ImGuiKeyRoutingData_destroy)d(ImGuiKeyRoutingTable_ImGuiKeyRoutingTable)d(ImGuiKeyRoutingTable_destroy)d(ImGuiKeyRoutingTable_Clear)d(ImGuiKeyOwnerData_ImGuiKeyOwnerData)d(ImGuiKeyOwnerData_destroy)d(ImGuiListClipperRange_FromIndices)d(ImGuiListClipperRange_FromPositions)d(ImGuiListClipperData_ImGuiListClipperData)d(ImGuiListClipperData_destroy)d(ImGuiListClipperData_Reset)d(ImGuiNavItemData_ImGuiNavItemData)d(ImGuiNavItemData_destroy)d(ImGuiNavItemData_Clear)d(ImGuiOldColumnData_ImGuiOldColumnData)d(ImGuiOldColumnData_destroy)d(ImGuiOldColumns_ImGuiOldColumns)d(ImGuiOldColumns_destroy)d(ImGuiDockNode_ImGuiDockNode)d(ImGuiDockNode_destroy)d(ImGuiDockNode_IsRootNode)d(ImGuiDockNode_IsDockSpace)d(ImGuiDockNode_IsFloatingNode)d(ImGuiDockNode_IsCentralNode)d(ImGuiDockNode_IsHiddenTabBar)d(ImGuiDockNode_IsNoTabBar)d(ImGuiDockNode_IsSplitNode)d(ImGuiDockNode_IsLeafNode)d(ImGuiDockNode_IsEmpty)d(ImGuiDockNode_Rect)d(ImGuiDockNode_SetLocalFlags)d(ImGuiDockNode_UpdateMergedFlags)d(ImGuiDockContext_ImGuiDockContext)d(ImGuiDockContext_destroy)d(ImGuiViewportP_ImGuiViewportP)d(ImGuiViewportP_destroy)d(ImGuiViewportP_ClearRequestFlags)d(ImGuiViewportP_CalcWorkRectPos)d(ImGuiViewportP_CalcWorkRectSize)d(ImGuiViewportP_UpdateWorkRect)d(ImGuiViewportP_GetMainRect)d(ImGuiViewportP_GetWorkRect)d(ImGuiViewportP_GetBuildWorkRect)d(ImGuiWindowSettings_ImGuiWindowSettings)d(ImGuiWindowSettings_destroy)d(ImGuiWindowSettings_GetName)d(ImGuiSettingsHandler_ImGuiSettingsHandler)d(ImGuiSettingsHandler_destroy)d(ImGuiMetricsConfig_ImGuiMetricsConfig)d(ImGuiMetricsConfig_destroy)d(ImGuiStackLevelInfo_ImGuiStackLevelInfo)d(ImGuiStackLevelInfo_destroy)d(ImGuiStackTool_ImGuiStackTool)d(ImGuiStackTool_destroy)d(ImGuiContextHook_ImGuiContextHook)d(ImGuiContextHook_destroy)d(ImGuiContext_ImGuiContext)d(ImGuiContext_destroy)d(ImGuiWindow_ImGuiWindow)d(ImGuiWindow_destroy)d(ImGuiWindow_GetID_Str)d(ImGuiWindow_GetID_Ptr)d(ImGuiWindow_GetID_Int)d(ImGuiWindow_GetIDFromRectangle)d(ImGuiWindow_Rect)d(ImGuiWindow_CalcFontSize)d(ImGuiWindow_TitleBarHeight)d(ImGuiWindow_TitleBarRect)d(ImGuiWindow_MenuBarHeight)d(ImGuiWindow_MenuBarRect)d(ImGuiTabItem_ImGuiTabItem)d(ImGuiTabItem_destroy)d(ImGuiTabBar_ImGuiTabBar)d(ImGuiTabBar_destroy)d(ImGuiTabBar_GetTabOrder)d(ImGuiTabBar_GetTabName)d(ImGuiTableColumn_ImGuiTableColumn)d(ImGuiTableColumn_destroy)d(ImGuiTableInstanceData_ImGuiTableInstanceData)d(ImGuiTableInstanceData_destroy)d(ImGuiTable_ImGuiTable)d(ImGuiTable_destroy)d(ImGuiTableTempData_ImGuiTableTempData)d(ImGuiTableTempData_destroy)d(ImGuiTableColumnSettings_ImGuiTableColumnSettings)d(ImGuiTableColumnSettings_destroy)d(ImGuiTableSettings_ImGuiTableSettings)d(ImGuiTableSettings_destroy)d(ImGuiTableSettings_GetColumnSettings)d(igGetCurrentWindowRead)d(igGetCurrentWindow)d(igFindWindowByID)d(igFindWindowByName)d(igUpdateWindowParentAndRootLinks)d(igCalcWindowNextAutoFitSize)d(igIsWindowChildOf)d(igIsWindowWithinBeginStackOf)d(igIsWindowAbove)d(igIsWindowNavFocusable)d(igSetWindowPos_WindowPtr)d(igSetWindowSize_WindowPtr)d(igSetWindowCollapsed_WindowPtr)d(igSetWindowHitTestHole)d(igWindowRectAbsToRel)d(igWindowRectRelToAbs)d(igFocusWindow)d(igFocusTopMostWindowUnderOne)d(igBringWindowToFocusFront)d(igBringWindowToDisplayFront)d(igBringWindowToDisplayBack)d(igBringWindowToDisplayBehind)d(igFindWindowDisplayIndex)d(igFindBottomMostVisibleWindowWithinBeginStack)d(igSetCurrentFont)d(igGetDefaultFont)d(igGetForegroundDrawList_WindowPtr)d(igInitialize)d(igShutdown)d(igUpdateInputEvents)d(igUpdateHoveredWindowAndCaptureFlags)d(igStartMouseMovingWindow)d(igStartMouseMovingWindowOrNode)d(igUpdateMouseMovingWindowNewFrame)d(igUpdateMouseMovingWindowEndFrame)d(igAddContextHook)d(igRemoveContextHook)d(igCallContextHooks)d(igTranslateWindowsInViewport)d(igScaleWindowsInViewport)d(igDestroyPlatformWindow)d(igSetWindowViewport)d(igSetCurrentViewport)d(igGetViewportPlatformMonitor)d(igFindHoveredViewportFromPlatformWindowStack)d(igMarkIniSettingsDirty_Nil)d(igMarkIniSettingsDirty_WindowPtr)d(igClearIniSettings)d(igCreateNewWindowSettings)d(igFindWindowSettings)d(igFindOrCreateWindowSettings)d(igAddSettingsHandler)d(igRemoveSettingsHandler)d(igFindSettingsHandler)d(igSetScrollX_WindowPtr)d(igSetScrollY_WindowPtr)d(igSetScrollFromPosX_WindowPtr)d(igSetScrollFromPosY_WindowPtr)d(igScrollToItem)d(igScrollToRect)d(igScrollToRectEx)d(igScrollToBringRectIntoView)d(igGetItemID)d(igGetItemStatusFlags)d(igGetItemFlags)d(igGetActiveID)d(igGetFocusID)d(igSetActiveID)d(igSetFocusID)d(igClearActiveID)d(igGetHoveredID)d(igSetHoveredID)d(igKeepAliveID)d(igMarkItemEdited)d(igPushOverrideID)d(igGetIDWithSeed)d(igItemSize_Vec2)d(igItemSize_Rect)d(igItemAdd)d(igItemHoverable)d(igIsClippedEx)d(igSetLastItemData)d(igCalcItemSize)d(igCalcWrapWidthForPos)d(igPushMultiItemsWidths)d(igIsItemToggledSelection)d(igGetContentRegionMaxAbs)d(igShrinkWidths)d(igPushItemFlag)d(igPopItemFlag)d(igLogBegin)d(igLogToBuffer)d(igLogRenderedText)d(igLogSetNextTextDecoration)d(igBeginChildEx)d(igOpenPopupEx)d(igClosePopupToLevel)d(igClosePopupsOverWindow)d(igClosePopupsExceptModals)d(igIsPopupOpen_ID)d(igBeginPopupEx)d(igBeginTooltipEx)d(igGetPopupAllowedExtentRect)d(igGetTopMostPopupModal)d(igGetTopMostAndVisiblePopupModal)d(igFindBestWindowPosForPopup)d(igFindBestWindowPosForPopupEx)d(igBeginViewportSideBar)d(igBeginMenuEx)d(igMenuItemEx)d(igBeginComboPopup)d(igBeginComboPreview)d(igEndComboPreview)d(igNavInitWindow)d(igNavInitRequestApplyResult)d(igNavMoveRequestButNoResultYet)d(igNavMoveRequestSubmit)d(igNavMoveRequestForward)d(igNavMoveRequestResolveWithLastItem)d(igNavMoveRequestCancel)d(igNavMoveRequestApplyResult)d(igNavMoveRequestTryWrapping)d(igActivateItem)d(igSetNavWindow)d(igSetNavID)d(igIsNamedKey)d(igIsNamedKeyOrModKey)d(igIsLegacyKey)d(igIsGamepadKey)d(igIsAliasKey)d(igConvertSingleModFlagToKey)d(igGetKeyData)d(igGetKeyChordName)d(igMouseButtonToKey)d(igIsMouseDragPastThreshold)d(igGetKeyVector2d)d(igGetNavTweakPressedAmount)d(igCalcTypematicRepeatAmount)d(igGetTypematicRepeatRate)d(igSetActiveIdUsingAllKeyboardKeys)d(igIsActiveIdUsingNavDir)d(igGetKeyOwner)d(igSetKeyOwner)d(igSetItemKeyOwner)d(igTestKeyOwner)d(igGetKeyOwnerData)d(igIsKeyDown_ID)d(igIsKeyPressed_ID)d(igIsKeyReleased_ID)d(igIsMouseDown_ID)d(igIsMouseClicked_ID)d(igIsMouseReleased_ID)d(igShortcut)d(igSetShortcutRouting)d(igTestShortcutRouting)d(igGetShortcutRoutingData)d(igDockContextInitialize)d(igDockContextShutdown)d(igDockContextClearNodes)d(igDockContextRebuildNodes)d(igDockContextNewFrameUpdateUndocking)d(igDockContextNewFrameUpdateDocking)d(igDockContextEndFrame)d(igDockContextGenNodeID)d(igDockContextQueueDock)d(igDockContextQueueUndockWindow)d(igDockContextQueueUndockNode)d(igDockContextCalcDropPosForDocking)d(igDockContextFindNodeByID)d(igDockNodeBeginAmendTabBar)d(igDockNodeEndAmendTabBar)d(igDockNodeGetRootNode)d(igDockNodeIsInHierarchyOf)d(igDockNodeGetDepth)d(igDockNodeGetWindowMenuButtonId)d(igGetWindowDockNode)d(igGetWindowAlwaysWantOwnTabBar)d(igBeginDocked)d(igBeginDockableDragDropSource)d(igBeginDockableDragDropTarget)d(igSetWindowDock)d(igDockBuilderDockWindow)d(igDockBuilderGetNode)d(igDockBuilderGetCentralNode)d(igDockBuilderAddNode)d(igDockBuilderRemoveNode)d(igDockBuilderRemoveNodeDockedWindows)d(igDockBuilderRemoveNodeChildNodes)d(igDockBuilderSetNodePos)d(igDockBuilderSetNodeSize)d(igDockBuilderSplitNode)d(igDockBuilderCopyDockSpace)d(igDockBuilderCopyNode)d(igDockBuilderCopyWindowSettings)d(igDockBuilderFinish)d(igPushFocusScope)d(igPopFocusScope)d(igGetCurrentFocusScope)d(igIsDragDropActive)d(igBeginDragDropTargetCustom)d(igClearDragDrop)d(igIsDragDropPayloadBeingAccepted)d(igRenderDragDropTargetRect)d(igSetWindowClipRectBeforeSetChannel)d(igBeginColumns)d(igEndColumns)d(igPushColumnClipRect)d(igPushColumnsBackground)d(igPopColumnsBackground)d(igGetColumnsID)d(igFindOrCreateColumns)d(igGetColumnOffsetFromNorm)d(igGetColumnNormFromOffset)d(igTableOpenContextMenu)d(igTableSetColumnWidth)d(igTableSetColumnSortDirection)d(igTableGetHoveredColumn)d(igTableGetHeaderRowHeight)d(igTablePushBackgroundChannel)d(igTablePopBackgroundChannel)d(igGetCurrentTable)d(igTableFindByID)d(igBeginTableEx)d(igTableBeginInitMemory)d(igTableBeginApplyRequests)d(igTableSetupDrawChannels)d(igTableUpdateLayout)d(igTableUpdateBorders)d(igTableUpdateColumnsWeightFromWidth)d(igTableDrawBorders)d(igTableDrawContextMenu)d(igTableBeginContextMenuPopup)d(igTableMergeDrawChannels)d(igTableGetInstanceData)d(igTableSortSpecsSanitize)d(igTableSortSpecsBuild)d(igTableGetColumnNextSortDirection)d(igTableFixColumnSortDirection)d(igTableGetColumnWidthAuto)d(igTableBeginRow)d(igTableEndRow)d(igTableBeginCell)d(igTableEndCell)d(igTableGetCellBgRect)d(igTableGetColumnName_TablePtr)d(igTableGetColumnResizeID)d(igTableGetMaxColumnWidth)d(igTableSetColumnWidthAutoSingle)d(igTableSetColumnWidthAutoAll)d(igTableRemove)d(igTableGcCompactTransientBuffers_TablePtr)d(igTableGcCompactTransientBuffers_TableTempDataPtr)d(igTableGcCompactSettings)d(igTableLoadSettings)d(igTableSaveSettings)d(igTableResetSettings)d(igTableGetBoundSettings)d(igTableSettingsAddSettingsHandler)d(igTableSettingsCreate)d(igTableSettingsFindByID)d(igBeginTabBarEx)d(igTabBarFindTabByID)d(igTabBarFindMostRecentlySelectedTabForActiveWindow)d(igTabBarAddTab)d(igTabBarRemoveTab)d(igTabBarCloseTab)d(igTabBarQueueReorder)d(igTabBarQueueReorderFromMousePos)d(igTabBarProcessReorder)d(igTabItemEx)d(igTabItemCalcSize_Str)d(igTabItemCalcSize_WindowPtr)d(igTabItemBackground)d(igTabItemLabelAndCloseButton)d(igRenderText)d(igRenderTextWrapped)d(igRenderTextClipped)d(igRenderTextClippedEx)d(igRenderTextEllipsis)d(igRenderFrame)d(igRenderFrameBorder)d(igRenderColorRectWithAlphaCheckerboard)d(igRenderNavHighlight)d(igFindRenderedTextEnd)d(igRenderMouseCursor)d(igRenderArrow)d(igRenderBullet)d(igRenderCheckMark)d(igRenderArrowPointingAt)d(igRenderArrowDockMenu)d(igRenderRectFilledRangeH)d(igRenderRectFilledWithHole)d(igCalcRoundingFlagsForRectInRect)d(igTextEx)d(igButtonEx)d(igCloseButton)d(igCollapseButton)d(igArrowButtonEx)d(igScrollbar)d(igScrollbarEx)d(igImageButtonEx)d(igGetWindowScrollbarRect)d(igGetWindowScrollbarID)d(igGetWindowResizeCornerID)d(igGetWindowResizeBorderID)d(igSeparatorEx)d(igCheckboxFlags_S64Ptr)d(igCheckboxFlags_U64Ptr)d(igButtonBehavior)d(igDragBehavior)d(igSliderBehavior)d(igSplitterBehavior)d(igTreeNodeBehavior)d(igTreePushOverrideID)d(igTreeNodeSetOpen)d(igTreeNodeUpdateNextOpen)d(igDataTypeGetInfo)d(igDataTypeFormatString)d(igDataTypeApplyOp)d(igDataTypeApplyFromText)d(igDataTypeCompare)d(igDataTypeClamp)d(igInputTextEx)d(igTempInputText)d(igTempInputScalar)d(igTempInputIsActive)d(igGetInputTextState)d(igColorTooltip)d(igColorEditOptionsPopup)d(igColorPickerOptionsPopup)d(igPlotEx)d(igShadeVertsLinearColorGradientKeepAlpha)d(igShadeVertsLinearUV)d(igGcCompactTransientMiscBuffers)d(igGcCompactTransientWindowBuffers)d(igGcAwakeTransientWindowBuffers)d(igDebugLog)d(igDebugLogV)d(igErrorCheckEndFrameRecover)d(igErrorCheckEndWindowRecover)d(igErrorCheckUsingSetCursorPosToExtendParentBoundaries)d(igDebugLocateItem)d(igDebugLocateItemOnHover)d(igDebugLocateItemResolveWithLastItem)d(igDebugDrawItemRect)d(igDebugStartItemPicker)d(igShowFontAtlas)d(igDebugHookIdInfo)d(igDebugNodeColumns)d(igDebugNodeDockNode)d(igDebugNodeDrawList)d(igDebugNodeDrawCmdShowMeshAndBoundingBox)d(igDebugNodeFont)d(igDebugNodeFontGlyph)d(igDebugNodeStorage)d(igDebugNodeTabBar)d(igDebugNodeTable)d(igDebugNodeTableSettings)d(igDebugNodeInputTextState)d(igDebugNodeWindow)d(igDebugNodeWindowSettings)d(igDebugNodeWindowsList)d(igDebugNodeWindowsListByBeginStackParent)d(igDebugNodeViewport)d(igDebugRenderViewportThumbnail)d(igIsKeyPressedMap)d(igImFontAtlasGetBuilderForStbTruetype)d(igImFontAtlasBuildInit)d(igImFontAtlasBuildSetupFont)d(igImFontAtlasBuildPackCustomRects)d(igImFontAtlasBuildFinish)d(igImFontAtlasBuildRender8bppRectFromString)d(igImFontAtlasBuildRender32bppRectFromString)d(igImFontAtlasBuildMultiplyCalcLookupTable)d(igImFontAtlasBuildMultiplyRectAlpha8)d(igLogText)d(ImGuiTextBuffer_appendf)d(igGET_FLT_MAX)d(igGET_FLT_MIN)
#endif
#ifdef CIMGUI_IMPL
i(igCreateContext)i(igDestroyContext)i(igGetCurrentContext)i(igSetCurrentContext)i(igGetIO)i(igGetStyle)i(igNewFrame)i(igEndFrame)i(igRender)i(igGetDrawData)i(igShowDemoWindow)i(igShowMetricsWindow)i(igShowDebugLogWindow)i(igShowStackToolWindow)i(igShowAboutWindow)i(igShowStyleEditor)i(igShowStyleSelector)i(igShowFontSelector)i(igShowUserGuide)i(igGetVersion)i(igStyleColorsDark)i(igStyleColorsLight)i(igStyleColorsClassic)i(igBegin)i(igEnd)i(igBeginChild_Str)i(igBeginChild_ID)i(igEndChild)i(igIsWindowAppearing)i(igIsWindowCollapsed)i(igIsWindowFocused)i(igIsWindowHovered)i(igGetWindowDrawList)i(igGetWindowDpiScale)i(igGetWindowPos)i(igGetWindowSize)i(igGetWindowWidth)i(igGetWindowHeight)i(igGetWindowViewport)i(igSetNextWindowPos)i(igSetNextWindowSize)i(igSetNextWindowSizeConstraints)i(igSetNextWindowContentSize)i(igSetNextWindowCollapsed)i(igSetNextWindowFocus)i(igSetNextWindowScroll)i(igSetNextWindowBgAlpha)i(igSetNextWindowViewport)i(igSetWindowPos_Vec2)i(igSetWindowSize_Vec2)i(igSetWindowCollapsed_Bool)i(igSetWindowFocus_Nil)i(igSetWindowFontScale)i(igSetWindowPos_Str)i(igSetWindowSize_Str)i(igSetWindowCollapsed_Str)i(igSetWindowFocus_Str)i(igGetContentRegionAvail)i(igGetContentRegionMax)i(igGetWindowContentRegionMin)i(igGetWindowContentRegionMax)i(igGetScrollX)i(igGetScrollY)i(igSetScrollX_Float)i(igSetScrollY_Float)i(igGetScrollMaxX)i(igGetScrollMaxY)i(igSetScrollHereX)i(igSetScrollHereY)i(igSetScrollFromPosX_Float)i(igSetScrollFromPosY_Float)i(igPushFont)i(igPopFont)i(igPushStyleColor_U32)i(igPushStyleColor_Vec4)i(igPopStyleColor)i(igPushStyleVar_Float)i(igPushStyleVar_Vec2)i(igPopStyleVar)i(igPushAllowKeyboardFocus)i(igPopAllowKeyboardFocus)i(igPushButtonRepeat)i(igPopButtonRepeat)i(igPushItemWidth)i(igPopItemWidth)i(igSetNextItemWidth)i(igCalcItemWidth)i(igPushTextWrapPos)i(igPopTextWrapPos)i(igGetFont)i(igGetFontSize)i(igGetFontTexUvWhitePixel)i(igGetColorU32_Col)i(igGetColorU32_Vec4)i(igGetColorU32_U32)i(igGetStyleColorVec4)i(igSeparator)i(igSameLine)i(igNewLine)i(igSpacing)i(igDummy)i(igIndent)i(igUnindent)i(igBeginGroup)i(igEndGroup)i(igGetCursorPos)i(igGetCursorPosX)i(igGetCursorPosY)i(igSetCursorPos)i(igSetCursorPosX)i(igSetCursorPosY)i(igGetCursorStartPos)i(igGetCursorScreenPos)i(igSetCursorScreenPos)i(igAlignTextToFramePadding)i(igGetTextLineHeight)i(igGetTextLineHeightWithSpacing)i(igGetFrameHeight)i(igGetFrameHeightWithSpacing)i(igPushID_Str)i(igPushID_StrStr)i(igPushID_Ptr)i(igPushID_Int)i(igPopID)i(igGetID_Str)i(igGetID_StrStr)i(igGetID_Ptr)i(igTextUnformatted)i(igText)i(igTextV)i(igTextColored)i(igTextColoredV)i(igTextDisabled)i(igTextDisabledV)i(igTextWrapped)i(igTextWrappedV)i(igLabelText)i(igLabelTextV)i(igBulletText)i(igBulletTextV)i(igButton)i(igSmallButton)i(igInvisibleButton)i(igArrowButton)i(igCheckbox)i(igCheckboxFlags_IntPtr)i(igCheckboxFlags_UintPtr)i(igRadioButton_Bool)i(igRadioButton_IntPtr)i(igProgressBar)i(igBullet)i(igImage)i(igImageButton)i(igBeginCombo)i(igEndCombo)i(igCombo_Str_arr)i(igCombo_Str)i(igCombo_FnBoolPtr)i(igDragFloat)i(igDragFloat2)i(igDragFloat3)i(igDragFloat4)i(igDragFloatRange2)i(igDragInt)i(igDragInt2)i(igDragInt3)i(igDragInt4)i(igDragIntRange2)i(igDragScalar)i(igDragScalarN)i(igSliderFloat)i(igSliderFloat2)i(igSliderFloat3)i(igSliderFloat4)i(igSliderAngle)i(igSliderInt)i(igSliderInt2)i(igSliderInt3)i(igSliderInt4)i(igSliderScalar)i(igSliderScalarN)i(igVSliderFloat)i(igVSliderInt)i(igVSliderScalar)i(igInputText)i(igInputTextMultiline)i(igInputTextWithHint)i(igInputFloat)i(igInputFloat2)i(igInputFloat3)i(igInputFloat4)i(igInputInt)i(igInputInt2)i(igInputInt3)i(igInputInt4)i(igInputDouble)i(igInputScalar)i(igInputScalarN)i(igColorEdit3)i(igColorEdit4)i(igColorPicker3)i(igColorPicker4)i(igColorButton)i(igSetColorEditOptions)i(igTreeNode_Str)i(igTreeNode_StrStr)i(igTreeNode_Ptr)i(igTreeNodeV_Str)i(igTreeNodeV_Ptr)i(igTreeNodeEx_Str)i(igTreeNodeEx_StrStr)i(igTreeNodeEx_Ptr)i(igTreeNodeExV_Str)i(igTreeNodeExV_Ptr)i(igTreePush_Str)i(igTreePush_Ptr)i(igTreePop)i(igGetTreeNodeToLabelSpacing)i(igCollapsingHeader_TreeNodeFlags)i(igCollapsingHeader_BoolPtr)i(igSetNextItemOpen)i(igSelectable_Bool)i(igSelectable_BoolPtr)i(igBeginListBox)i(igEndListBox)i(igListBox_Str_arr)i(igListBox_FnBoolPtr)i(igPlotLines_FloatPtr)i(igPlotLines_FnFloatPtr)i(igPlotHistogram_FloatPtr)i(igPlotHistogram_FnFloatPtr)i(igValue_Bool)i(igValue_Int)i(igValue_Uint)i(igValue_Float)i(igBeginMenuBar)i(igEndMenuBar)i(igBeginMainMenuBar)i(igEndMainMenuBar)i(igBeginMenu)i(igEndMenu)i(igMenuItem_Bool)i(igMenuItem_BoolPtr)i(igBeginTooltip)i(igEndTooltip)i(igSetTooltip)i(igSetTooltipV)i(igBeginPopup)i(igBeginPopupModal)i(igEndPopup)i(igOpenPopup_Str)i(igOpenPopup_ID)i(igOpenPopupOnItemClick)i(igCloseCurrentPopup)i(igBeginPopupContextItem)i(igBeginPopupContextWindow)i(igBeginPopupContextVoid)i(igIsPopupOpen_Str)i(igBeginTable)i(igEndTable)i(igTableNextRow)i(igTableNextColumn)i(igTableSetColumnIndex)i(igTableSetupColumn)i(igTableSetupScrollFreeze)i(igTableHeadersRow)i(igTableHeader)i(igTableGetSortSpecs)i(igTableGetColumnCount)i(igTableGetColumnIndex)i(igTableGetRowIndex)i(igTableGetColumnName_Int)i(igTableGetColumnFlags)i(igTableSetColumnEnabled)i(igTableSetBgColor)i(igColumns)i(igNextColumn)i(igGetColumnIndex)i(igGetColumnWidth)i(igSetColumnWidth)i(igGetColumnOffset)i(igSetColumnOffset)i(igGetColumnsCount)i(igBeginTabBar)i(igEndTabBar)i(igBeginTabItem)i(igEndTabItem)i(igTabItemButton)i(igSetTabItemClosed)i(igDockSpace)i(igDockSpaceOverViewport)i(igSetNextWindowDockID)i(igSetNextWindowClass)i(igGetWindowDockID)i(igIsWindowDocked)i(igLogToTTY)i(igLogToFile)i(igLogToClipboard)i(igLogFinish)i(igLogButtons)i(igLogTextV)i(igBeginDragDropSource)i(igSetDragDropPayload)i(igEndDragDropSource)i(igBeginDragDropTarget)i(igAcceptDragDropPayload)i(igEndDragDropTarget)i(igGetDragDropPayload)i(igBeginDisabled)i(igEndDisabled)i(igPushClipRect)i(igPopClipRect)i(igSetItemDefaultFocus)i(igSetKeyboardFocusHere)i(igIsItemHovered)i(igIsItemActive)i(igIsItemFocused)i(igIsItemClicked)i(igIsItemVisible)i(igIsItemEdited)i(igIsItemActivated)i(igIsItemDeactivated)i(igIsItemDeactivatedAfterEdit)i(igIsItemToggledOpen)i(igIsAnyItemHovered)i(igIsAnyItemActive)i(igIsAnyItemFocused)i(igGetItemRectMin)i(igGetItemRectMax)i(igGetItemRectSize)i(igSetItemAllowOverlap)i(igGetMainViewport)i(igGetBackgroundDrawList_Nil)i(igGetForegroundDrawList_Nil)i(igGetBackgroundDrawList_ViewportPtr)i(igGetForegroundDrawList_ViewportPtr)i(igIsRectVisible_Nil)i(igIsRectVisible_Vec2)i(igGetTime)i(igGetFrameCount)i(igGetDrawListSharedData)i(igGetStyleColorName)i(igSetStateStorage)i(igGetStateStorage)i(igBeginChildFrame)i(igEndChildFrame)i(igCalcTextSize)i(igColorConvertU32ToFloat4)i(igColorConvertFloat4ToU32)i(igColorConvertRGBtoHSV)i(igColorConvertHSVtoRGB)i(igIsKeyDown_Nil)i(igIsKeyPressed_Bool)i(igIsKeyReleased_Nil)i(igGetKeyPressedAmount)i(igGetKeyName)i(igSetNextFrameWantCaptureKeyboard)i(igIsMouseDown_Nil)i(igIsMouseClicked_Bool)i(igIsMouseReleased_Nil)i(igIsMouseDoubleClicked)i(igGetMouseClickedCount)i(igIsMouseHoveringRect)i(igIsMousePosValid)i(igIsAnyMouseDown)i(igGetMousePos)i(igGetMousePosOnOpeningCurrentPopup)i(igIsMouseDragging)i(igGetMouseDragDelta)i(igResetMouseDragDelta)i(igGetMouseCursor)i(igSetMouseCursor)i(igSetNextFrameWantCaptureMouse)i(igGetClipboardText)i(igSetClipboardText)i(igLoadIniSettingsFromDisk)i(igLoadIniSettingsFromMemory)i(igSaveIniSettingsToDisk)i(igSaveIniSettingsToMemory)i(igDebugTextEncoding)i(igDebugCheckVersionAndDataLayout)i(igSetAllocatorFunctions)i(igGetAllocatorFunctions)i(igMemAlloc)i(igMemFree)i(igGetPlatformIO)i(igUpdatePlatformWindows)i(igRenderPlatformWindowsDefault)i(igDestroyPlatformWindows)i(igFindViewportByID)i(igFindViewportByPlatformHandle)i(ImGuiStyle_ImGuiStyle)i(ImGuiStyle_destroy)i(ImGuiStyle_ScaleAllSizes)i(ImGuiIO_AddKeyEvent)i(ImGuiIO_AddKeyAnalogEvent)i(ImGuiIO_AddMousePosEvent)i(ImGuiIO_AddMouseButtonEvent)i(ImGuiIO_AddMouseWheelEvent)i(ImGuiIO_AddMouseViewportEvent)i(ImGuiIO_AddFocusEvent)i(ImGuiIO_AddInputCharacter)i(ImGuiIO_AddInputCharacterUTF16)i(ImGuiIO_AddInputCharactersUTF8)i(ImGuiIO_SetKeyEventNativeData)i(ImGuiIO_SetAppAcceptingEvents)i(ImGuiIO_ClearInputCharacters)i(ImGuiIO_ClearInputKeys)i(ImGuiIO_ImGuiIO)i(ImGuiIO_destroy)i(ImGuiInputTextCallbackData_ImGuiInputTextCallbackData)i(ImGuiInputTextCallbackData_destroy)i(ImGuiInputTextCallbackData_DeleteChars)i(ImGuiInputTextCallbackData_InsertChars)i(ImGuiInputTextCallbackData_SelectAll)i(ImGuiInputTextCallbackData_ClearSelection)i(ImGuiInputTextCallbackData_HasSelection)i(ImGuiWindowClass_ImGuiWindowClass)i(ImGuiWindowClass_destroy)i(ImGuiPayload_ImGuiPayload)i(ImGuiPayload_destroy)i(ImGuiPayload_Clear)i(ImGuiPayload_IsDataType)i(ImGuiPayload_IsPreview)i(ImGuiPayload_IsDelivery)i(ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs)i(ImGuiTableColumnSortSpecs_destroy)i(ImGuiTableSortSpecs_ImGuiTableSortSpecs)i(ImGuiTableSortSpecs_destroy)i(ImGuiOnceUponAFrame_ImGuiOnceUponAFrame)i(ImGuiOnceUponAFrame_destroy)i(ImGuiTextFilter_ImGuiTextFilter)i(ImGuiTextFilter_destroy)i(ImGuiTextFilter_Draw)i(ImGuiTextFilter_PassFilter)i(ImGuiTextFilter_Build)i(ImGuiTextFilter_Clear)i(ImGuiTextFilter_IsActive)i(ImGuiTextRange_ImGuiTextRange_Nil)i(ImGuiTextRange_destroy)i(ImGuiTextRange_ImGuiTextRange_Str)i(ImGuiTextRange_empty)i(ImGuiTextRange_split)i(ImGuiTextBuffer_ImGuiTextBuffer)i(ImGuiTextBuffer_destroy)i(ImGuiTextBuffer_begin)i(ImGuiTextBuffer_end)i(ImGuiTextBuffer_size)i(ImGuiTextBuffer_empty)i(ImGuiTextBuffer_clear)i(ImGuiTextBuffer_reserve)i(ImGuiTextBuffer_c_str)i(ImGuiTextBuffer_append)i(ImGuiTextBuffer_appendfv)i(ImGuiStoragePair_ImGuiStoragePair_Int)i(ImGuiStoragePair_destroy)i(ImGuiStoragePair_ImGuiStoragePair_Float)i(ImGuiStoragePair_ImGuiStoragePair_Ptr)i(ImGuiStorage_Clear)i(ImGuiStorage_GetInt)i(ImGuiStorage_SetInt)i(ImGuiStorage_GetBool)i(ImGuiStorage_SetBool)i(ImGuiStorage_GetFloat)i(ImGuiStorage_SetFloat)i(ImGuiStorage_GetVoidPtr)i(ImGuiStorage_SetVoidPtr)i(ImGuiStorage_GetIntRef)i(ImGuiStorage_GetBoolRef)i(ImGuiStorage_GetFloatRef)i(ImGuiStorage_GetVoidPtrRef)i(ImGuiStorage_SetAllInt)i(ImGuiStorage_BuildSortByKey)i(ImGuiListClipper_ImGuiListClipper)i(ImGuiListClipper_destroy)i(ImGuiListClipper_Begin)i(ImGuiListClipper_End)i(ImGuiListClipper_Step)i(ImGuiListClipper_ForceDisplayRangeByIndices)i(ImColor_ImColor_Nil)i(ImColor_destroy)i(ImColor_ImColor_Float)i(ImColor_ImColor_Vec4)i(ImColor_ImColor_Int)i(ImColor_ImColor_U32)i(ImColor_SetHSV)i(ImColor_HSV)i(ImDrawCmd_ImDrawCmd)i(ImDrawCmd_destroy)i(ImDrawCmd_GetTexID)i(ImDrawListSplitter_ImDrawListSplitter)i(ImDrawListSplitter_destroy)i(ImDrawListSplitter_Clear)i(ImDrawListSplitter_ClearFreeMemory)i(ImDrawListSplitter_Split)i(ImDrawListSplitter_Merge)i(ImDrawListSplitter_SetCurrentChannel)i(ImDrawList_ImDrawList)i(ImDrawList_destroy)i(ImDrawList_PushClipRect)i(ImDrawList_PushClipRectFullScreen)i(ImDrawList_PopClipRect)i(ImDrawList_PushTextureID)i(ImDrawList_PopTextureID)i(ImDrawList_GetClipRectMin)i(ImDrawList_GetClipRectMax)i(ImDrawList_AddLine)i(ImDrawList_AddRect)i(ImDrawList_AddRectFilled)i(ImDrawList_AddRectFilledMultiColor)i(ImDrawList_AddQuad)i(ImDrawList_AddQuadFilled)i(ImDrawList_AddTriangle)i(ImDrawList_AddTriangleFilled)i(ImDrawList_AddCircle)i(ImDrawList_AddCircleFilled)i(ImDrawList_AddNgon)i(ImDrawList_AddNgonFilled)i(ImDrawList_AddText_Vec2)i(ImDrawList_AddText_FontPtr)i(ImDrawList_AddPolyline)i(ImDrawList_AddConvexPolyFilled)i(ImDrawList_AddBezierCubic)i(ImDrawList_AddBezierQuadratic)i(ImDrawList_AddImage)i(ImDrawList_AddImageQuad)i(ImDrawList_AddImageRounded)i(ImDrawList_PathClear)i(ImDrawList_PathLineTo)i(ImDrawList_PathLineToMergeDuplicate)i(ImDrawList_PathFillConvex)i(ImDrawList_PathStroke)i(ImDrawList_PathArcTo)i(ImDrawList_PathArcToFast)i(ImDrawList_PathBezierCubicCurveTo)i(ImDrawList_PathBezierQuadraticCurveTo)i(ImDrawList_PathRect)i(ImDrawList_AddCallback)i(ImDrawList_AddDrawCmd)i(ImDrawList_CloneOutput)i(ImDrawList_ChannelsSplit)i(ImDrawList_ChannelsMerge)i(ImDrawList_ChannelsSetCurrent)i(ImDrawList_PrimReserve)i(ImDrawList_PrimUnreserve)i(ImDrawList_PrimRect)i(ImDrawList_PrimRectUV)i(ImDrawList_PrimQuadUV)i(ImDrawList_PrimWriteVtx)i(ImDrawList_PrimWriteIdx)i(ImDrawList_PrimVtx)i(ImDrawList__ResetForNewFrame)i(ImDrawList__ClearFreeMemory)i(ImDrawList__PopUnusedDrawCmd)i(ImDrawList__TryMergeDrawCmds)i(ImDrawList__OnChangedClipRect)i(ImDrawList__OnChangedTextureID)i(ImDrawList__OnChangedVtxOffset)i(ImDrawList__CalcCircleAutoSegmentCount)i(ImDrawList__PathArcToFastEx)i(ImDrawList__PathArcToN)i(ImDrawData_ImDrawData)i(ImDrawData_destroy)i(ImDrawData_Clear)i(ImDrawData_DeIndexAllBuffers)i(ImDrawData_ScaleClipRects)i(ImFontConfig_ImFontConfig)i(ImFontConfig_destroy)i(ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder)i(ImFontGlyphRangesBuilder_destroy)i(ImFontGlyphRangesBuilder_Clear)i(ImFontGlyphRangesBuilder_GetBit)i(ImFontGlyphRangesBuilder_SetBit)i(ImFontGlyphRangesBuilder_AddChar)i(ImFontGlyphRangesBuilder_AddText)i(ImFontGlyphRangesBuilder_AddRanges)i(ImFontGlyphRangesBuilder_BuildRanges)i(ImFontAtlasCustomRect_ImFontAtlasCustomRect)i(ImFontAtlasCustomRect_destroy)i(ImFontAtlasCustomRect_IsPacked)i(ImFontAtlas_ImFontAtlas)i(ImFontAtlas_destroy)i(ImFontAtlas_AddFont)i(ImFontAtlas_AddFontDefault)i(ImFontAtlas_AddFontFromFileTTF)i(ImFontAtlas_AddFontFromMemoryTTF)i(ImFontAtlas_AddFontFromMemoryCompressedTTF)i(ImFontAtlas_AddFontFromMemoryCompressedBase85TTF)i(ImFontAtlas_ClearInputData)i(ImFontAtlas_ClearTexData)i(ImFontAtlas_ClearFonts)i(ImFontAtlas_Clear)i(ImFontAtlas_Build)i(ImFontAtlas_GetTexDataAsAlpha8)i(ImFontAtlas_GetTexDataAsRGBA32)i(ImFontAtlas_IsBuilt)i(ImFontAtlas_SetTexID)i(ImFontAtlas_GetGlyphRangesDefault)i(ImFontAtlas_GetGlyphRangesGreek)i(ImFontAtlas_GetGlyphRangesKorean)i(ImFontAtlas_GetGlyphRangesJapanese)i(ImFontAtlas_GetGlyphRangesChineseFull)i(ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon)i(ImFontAtlas_GetGlyphRangesCyrillic)i(ImFontAtlas_GetGlyphRangesThai)i(ImFontAtlas_GetGlyphRangesVietnamese)i(ImFontAtlas_AddCustomRectRegular)i(ImFontAtlas_AddCustomRectFontGlyph)i(ImFontAtlas_GetCustomRectByIndex)i(ImFontAtlas_CalcCustomRectUV)i(ImFontAtlas_GetMouseCursorTexData)i(ImFont_ImFont)i(ImFont_destroy)i(ImFont_FindGlyph)i(ImFont_FindGlyphNoFallback)i(ImFont_GetCharAdvance)i(ImFont_IsLoaded)i(ImFont_GetDebugName)i(ImFont_CalcTextSizeA)i(ImFont_CalcWordWrapPositionA)i(ImFont_RenderChar)i(ImFont_RenderText)i(ImFont_BuildLookupTable)i(ImFont_ClearOutputData)i(ImFont_GrowIndex)i(ImFont_AddGlyph)i(ImFont_AddRemapChar)i(ImFont_SetGlyphVisible)i(ImFont_IsGlyphRangeUnused)i(ImGuiViewport_ImGuiViewport)i(ImGuiViewport_destroy)i(ImGuiViewport_GetCenter)i(ImGuiViewport_GetWorkCenter)i(ImGuiPlatformIO_ImGuiPlatformIO)i(ImGuiPlatformIO_destroy)i(ImGuiPlatformMonitor_ImGuiPlatformMonitor)i(ImGuiPlatformMonitor_destroy)i(ImGuiPlatformImeData_ImGuiPlatformImeData)i(ImGuiPlatformImeData_destroy)i(igGetKeyIndex)i(igImHashData)i(igImHashStr)i(igImQsort)i(igImAlphaBlendColors)i(igImIsPowerOfTwo_Int)i(igImIsPowerOfTwo_U64)i(igImUpperPowerOfTwo)i(igImStricmp)i(igImStrnicmp)i(igImStrncpy)i(igImStrdup)i(igImStrdupcpy)i(igImStrchrRange)i(igImStrlenW)i(igImStreolRange)i(igImStrbolW)i(igImStristr)i(igImStrTrimBlanks)i(igImStrSkipBlank)i(igImToUpper)i(igImCharIsBlankA)i(igImCharIsBlankW)i(igImFormatString)i(igImFormatStringV)i(igImFormatStringToTempBuffer)i(igImFormatStringToTempBufferV)i(igImParseFormatFindStart)i(igImParseFormatFindEnd)i(igImParseFormatTrimDecorations)i(igImParseFormatSanitizeForPrinting)i(igImParseFormatSanitizeForScanning)i(igImParseFormatPrecision)i(igImTextCharToUtf8)i(igImTextStrToUtf8)i(igImTextCharFromUtf8)i(igImTextStrFromUtf8)i(igImTextCountCharsFromUtf8)i(igImTextCountUtf8BytesFromChar)i(igImTextCountUtf8BytesFromStr)i(igImFileOpen)i(igImFileClose)i(igImFileGetSize)i(igImFileRead)i(igImFileWrite)i(igImFileLoadToMemory)i(igImPow_Float)i(igImPow_double)i(igImLog_Float)i(igImLog_double)i(igImAbs_Int)i(igImAbs_Float)i(igImAbs_double)i(igImSign_Float)i(igImSign_double)i(igImRsqrt_Float)i(igImRsqrt_double)i(igImMin)i(igImMax)i(igImClamp)i(igImLerp_Vec2Float)i(igImLerp_Vec2Vec2)i(igImLerp_Vec4)i(igImSaturate)i(igImLengthSqr_Vec2)i(igImLengthSqr_Vec4)i(igImInvLength)i(igImFloor_Float)i(igImFloorSigned_Float)i(igImFloor_Vec2)i(igImFloorSigned_Vec2)i(igImModPositive)i(igImDot)i(igImRotate)i(igImLinearSweep)i(igImMul)i(igImIsFloatAboveGuaranteedIntegerPrecision)i(igImBezierCubicCalc)i(igImBezierCubicClosestPoint)i(igImBezierCubicClosestPointCasteljau)i(igImBezierQuadraticCalc)i(igImLineClosestPoint)i(igImTriangleContainsPoint)i(igImTriangleClosestPoint)i(igImTriangleBarycentricCoords)i(igImTriangleArea)i(igImGetDirQuadrantFromDelta)i(ImRect_ImRect_Nil)i(ImRect_destroy)i(ImRect_ImRect_Vec2)i(ImRect_ImRect_Vec4)i(ImRect_ImRect_Float)i(ImRect_GetCenter)i(ImRect_GetSize)i(ImRect_GetWidth)i(ImRect_GetHeight)i(ImRect_GetArea)i(ImRect_GetTL)i(ImRect_GetTR)i(ImRect_GetBL)i(ImRect_GetBR)i(ImRect_Contains_Vec2)i(ImRect_Contains_Rect)i(ImRect_Overlaps)i(ImRect_Add_Vec2)i(ImRect_Add_Rect)i(ImRect_Expand_Float)i(ImRect_Expand_Vec2)i(ImRect_Translate)i(ImRect_TranslateX)i(ImRect_TranslateY)i(ImRect_ClipWith)i(ImRect_ClipWithFull)i(ImRect_Floor)i(ImRect_IsInverted)i(ImRect_ToVec4)i(igImBitArrayTestBit)i(igImBitArrayClearBit)i(igImBitArraySetBit)i(igImBitArraySetBitRange)i(ImGuiTextIndex_clear)i(ImGuiTextIndex_size)i(ImGuiTextIndex_get_line_begin)i(ImGuiTextIndex_get_line_end)i(ImGuiTextIndex_append)i(ImDrawListSharedData_ImDrawListSharedData)i(ImDrawListSharedData_destroy)i(ImDrawListSharedData_SetCircleTessellationMaxError)i(ImDrawDataBuilder_Clear)i(ImDrawDataBuilder_ClearFreeMemory)i(ImDrawDataBuilder_GetDrawListCount)i(ImDrawDataBuilder_FlattenIntoSingleLayer)i(ImGuiStyleMod_ImGuiStyleMod_Int)i(ImGuiStyleMod_destroy)i(ImGuiStyleMod_ImGuiStyleMod_Float)i(ImGuiStyleMod_ImGuiStyleMod_Vec2)i(ImGuiComboPreviewData_ImGuiComboPreviewData)i(ImGuiComboPreviewData_destroy)i(ImGuiMenuColumns_ImGuiMenuColumns)i(ImGuiMenuColumns_destroy)i(ImGuiMenuColumns_Update)i(ImGuiMenuColumns_DeclColumns)i(ImGuiMenuColumns_CalcNextTotalWidth)i(ImGuiInputTextState_ImGuiInputTextState)i(ImGuiInputTextState_destroy)i(ImGuiInputTextState_ClearText)i(ImGuiInputTextState_ClearFreeMemory)i(ImGuiInputTextState_GetUndoAvailCount)i(ImGuiInputTextState_GetRedoAvailCount)i(ImGuiInputTextState_OnKeyPressed)i(ImGuiInputTextState_CursorAnimReset)i(ImGuiInputTextState_CursorClamp)i(ImGuiInputTextState_HasSelection)i(ImGuiInputTextState_ClearSelection)i(ImGuiInputTextState_GetCursorPos)i(ImGuiInputTextState_GetSelectionStart)i(ImGuiInputTextState_GetSelectionEnd)i(ImGuiInputTextState_SelectAll)i(ImGuiPopupData_ImGuiPopupData)i(ImGuiPopupData_destroy)i(ImGuiNextWindowData_ImGuiNextWindowData)i(ImGuiNextWindowData_destroy)i(ImGuiNextWindowData_ClearFlags)i(ImGuiNextItemData_ImGuiNextItemData)i(ImGuiNextItemData_destroy)i(ImGuiNextItemData_ClearFlags)i(ImGuiLastItemData_ImGuiLastItemData)i(ImGuiLastItemData_destroy)i(ImGuiStackSizes_ImGuiStackSizes)i(ImGuiStackSizes_destroy)i(ImGuiStackSizes_SetToCurrentState)i(ImGuiStackSizes_CompareWithCurrentState)i(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr)i(ImGuiPtrOrIndex_destroy)i(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int)i(ImGuiInputEvent_ImGuiInputEvent)i(ImGuiInputEvent_destroy)i(ImGuiKeyRoutingData_ImGuiKeyRoutingData)i(ImGuiKeyRoutingData_destroy)i(ImGuiKeyRoutingTable_ImGuiKeyRoutingTable)i(ImGuiKeyRoutingTable_destroy)i(ImGuiKeyRoutingTable_Clear)i(ImGuiKeyOwnerData_ImGuiKeyOwnerData)i(ImGuiKeyOwnerData_destroy)i(ImGuiListClipperRange_FromIndices)i(ImGuiListClipperRange_FromPositions)i(ImGuiListClipperData_ImGuiListClipperData)i(ImGuiListClipperData_destroy)i(ImGuiListClipperData_Reset)i(ImGuiNavItemData_ImGuiNavItemData)i(ImGuiNavItemData_destroy)i(ImGuiNavItemData_Clear)i(ImGuiOldColumnData_ImGuiOldColumnData)i(ImGuiOldColumnData_destroy)i(ImGuiOldColumns_ImGuiOldColumns)i(ImGuiOldColumns_destroy)i(ImGuiDockNode_ImGuiDockNode)i(ImGuiDockNode_destroy)i(ImGuiDockNode_IsRootNode)i(ImGuiDockNode_IsDockSpace)i(ImGuiDockNode_IsFloatingNode)i(ImGuiDockNode_IsCentralNode)i(ImGuiDockNode_IsHiddenTabBar)i(ImGuiDockNode_IsNoTabBar)i(ImGuiDockNode_IsSplitNode)i(ImGuiDockNode_IsLeafNode)i(ImGuiDockNode_IsEmpty)i(ImGuiDockNode_Rect)i(ImGuiDockNode_SetLocalFlags)i(ImGuiDockNode_UpdateMergedFlags)i(ImGuiDockContext_ImGuiDockContext)i(ImGuiDockContext_destroy)i(ImGuiViewportP_ImGuiViewportP)i(ImGuiViewportP_destroy)i(ImGuiViewportP_ClearRequestFlags)i(ImGuiViewportP_CalcWorkRectPos)i(ImGuiViewportP_CalcWorkRectSize)i(ImGuiViewportP_UpdateWorkRect)i(ImGuiViewportP_GetMainRect)i(ImGuiViewportP_GetWorkRect)i(ImGuiViewportP_GetBuildWorkRect)i(ImGuiWindowSettings_ImGuiWindowSettings)i(ImGuiWindowSettings_destroy)i(ImGuiWindowSettings_GetName)i(ImGuiSettingsHandler_ImGuiSettingsHandler)i(ImGuiSettingsHandler_destroy)i(ImGuiMetricsConfig_ImGuiMetricsConfig)i(ImGuiMetricsConfig_destroy)i(ImGuiStackLevelInfo_ImGuiStackLevelInfo)i(ImGuiStackLevelInfo_destroy)i(ImGuiStackTool_ImGuiStackTool)i(ImGuiStackTool_destroy)i(ImGuiContextHook_ImGuiContextHook)i(ImGuiContextHook_destroy)i(ImGuiContext_ImGuiContext)i(ImGuiContext_destroy)i(ImGuiWindow_ImGuiWindow)i(ImGuiWindow_destroy)i(ImGuiWindow_GetID_Str)i(ImGuiWindow_GetID_Ptr)i(ImGuiWindow_GetID_Int)i(ImGuiWindow_GetIDFromRectangle)i(ImGuiWindow_Rect)i(ImGuiWindow_CalcFontSize)i(ImGuiWindow_TitleBarHeight)i(ImGuiWindow_TitleBarRect)i(ImGuiWindow_MenuBarHeight)i(ImGuiWindow_MenuBarRect)i(ImGuiTabItem_ImGuiTabItem)i(ImGuiTabItem_destroy)i(ImGuiTabBar_ImGuiTabBar)i(ImGuiTabBar_destroy)i(ImGuiTabBar_GetTabOrder)i(ImGuiTabBar_GetTabName)i(ImGuiTableColumn_ImGuiTableColumn)i(ImGuiTableColumn_destroy)i(ImGuiTableInstanceData_ImGuiTableInstanceData)i(ImGuiTableInstanceData_destroy)i(ImGuiTable_ImGuiTable)i(ImGuiTable_destroy)i(ImGuiTableTempData_ImGuiTableTempData)i(ImGuiTableTempData_destroy)i(ImGuiTableColumnSettings_ImGuiTableColumnSettings)i(ImGuiTableColumnSettings_destroy)i(ImGuiTableSettings_ImGuiTableSettings)i(ImGuiTableSettings_destroy)i(ImGuiTableSettings_GetColumnSettings)i(igGetCurrentWindowRead)i(igGetCurrentWindow)i(igFindWindowByID)i(igFindWindowByName)i(igUpdateWindowParentAndRootLinks)i(igCalcWindowNextAutoFitSize)i(igIsWindowChildOf)i(igIsWindowWithinBeginStackOf)i(igIsWindowAbove)i(igIsWindowNavFocusable)i(igSetWindowPos_WindowPtr)i(igSetWindowSize_WindowPtr)i(igSetWindowCollapsed_WindowPtr)i(igSetWindowHitTestHole)i(igWindowRectAbsToRel)i(igWindowRectRelToAbs)i(igFocusWindow)i(igFocusTopMostWindowUnderOne)i(igBringWindowToFocusFront)i(igBringWindowToDisplayFront)i(igBringWindowToDisplayBack)i(igBringWindowToDisplayBehind)i(igFindWindowDisplayIndex)i(igFindBottomMostVisibleWindowWithinBeginStack)i(igSetCurrentFont)i(igGetDefaultFont)i(igGetForegroundDrawList_WindowPtr)i(igInitialize)i(igShutdown)i(igUpdateInputEvents)i(igUpdateHoveredWindowAndCaptureFlags)i(igStartMouseMovingWindow)i(igStartMouseMovingWindowOrNode)i(igUpdateMouseMovingWindowNewFrame)i(igUpdateMouseMovingWindowEndFrame)i(igAddContextHook)i(igRemoveContextHook)i(igCallContextHooks)i(igTranslateWindowsInViewport)i(igScaleWindowsInViewport)i(igDestroyPlatformWindow)i(igSetWindowViewport)i(igSetCurrentViewport)i(igGetViewportPlatformMonitor)i(igFindHoveredViewportFromPlatformWindowStack)i(igMarkIniSettingsDirty_Nil)i(igMarkIniSettingsDirty_WindowPtr)i(igClearIniSettings)i(igCreateNewWindowSettings)i(igFindWindowSettings)i(igFindOrCreateWindowSettings)i(igAddSettingsHandler)i(igRemoveSettingsHandler)i(igFindSettingsHandler)i(igSetScrollX_WindowPtr)i(igSetScrollY_WindowPtr)i(igSetScrollFromPosX_WindowPtr)i(igSetScrollFromPosY_WindowPtr)i(igScrollToItem)i(igScrollToRect)i(igScrollToRectEx)i(igScrollToBringRectIntoView)i(igGetItemID)i(igGetItemStatusFlags)i(igGetItemFlags)i(igGetActiveID)i(igGetFocusID)i(igSetActiveID)i(igSetFocusID)i(igClearActiveID)i(igGetHoveredID)i(igSetHoveredID)i(igKeepAliveID)i(igMarkItemEdited)i(igPushOverrideID)i(igGetIDWithSeed)i(igItemSize_Vec2)i(igItemSize_Rect)i(igItemAdd)i(igItemHoverable)i(igIsClippedEx)i(igSetLastItemData)i(igCalcItemSize)i(igCalcWrapWidthForPos)i(igPushMultiItemsWidths)i(igIsItemToggledSelection)i(igGetContentRegionMaxAbs)i(igShrinkWidths)i(igPushItemFlag)i(igPopItemFlag)i(igLogBegin)i(igLogToBuffer)i(igLogRenderedText)i(igLogSetNextTextDecoration)i(igBeginChildEx)i(igOpenPopupEx)i(igClosePopupToLevel)i(igClosePopupsOverWindow)i(igClosePopupsExceptModals)i(igIsPopupOpen_ID)i(igBeginPopupEx)i(igBeginTooltipEx)i(igGetPopupAllowedExtentRect)i(igGetTopMostPopupModal)i(igGetTopMostAndVisiblePopupModal)i(igFindBestWindowPosForPopup)i(igFindBestWindowPosForPopupEx)i(igBeginViewportSideBar)i(igBeginMenuEx)i(igMenuItemEx)i(igBeginComboPopup)i(igBeginComboPreview)i(igEndComboPreview)i(igNavInitWindow)i(igNavInitRequestApplyResult)i(igNavMoveRequestButNoResultYet)i(igNavMoveRequestSubmit)i(igNavMoveRequestForward)i(igNavMoveRequestResolveWithLastItem)i(igNavMoveRequestCancel)i(igNavMoveRequestApplyResult)i(igNavMoveRequestTryWrapping)i(igActivateItem)i(igSetNavWindow)i(igSetNavID)i(igIsNamedKey)i(igIsNamedKeyOrModKey)i(igIsLegacyKey)i(igIsGamepadKey)i(igIsAliasKey)i(igConvertSingleModFlagToKey)i(igGetKeyData)i(igGetKeyChordName)i(igMouseButtonToKey)i(igIsMouseDragPastThreshold)i(igGetKeyVector2d)i(igGetNavTweakPressedAmount)i(igCalcTypematicRepeatAmount)i(igGetTypematicRepeatRate)i(igSetActiveIdUsingAllKeyboardKeys)i(igIsActiveIdUsingNavDir)i(igGetKeyOwner)i(igSetKeyOwner)i(igSetItemKeyOwner)i(igTestKeyOwner)i(igGetKeyOwnerData)i(igIsKeyDown_ID)i(igIsKeyPressed_ID)i(igIsKeyReleased_ID)i(igIsMouseDown_ID)i(igIsMouseClicked_ID)i(igIsMouseReleased_ID)i(igShortcut)i(igSetShortcutRouting)i(igTestShortcutRouting)i(igGetShortcutRoutingData)i(igDockContextInitialize)i(igDockContextShutdown)i(igDockContextClearNodes)i(igDockContextRebuildNodes)i(igDockContextNewFrameUpdateUndocking)i(igDockContextNewFrameUpdateDocking)i(igDockContextEndFrame)i(igDockContextGenNodeID)i(igDockContextQueueDock)i(igDockContextQueueUndockWindow)i(igDockContextQueueUndockNode)i(igDockContextCalcDropPosForDocking)i(igDockContextFindNodeByID)i(igDockNodeBeginAmendTabBar)i(igDockNodeEndAmendTabBar)i(igDockNodeGetRootNode)i(igDockNodeIsInHierarchyOf)i(igDockNodeGetDepth)i(igDockNodeGetWindowMenuButtonId)i(igGetWindowDockNode)i(igGetWindowAlwaysWantOwnTabBar)i(igBeginDocked)i(igBeginDockableDragDropSource)i(igBeginDockableDragDropTarget)i(igSetWindowDock)i(igDockBuilderDockWindow)i(igDockBuilderGetNode)i(igDockBuilderGetCentralNode)i(igDockBuilderAddNode)i(igDockBuilderRemoveNode)i(igDockBuilderRemoveNodeDockedWindows)i(igDockBuilderRemoveNodeChildNodes)i(igDockBuilderSetNodePos)i(igDockBuilderSetNodeSize)i(igDockBuilderSplitNode)i(igDockBuilderCopyDockSpace)i(igDockBuilderCopyNode)i(igDockBuilderCopyWindowSettings)i(igDockBuilderFinish)i(igPushFocusScope)i(igPopFocusScope)i(igGetCurrentFocusScope)i(igIsDragDropActive)i(igBeginDragDropTargetCustom)i(igClearDragDrop)i(igIsDragDropPayloadBeingAccepted)i(igRenderDragDropTargetRect)i(igSetWindowClipRectBeforeSetChannel)i(igBeginColumns)i(igEndColumns)i(igPushColumnClipRect)i(igPushColumnsBackground)i(igPopColumnsBackground)i(igGetColumnsID)i(igFindOrCreateColumns)i(igGetColumnOffsetFromNorm)i(igGetColumnNormFromOffset)i(igTableOpenContextMenu)i(igTableSetColumnWidth)i(igTableSetColumnSortDirection)i(igTableGetHoveredColumn)i(igTableGetHeaderRowHeight)i(igTablePushBackgroundChannel)i(igTablePopBackgroundChannel)i(igGetCurrentTable)i(igTableFindByID)i(igBeginTableEx)i(igTableBeginInitMemory)i(igTableBeginApplyRequests)i(igTableSetupDrawChannels)i(igTableUpdateLayout)i(igTableUpdateBorders)i(igTableUpdateColumnsWeightFromWidth)i(igTableDrawBorders)i(igTableDrawContextMenu)i(igTableBeginContextMenuPopup)i(igTableMergeDrawChannels)i(igTableGetInstanceData)i(igTableSortSpecsSanitize)i(igTableSortSpecsBuild)i(igTableGetColumnNextSortDirection)i(igTableFixColumnSortDirection)i(igTableGetColumnWidthAuto)i(igTableBeginRow)i(igTableEndRow)i(igTableBeginCell)i(igTableEndCell)i(igTableGetCellBgRect)i(igTableGetColumnName_TablePtr)i(igTableGetColumnResizeID)i(igTableGetMaxColumnWidth)i(igTableSetColumnWidthAutoSingle)i(igTableSetColumnWidthAutoAll)i(igTableRemove)i(igTableGcCompactTransientBuffers_TablePtr)i(igTableGcCompactTransientBuffers_TableTempDataPtr)i(igTableGcCompactSettings)i(igTableLoadSettings)i(igTableSaveSettings)i(igTableResetSettings)i(igTableGetBoundSettings)i(igTableSettingsAddSettingsHandler)i(igTableSettingsCreate)i(igTableSettingsFindByID)i(igBeginTabBarEx)i(igTabBarFindTabByID)i(igTabBarFindMostRecentlySelectedTabForActiveWindow)i(igTabBarAddTab)i(igTabBarRemoveTab)i(igTabBarCloseTab)i(igTabBarQueueReorder)i(igTabBarQueueReorderFromMousePos)i(igTabBarProcessReorder)i(igTabItemEx)i(igTabItemCalcSize_Str)i(igTabItemCalcSize_WindowPtr)i(igTabItemBackground)i(igTabItemLabelAndCloseButton)i(igRenderText)i(igRenderTextWrapped)i(igRenderTextClipped)i(igRenderTextClippedEx)i(igRenderTextEllipsis)i(igRenderFrame)i(igRenderFrameBorder)i(igRenderColorRectWithAlphaCheckerboard)i(igRenderNavHighlight)i(igFindRenderedTextEnd)i(igRenderMouseCursor)i(igRenderArrow)i(igRenderBullet)i(igRenderCheckMark)i(igRenderArrowPointingAt)i(igRenderArrowDockMenu)i(igRenderRectFilledRangeH)i(igRenderRectFilledWithHole)i(igCalcRoundingFlagsForRectInRect)i(igTextEx)i(igButtonEx)i(igCloseButton)i(igCollapseButton)i(igArrowButtonEx)i(igScrollbar)i(igScrollbarEx)i(igImageButtonEx)i(igGetWindowScrollbarRect)i(igGetWindowScrollbarID)i(igGetWindowResizeCornerID)i(igGetWindowResizeBorderID)i(igSeparatorEx)i(igCheckboxFlags_S64Ptr)i(igCheckboxFlags_U64Ptr)i(igButtonBehavior)i(igDragBehavior)i(igSliderBehavior)i(igSplitterBehavior)i(igTreeNodeBehavior)i(igTreePushOverrideID)i(igTreeNodeSetOpen)i(igTreeNodeUpdateNextOpen)i(igDataTypeGetInfo)i(igDataTypeFormatString)i(igDataTypeApplyOp)i(igDataTypeApplyFromText)i(igDataTypeCompare)i(igDataTypeClamp)i(igInputTextEx)i(igTempInputText)i(igTempInputScalar)i(igTempInputIsActive)i(igGetInputTextState)i(igColorTooltip)i(igColorEditOptionsPopup)i(igColorPickerOptionsPopup)i(igPlotEx)i(igShadeVertsLinearColorGradientKeepAlpha)i(igShadeVertsLinearUV)i(igGcCompactTransientMiscBuffers)i(igGcCompactTransientWindowBuffers)i(igGcAwakeTransientWindowBuffers)i(igDebugLog)i(igDebugLogV)i(igErrorCheckEndFrameRecover)i(igErrorCheckEndWindowRecover)i(igErrorCheckUsingSetCursorPosToExtendParentBoundaries)i(igDebugLocateItem)i(igDebugLocateItemOnHover)i(igDebugLocateItemResolveWithLastItem)i(igDebugDrawItemRect)i(igDebugStartItemPicker)i(igShowFontAtlas)i(igDebugHookIdInfo)i(igDebugNodeColumns)i(igDebugNodeDockNode)i(igDebugNodeDrawList)i(igDebugNodeDrawCmdShowMeshAndBoundingBox)i(igDebugNodeFont)i(igDebugNodeFontGlyph)i(igDebugNodeStorage)i(igDebugNodeTabBar)i(igDebugNodeTable)i(igDebugNodeTableSettings)i(igDebugNodeInputTextState)i(igDebugNodeWindow)i(igDebugNodeWindowSettings)i(igDebugNodeWindowsList)i(igDebugNodeWindowsListByBeginStackParent)i(igDebugNodeViewport)i(igDebugRenderViewportThumbnail)i(igIsKeyPressedMap)i(igImFontAtlasGetBuilderForStbTruetype)i(igImFontAtlasBuildInit)i(igImFontAtlasBuildSetupFont)i(igImFontAtlasBuildPackCustomRects)i(igImFontAtlasBuildFinish)i(igImFontAtlasBuildRender8bppRectFromString)i(igImFontAtlasBuildRender32bppRectFromString)i(igImFontAtlasBuildMultiplyCalcLookupTable)i(igImFontAtlasBuildMultiplyRectAlpha8)i(igLogText)i(ImGuiTextBuffer_appendf)i(igGET_FLT_MAX)i(igGET_FLT_MIN)
int cimgui_load_lib(void* (*func_load)(char*, void* user_data), void* user_data){
g(igCreateContext)g(igDestroyContext)g(igGetCurrentContext)g(igSetCurrentContext)g(igGetIO)g(igGetStyle)g(igNewFrame)g(igEndFrame)g(igRender)g(igGetDrawData)g(igShowDemoWindow)g(igShowMetricsWindow)g(igShowDebugLogWindow)g(igShowStackToolWindow)g(igShowAboutWindow)g(igShowStyleEditor)g(igShowStyleSelector)g(igShowFontSelector)g(igShowUserGuide)g(igGetVersion)g(igStyleColorsDark)g(igStyleColorsLight)g(igStyleColorsClassic)g(igBegin)g(igEnd)g(igBeginChild_Str)g(igBeginChild_ID)g(igEndChild)g(igIsWindowAppearing)g(igIsWindowCollapsed)g(igIsWindowFocused)g(igIsWindowHovered)g(igGetWindowDrawList)g(igGetWindowDpiScale)g(igGetWindowPos)g(igGetWindowSize)g(igGetWindowWidth)g(igGetWindowHeight)g(igGetWindowViewport)g(igSetNextWindowPos)g(igSetNextWindowSize)g(igSetNextWindowSizeConstraints)g(igSetNextWindowContentSize)g(igSetNextWindowCollapsed)g(igSetNextWindowFocus)g(igSetNextWindowScroll)g(igSetNextWindowBgAlpha)g(igSetNextWindowViewport)g(igSetWindowPos_Vec2)g(igSetWindowSize_Vec2)g(igSetWindowCollapsed_Bool)g(igSetWindowFocus_Nil)g(igSetWindowFontScale)g(igSetWindowPos_Str)g(igSetWindowSize_Str)g(igSetWindowCollapsed_Str)g(igSetWindowFocus_Str)g(igGetContentRegionAvail)g(igGetContentRegionMax)g(igGetWindowContentRegionMin)g(igGetWindowContentRegionMax)g(igGetScrollX)g(igGetScrollY)g(igSetScrollX_Float)g(igSetScrollY_Float)g(igGetScrollMaxX)g(igGetScrollMaxY)g(igSetScrollHereX)g(igSetScrollHereY)g(igSetScrollFromPosX_Float)g(igSetScrollFromPosY_Float)g(igPushFont)g(igPopFont)g(igPushStyleColor_U32)g(igPushStyleColor_Vec4)g(igPopStyleColor)g(igPushStyleVar_Float)g(igPushStyleVar_Vec2)g(igPopStyleVar)g(igPushAllowKeyboardFocus)g(igPopAllowKeyboardFocus)g(igPushButtonRepeat)g(igPopButtonRepeat)g(igPushItemWidth)g(igPopItemWidth)g(igSetNextItemWidth)g(igCalcItemWidth)g(igPushTextWrapPos)g(igPopTextWrapPos)g(igGetFont)g(igGetFontSize)g(igGetFontTexUvWhitePixel)g(igGetColorU32_Col)g(igGetColorU32_Vec4)g(igGetColorU32_U32)g(igGetStyleColorVec4)g(igSeparator)g(igSameLine)g(igNewLine)g(igSpacing)g(igDummy)g(igIndent)g(igUnindent)g(igBeginGroup)g(igEndGroup)g(igGetCursorPos)g(igGetCursorPosX)g(igGetCursorPosY)g(igSetCursorPos)g(igSetCursorPosX)g(igSetCursorPosY)g(igGetCursorStartPos)g(igGetCursorScreenPos)g(igSetCursorScreenPos)g(igAlignTextToFramePadding)g(igGetTextLineHeight)g(igGetTextLineHeightWithSpacing)g(igGetFrameHeight)g(igGetFrameHeightWithSpacing)g(igPushID_Str)g(igPushID_StrStr)g(igPushID_Ptr)g(igPushID_Int)g(igPopID)g(igGetID_Str)g(igGetID_StrStr)g(igGetID_Ptr)g(igTextUnformatted)g(igText)g(igTextV)g(igTextColored)g(igTextColoredV)g(igTextDisabled)g(igTextDisabledV)g(igTextWrapped)g(igTextWrappedV)g(igLabelText)g(igLabelTextV)g(igBulletText)g(igBulletTextV)g(igButton)g(igSmallButton)g(igInvisibleButton)g(igArrowButton)g(igCheckbox)g(igCheckboxFlags_IntPtr)g(igCheckboxFlags_UintPtr)g(igRadioButton_Bool)g(igRadioButton_IntPtr)g(igProgressBar)g(igBullet)g(igImage)g(igImageButton)g(igBeginCombo)g(igEndCombo)g(igCombo_Str_arr)g(igCombo_Str)g(igCombo_FnBoolPtr)g(igDragFloat)g(igDragFloat2)g(igDragFloat3)g(igDragFloat4)g(igDragFloatRange2)g(igDragInt)g(igDragInt2)g(igDragInt3)g(igDragInt4)g(igDragIntRange2)g(igDragScalar)g(igDragScalarN)g(igSliderFloat)g(igSliderFloat2)g(igSliderFloat3)g(igSliderFloat4)g(igSliderAngle)g(igSliderInt)g(igSliderInt2)g(igSliderInt3)g(igSliderInt4)g(igSliderScalar)g(igSliderScalarN)g(igVSliderFloat)g(igVSliderInt)g(igVSliderScalar)g(igInputText)g(igInputTextMultiline)g(igInputTextWithHint)g(igInputFloat)g(igInputFloat2)g(igInputFloat3)g(igInputFloat4)g(igInputInt)g(igInputInt2)g(igInputInt3)g(igInputInt4)g(igInputDouble)g(igInputScalar)g(igInputScalarN)g(igColorEdit3)g(igColorEdit4)g(igColorPicker3)g(igColorPicker4)g(igColorButton)g(igSetColorEditOptions)g(igTreeNode_Str)g(igTreeNode_StrStr)g(igTreeNode_Ptr)g(igTreeNodeV_Str)g(igTreeNodeV_Ptr)g(igTreeNodeEx_Str)g(igTreeNodeEx_StrStr)g(igTreeNodeEx_Ptr)g(igTreeNodeExV_Str)g(igTreeNodeExV_Ptr)g(igTreePush_Str)g(igTreePush_Ptr)g(igTreePop)g(igGetTreeNodeToLabelSpacing)g(igCollapsingHeader_TreeNodeFlags)g(igCollapsingHeader_BoolPtr)g(igSetNextItemOpen)g(igSelectable_Bool)g(igSelectable_BoolPtr)g(igBeginListBox)g(igEndListBox)g(igListBox_Str_arr)g(igListBox_FnBoolPtr)g(igPlotLines_FloatPtr)g(igPlotLines_FnFloatPtr)g(igPlotHistogram_FloatPtr)g(igPlotHistogram_FnFloatPtr)g(igValue_Bool)g(igValue_Int)g(igValue_Uint)g(igValue_Float)g(igBeginMenuBar)g(igEndMenuBar)g(igBeginMainMenuBar)g(igEndMainMenuBar)g(igBeginMenu)g(igEndMenu)g(igMenuItem_Bool)g(igMenuItem_BoolPtr)g(igBeginTooltip)g(igEndTooltip)g(igSetTooltip)g(igSetTooltipV)g(igBeginPopup)g(igBeginPopupModal)g(igEndPopup)g(igOpenPopup_Str)g(igOpenPopup_ID)g(igOpenPopupOnItemClick)g(igCloseCurrentPopup)g(igBeginPopupContextItem)g(igBeginPopupContextWindow)g(igBeginPopupContextVoid)g(igIsPopupOpen_Str)g(igBeginTable)g(igEndTable)g(igTableNextRow)g(igTableNextColumn)g(igTableSetColumnIndex)g(igTableSetupColumn)g(igTableSetupScrollFreeze)g(igTableHeadersRow)g(igTableHeader)g(igTableGetSortSpecs)g(igTableGetColumnCount)g(igTableGetColumnIndex)g(igTableGetRowIndex)g(igTableGetColumnName_Int)g(igTableGetColumnFlags)g(igTableSetColumnEnabled)g(igTableSetBgColor)g(igColumns)g(igNextColumn)g(igGetColumnIndex)g(igGetColumnWidth)g(igSetColumnWidth)g(igGetColumnOffset)g(igSetColumnOffset)g(igGetColumnsCount)g(igBeginTabBar)g(igEndTabBar)g(igBeginTabItem)g(igEndTabItem)g(igTabItemButton)g(igSetTabItemClosed)g(igDockSpace)g(igDockSpaceOverViewport)g(igSetNextWindowDockID)g(igSetNextWindowClass)g(igGetWindowDockID)g(igIsWindowDocked)g(igLogToTTY)g(igLogToFile)g(igLogToClipboard)g(igLogFinish)g(igLogButtons)g(igLogTextV)g(igBeginDragDropSource)g(igSetDragDropPayload)g(igEndDragDropSource)g(igBeginDragDropTarget)g(igAcceptDragDropPayload)g(igEndDragDropTarget)g(igGetDragDropPayload)g(igBeginDisabled)g(igEndDisabled)g(igPushClipRect)g(igPopClipRect)g(igSetItemDefaultFocus)g(igSetKeyboardFocusHere)g(igIsItemHovered)g(igIsItemActive)g(igIsItemFocused)g(igIsItemClicked)g(igIsItemVisible)g(igIsItemEdited)g(igIsItemActivated)g(igIsItemDeactivated)g(igIsItemDeactivatedAfterEdit)g(igIsItemToggledOpen)g(igIsAnyItemHovered)g(igIsAnyItemActive)g(igIsAnyItemFocused)g(igGetItemRectMin)g(igGetItemRectMax)g(igGetItemRectSize)g(igSetItemAllowOverlap)g(igGetMainViewport)g(igGetBackgroundDrawList_Nil)g(igGetForegroundDrawList_Nil)g(igGetBackgroundDrawList_ViewportPtr)g(igGetForegroundDrawList_ViewportPtr)g(igIsRectVisible_Nil)g(igIsRectVisible_Vec2)g(igGetTime)g(igGetFrameCount)g(igGetDrawListSharedData)g(igGetStyleColorName)g(igSetStateStorage)g(igGetStateStorage)g(igBeginChildFrame)g(igEndChildFrame)g(igCalcTextSize)g(igColorConvertU32ToFloat4)g(igColorConvertFloat4ToU32)g(igColorConvertRGBtoHSV)g(igColorConvertHSVtoRGB)g(igIsKeyDown_Nil)g(igIsKeyPressed_Bool)g(igIsKeyReleased_Nil)g(igGetKeyPressedAmount)g(igGetKeyName)g(igSetNextFrameWantCaptureKeyboard)g(igIsMouseDown_Nil)g(igIsMouseClicked_Bool)g(igIsMouseReleased_Nil)g(igIsMouseDoubleClicked)g(igGetMouseClickedCount)g(igIsMouseHoveringRect)g(igIsMousePosValid)g(igIsAnyMouseDown)g(igGetMousePos)g(igGetMousePosOnOpeningCurrentPopup)g(igIsMouseDragging)g(igGetMouseDragDelta)g(igResetMouseDragDelta)g(igGetMouseCursor)g(igSetMouseCursor)g(igSetNextFrameWantCaptureMouse)g(igGetClipboardText)g(igSetClipboardText)g(igLoadIniSettingsFromDisk)g(igLoadIniSettingsFromMemory)g(igSaveIniSettingsToDisk)g(igSaveIniSettingsToMemory)g(igDebugTextEncoding)g(igDebugCheckVersionAndDataLayout)g(igSetAllocatorFunctions)g(igGetAllocatorFunctions)g(igMemAlloc)g(igMemFree)g(igGetPlatformIO)g(igUpdatePlatformWindows)g(igRenderPlatformWindowsDefault)g(igDestroyPlatformWindows)g(igFindViewportByID)g(igFindViewportByPlatformHandle)g(ImGuiStyle_ImGuiStyle)g(ImGuiStyle_destroy)g(ImGuiStyle_ScaleAllSizes)g(ImGuiIO_AddKeyEvent)g(ImGuiIO_AddKeyAnalogEvent)g(ImGuiIO_AddMousePosEvent)g(ImGuiIO_AddMouseButtonEvent)g(ImGuiIO_AddMouseWheelEvent)g(ImGuiIO_AddMouseViewportEvent)g(ImGuiIO_AddFocusEvent)g(ImGuiIO_AddInputCharacter)g(ImGuiIO_AddInputCharacterUTF16)g(ImGuiIO_AddInputCharactersUTF8)g(ImGuiIO_SetKeyEventNativeData)g(ImGuiIO_SetAppAcceptingEvents)g(ImGuiIO_ClearInputCharacters)g(ImGuiIO_ClearInputKeys)g(ImGuiIO_ImGuiIO)g(ImGuiIO_destroy)g(ImGuiInputTextCallbackData_ImGuiInputTextCallbackData)g(ImGuiInputTextCallbackData_destroy)g(ImGuiInputTextCallbackData_DeleteChars)g(ImGuiInputTextCallbackData_InsertChars)g(ImGuiInputTextCallbackData_SelectAll)g(ImGuiInputTextCallbackData_ClearSelection)g(ImGuiInputTextCallbackData_HasSelection)g(ImGuiWindowClass_ImGuiWindowClass)g(ImGuiWindowClass_destroy)g(ImGuiPayload_ImGuiPayload)g(ImGuiPayload_destroy)g(ImGuiPayload_Clear)g(ImGuiPayload_IsDataType)g(ImGuiPayload_IsPreview)g(ImGuiPayload_IsDelivery)g(ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs)g(ImGuiTableColumnSortSpecs_destroy)g(ImGuiTableSortSpecs_ImGuiTableSortSpecs)g(ImGuiTableSortSpecs_destroy)g(ImGuiOnceUponAFrame_ImGuiOnceUponAFrame)g(ImGuiOnceUponAFrame_destroy)g(ImGuiTextFilter_ImGuiTextFilter)g(ImGuiTextFilter_destroy)g(ImGuiTextFilter_Draw)g(ImGuiTextFilter_PassFilter)g(ImGuiTextFilter_Build)g(ImGuiTextFilter_Clear)g(ImGuiTextFilter_IsActive)g(ImGuiTextRange_ImGuiTextRange_Nil)g(ImGuiTextRange_destroy)g(ImGuiTextRange_ImGuiTextRange_Str)g(ImGuiTextRange_empty)g(ImGuiTextRange_split)g(ImGuiTextBuffer_ImGuiTextBuffer)g(ImGuiTextBuffer_destroy)g(ImGuiTextBuffer_begin)g(ImGuiTextBuffer_end)g(ImGuiTextBuffer_size)g(ImGuiTextBuffer_empty)g(ImGuiTextBuffer_clear)g(ImGuiTextBuffer_reserve)g(ImGuiTextBuffer_c_str)g(ImGuiTextBuffer_append)g(ImGuiTextBuffer_appendfv)g(ImGuiStoragePair_ImGuiStoragePair_Int)g(ImGuiStoragePair_destroy)g(ImGuiStoragePair_ImGuiStoragePair_Float)g(ImGuiStoragePair_ImGuiStoragePair_Ptr)g(ImGuiStorage_Clear)g(ImGuiStorage_GetInt)g(ImGuiStorage_SetInt)g(ImGuiStorage_GetBool)g(ImGuiStorage_SetBool)g(ImGuiStorage_GetFloat)g(ImGuiStorage_SetFloat)g(ImGuiStorage_GetVoidPtr)g(ImGuiStorage_SetVoidPtr)g(ImGuiStorage_GetIntRef)g(ImGuiStorage_GetBoolRef)g(ImGuiStorage_GetFloatRef)g(ImGuiStorage_GetVoidPtrRef)g(ImGuiStorage_SetAllInt)g(ImGuiStorage_BuildSortByKey)g(ImGuiListClipper_ImGuiListClipper)g(ImGuiListClipper_destroy)g(ImGuiListClipper_Begin)g(ImGuiListClipper_End)g(ImGuiListClipper_Step)g(ImGuiListClipper_ForceDisplayRangeByIndices)g(ImColor_ImColor_Nil)g(ImColor_destroy)g(ImColor_ImColor_Float)g(ImColor_ImColor_Vec4)g(ImColor_ImColor_Int)g(ImColor_ImColor_U32)g(ImColor_SetHSV)g(ImColor_HSV)g(ImDrawCmd_ImDrawCmd)g(ImDrawCmd_destroy)g(ImDrawCmd_GetTexID)g(ImDrawListSplitter_ImDrawListSplitter)g(ImDrawListSplitter_destroy)g(ImDrawListSplitter_Clear)g(ImDrawListSplitter_ClearFreeMemory)g(ImDrawListSplitter_Split)g(ImDrawListSplitter_Merge)g(ImDrawListSplitter_SetCurrentChannel)g(ImDrawList_ImDrawList)g(ImDrawList_destroy)g(ImDrawList_PushClipRect)g(ImDrawList_PushClipRectFullScreen)g(ImDrawList_PopClipRect)g(ImDrawList_PushTextureID)g(ImDrawList_PopTextureID)g(ImDrawList_GetClipRectMin)g(ImDrawList_GetClipRectMax)g(ImDrawList_AddLine)g(ImDrawList_AddRect)g(ImDrawList_AddRectFilled)g(ImDrawList_AddRectFilledMultiColor)g(ImDrawList_AddQuad)g(ImDrawList_AddQuadFilled)g(ImDrawList_AddTriangle)g(ImDrawList_AddTriangleFilled)g(ImDrawList_AddCircle)g(ImDrawList_AddCircleFilled)g(ImDrawList_AddNgon)g(ImDrawList_AddNgonFilled)g(ImDrawList_AddText_Vec2)g(ImDrawList_AddText_FontPtr)g(ImDrawList_AddPolyline)g(ImDrawList_AddConvexPolyFilled)g(ImDrawList_AddBezierCubic)g(ImDrawList_AddBezierQuadratic)g(ImDrawList_AddImage)g(ImDrawList_AddImageQuad)g(ImDrawList_AddImageRounded)g(ImDrawList_PathClear)g(ImDrawList_PathLineTo)g(ImDrawList_PathLineToMergeDuplicate)g(ImDrawList_PathFillConvex)g(ImDrawList_PathStroke)g(ImDrawList_PathArcTo)g(ImDrawList_PathArcToFast)g(ImDrawList_PathBezierCubicCurveTo)g(ImDrawList_PathBezierQuadraticCurveTo)g(ImDrawList_PathRect)g(ImDrawList_AddCallback)g(ImDrawList_AddDrawCmd)g(ImDrawList_CloneOutput)g(ImDrawList_ChannelsSplit)g(ImDrawList_ChannelsMerge)g(ImDrawList_ChannelsSetCurrent)g(ImDrawList_PrimReserve)g(ImDrawList_PrimUnreserve)g(ImDrawList_PrimRect)g(ImDrawList_PrimRectUV)g(ImDrawList_PrimQuadUV)g(ImDrawList_PrimWriteVtx)g(ImDrawList_PrimWriteIdx)g(ImDrawList_PrimVtx)g(ImDrawList__ResetForNewFrame)g(ImDrawList__ClearFreeMemory)g(ImDrawList__PopUnusedDrawCmd)g(ImDrawList__TryMergeDrawCmds)g(ImDrawList__OnChangedClipRect)g(ImDrawList__OnChangedTextureID)g(ImDrawList__OnChangedVtxOffset)g(ImDrawList__CalcCircleAutoSegmentCount)g(ImDrawList__PathArcToFastEx)g(ImDrawList__PathArcToN)g(ImDrawData_ImDrawData)g(ImDrawData_destroy)g(ImDrawData_Clear)g(ImDrawData_DeIndexAllBuffers)g(ImDrawData_ScaleClipRects)g(ImFontConfig_ImFontConfig)g(ImFontConfig_destroy)g(ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder)g(ImFontGlyphRangesBuilder_destroy)g(ImFontGlyphRangesBuilder_Clear)g(ImFontGlyphRangesBuilder_GetBit)g(ImFontGlyphRangesBuilder_SetBit)g(ImFontGlyphRangesBuilder_AddChar)g(ImFontGlyphRangesBuilder_AddText)g(ImFontGlyphRangesBuilder_AddRanges)g(ImFontGlyphRangesBuilder_BuildRanges)g(ImFontAtlasCustomRect_ImFontAtlasCustomRect)g(ImFontAtlasCustomRect_destroy)g(ImFontAtlasCustomRect_IsPacked)g(ImFontAtlas_ImFontAtlas)g(ImFontAtlas_destroy)g(ImFontAtlas_AddFont)g(ImFontAtlas_AddFontDefault)g(ImFontAtlas_AddFontFromFileTTF)g(ImFontAtlas_AddFontFromMemoryTTF)g(ImFontAtlas_AddFontFromMemoryCompressedTTF)g(ImFontAtlas_AddFontFromMemoryCompressedBase85TTF)g(ImFontAtlas_ClearInputData)g(ImFontAtlas_ClearTexData)g(ImFontAtlas_ClearFonts)g(ImFontAtlas_Clear)g(ImFontAtlas_Build)g(ImFontAtlas_GetTexDataAsAlpha8)g(ImFontAtlas_GetTexDataAsRGBA32)g(ImFontAtlas_IsBuilt)g(ImFontAtlas_SetTexID)g(ImFontAtlas_GetGlyphRangesDefault)g(ImFontAtlas_GetGlyphRangesGreek)g(ImFontAtlas_GetGlyphRangesKorean)g(ImFontAtlas_GetGlyphRangesJapanese)g(ImFontAtlas_GetGlyphRangesChineseFull)g(ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon)g(ImFontAtlas_GetGlyphRangesCyrillic)g(ImFontAtlas_GetGlyphRangesThai)g(ImFontAtlas_GetGlyphRangesVietnamese)g(ImFontAtlas_AddCustomRectRegular)g(ImFontAtlas_AddCustomRectFontGlyph)g(ImFontAtlas_GetCustomRectByIndex)g(ImFontAtlas_CalcCustomRectUV)g(ImFontAtlas_GetMouseCursorTexData)g(ImFont_ImFont)g(ImFont_destroy)g(ImFont_FindGlyph)g(ImFont_FindGlyphNoFallback)g(ImFont_GetCharAdvance)g(ImFont_IsLoaded)g(ImFont_GetDebugName)g(ImFont_CalcTextSizeA)g(ImFont_CalcWordWrapPositionA)g(ImFont_RenderChar)g(ImFont_RenderText)g(ImFont_BuildLookupTable)g(ImFont_ClearOutputData)g(ImFont_GrowIndex)g(ImFont_AddGlyph)g(ImFont_AddRemapChar)g(ImFont_SetGlyphVisible)g(ImFont_IsGlyphRangeUnused)g(ImGuiViewport_ImGuiViewport)g(ImGuiViewport_destroy)g(ImGuiViewport_GetCenter)g(ImGuiViewport_GetWorkCenter)g(ImGuiPlatformIO_ImGuiPlatformIO)g(ImGuiPlatformIO_destroy)g(ImGuiPlatformMonitor_ImGuiPlatformMonitor)g(ImGuiPlatformMonitor_destroy)g(ImGuiPlatformImeData_ImGuiPlatformImeData)g(ImGuiPlatformImeData_destroy)g(igGetKeyIndex)g(igImHashData)g(igImHashStr)g(igImQsort)g(igImAlphaBlendColors)g(igImIsPowerOfTwo_Int)g(igImIsPowerOfTwo_U64)g(igImUpperPowerOfTwo)g(igImStricmp)g(igImStrnicmp)g(igImStrncpy)g(igImStrdup)g(igImStrdupcpy)g(igImStrchrRange)g(igImStrlenW)g(igImStreolRange)g(igImStrbolW)g(igImStristr)g(igImStrTrimBlanks)g(igImStrSkipBlank)g(igImToUpper)g(igImCharIsBlankA)g(igImCharIsBlankW)g(igImFormatString)g(igImFormatStringV)g(igImFormatStringToTempBuffer)g(igImFormatStringToTempBufferV)g(igImParseFormatFindStart)g(igImParseFormatFindEnd)g(igImParseFormatTrimDecorations)g(igImParseFormatSanitizeForPrinting)g(igImParseFormatSanitizeForScanning)g(igImParseFormatPrecision)g(igImTextCharToUtf8)g(igImTextStrToUtf8)g(igImTextCharFromUtf8)g(igImTextStrFromUtf8)g(igImTextCountCharsFromUtf8)g(igImTextCountUtf8BytesFromChar)g(igImTextCountUtf8BytesFromStr)g(igImFileOpen)g(igImFileClose)g(igImFileGetSize)g(igImFileRead)g(igImFileWrite)g(igImFileLoadToMemory)g(igImPow_Float)g(igImPow_double)g(igImLog_Float)g(igImLog_double)g(igImAbs_Int)g(igImAbs_Float)g(igImAbs_double)g(igImSign_Float)g(igImSign_double)g(igImRsqrt_Float)g(igImRsqrt_double)g(igImMin)g(igImMax)g(igImClamp)g(igImLerp_Vec2Float)g(igImLerp_Vec2Vec2)g(igImLerp_Vec4)g(igImSaturate)g(igImLengthSqr_Vec2)g(igImLengthSqr_Vec4)g(igImInvLength)g(igImFloor_Float)g(igImFloorSigned_Float)g(igImFloor_Vec2)g(igImFloorSigned_Vec2)g(igImModPositive)g(igImDot)g(igImRotate)g(igImLinearSweep)g(igImMul)g(igImIsFloatAboveGuaranteedIntegerPrecision)g(igImBezierCubicCalc)g(igImBezierCubicClosestPoint)g(igImBezierCubicClosestPointCasteljau)g(igImBezierQuadraticCalc)g(igImLineClosestPoint)g(igImTriangleContainsPoint)g(igImTriangleClosestPoint)g(igImTriangleBarycentricCoords)g(igImTriangleArea)g(igImGetDirQuadrantFromDelta)g(ImRect_ImRect_Nil)g(ImRect_destroy)g(ImRect_ImRect_Vec2)g(ImRect_ImRect_Vec4)g(ImRect_ImRect_Float)g(ImRect_GetCenter)g(ImRect_GetSize)g(ImRect_GetWidth)g(ImRect_GetHeight)g(ImRect_GetArea)g(ImRect_GetTL)g(ImRect_GetTR)g(ImRect_GetBL)g(ImRect_GetBR)g(ImRect_Contains_Vec2)g(ImRect_Contains_Rect)g(ImRect_Overlaps)g(ImRect_Add_Vec2)g(ImRect_Add_Rect)g(ImRect_Expand_Float)g(ImRect_Expand_Vec2)g(ImRect_Translate)g(ImRect_TranslateX)g(ImRect_TranslateY)g(ImRect_ClipWith)g(ImRect_ClipWithFull)g(ImRect_Floor)g(ImRect_IsInverted)g(ImRect_ToVec4)g(igImBitArrayTestBit)g(igImBitArrayClearBit)g(igImBitArraySetBit)g(igImBitArraySetBitRange)g(ImGuiTextIndex_clear)g(ImGuiTextIndex_size)g(ImGuiTextIndex_get_line_begin)g(ImGuiTextIndex_get_line_end)g(ImGuiTextIndex_append)g(ImDrawListSharedData_ImDrawListSharedData)g(ImDrawListSharedData_destroy)g(ImDrawListSharedData_SetCircleTessellationMaxError)g(ImDrawDataBuilder_Clear)g(ImDrawDataBuilder_ClearFreeMemory)g(ImDrawDataBuilder_GetDrawListCount)g(ImDrawDataBuilder_FlattenIntoSingleLayer)g(ImGuiStyleMod_ImGuiStyleMod_Int)g(ImGuiStyleMod_destroy)g(ImGuiStyleMod_ImGuiStyleMod_Float)g(ImGuiStyleMod_ImGuiStyleMod_Vec2)g(ImGuiComboPreviewData_ImGuiComboPreviewData)g(ImGuiComboPreviewData_destroy)g(ImGuiMenuColumns_ImGuiMenuColumns)g(ImGuiMenuColumns_destroy)g(ImGuiMenuColumns_Update)g(ImGuiMenuColumns_DeclColumns)g(ImGuiMenuColumns_CalcNextTotalWidth)g(ImGuiInputTextState_ImGuiInputTextState)g(ImGuiInputTextState_destroy)g(ImGuiInputTextState_ClearText)g(ImGuiInputTextState_ClearFreeMemory)g(ImGuiInputTextState_GetUndoAvailCount)g(ImGuiInputTextState_GetRedoAvailCount)g(ImGuiInputTextState_OnKeyPressed)g(ImGuiInputTextState_CursorAnimReset)g(ImGuiInputTextState_CursorClamp)g(ImGuiInputTextState_HasSelection)g(ImGuiInputTextState_ClearSelection)g(ImGuiInputTextState_GetCursorPos)g(ImGuiInputTextState_GetSelectionStart)g(ImGuiInputTextState_GetSelectionEnd)g(ImGuiInputTextState_SelectAll)g(ImGuiPopupData_ImGuiPopupData)g(ImGuiPopupData_destroy)g(ImGuiNextWindowData_ImGuiNextWindowData)g(ImGuiNextWindowData_destroy)g(ImGuiNextWindowData_ClearFlags)g(ImGuiNextItemData_ImGuiNextItemData)g(ImGuiNextItemData_destroy)g(ImGuiNextItemData_ClearFlags)g(ImGuiLastItemData_ImGuiLastItemData)g(ImGuiLastItemData_destroy)g(ImGuiStackSizes_ImGuiStackSizes)g(ImGuiStackSizes_destroy)g(ImGuiStackSizes_SetToCurrentState)g(ImGuiStackSizes_CompareWithCurrentState)g(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr)g(ImGuiPtrOrIndex_destroy)g(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int)g(ImGuiInputEvent_ImGuiInputEvent)g(ImGuiInputEvent_destroy)g(ImGuiKeyRoutingData_ImGuiKeyRoutingData)g(ImGuiKeyRoutingData_destroy)g(ImGuiKeyRoutingTable_ImGuiKeyRoutingTable)g(ImGuiKeyRoutingTable_destroy)g(ImGuiKeyRoutingTable_Clear)g(ImGuiKeyOwnerData_ImGuiKeyOwnerData)g(ImGuiKeyOwnerData_destroy)g(ImGuiListClipperRange_FromIndices)g(ImGuiListClipperRange_FromPositions)g(ImGuiListClipperData_ImGuiListClipperData)g(ImGuiListClipperData_destroy)g(ImGuiListClipperData_Reset)g(ImGuiNavItemData_ImGuiNavItemData)g(ImGuiNavItemData_destroy)g(ImGuiNavItemData_Clear)g(ImGuiOldColumnData_ImGuiOldColumnData)g(ImGuiOldColumnData_destroy)g(ImGuiOldColumns_ImGuiOldColumns)g(ImGuiOldColumns_destroy)g(ImGuiDockNode_ImGuiDockNode)g(ImGuiDockNode_destroy)g(ImGuiDockNode_IsRootNode)g(ImGuiDockNode_IsDockSpace)g(ImGuiDockNode_IsFloatingNode)g(ImGuiDockNode_IsCentralNode)g(ImGuiDockNode_IsHiddenTabBar)g(ImGuiDockNode_IsNoTabBar)g(ImGuiDockNode_IsSplitNode)g(ImGuiDockNode_IsLeafNode)g(ImGuiDockNode_IsEmpty)g(ImGuiDockNode_Rect)g(ImGuiDockNode_SetLocalFlags)g(ImGuiDockNode_UpdateMergedFlags)g(ImGuiDockContext_ImGuiDockContext)g(ImGuiDockContext_destroy)g(ImGuiViewportP_ImGuiViewportP)g(ImGuiViewportP_destroy)g(ImGuiViewportP_ClearRequestFlags)g(ImGuiViewportP_CalcWorkRectPos)g(ImGuiViewportP_CalcWorkRectSize)g(ImGuiViewportP_UpdateWorkRect)g(ImGuiViewportP_GetMainRect)g(ImGuiViewportP_GetWorkRect)g(ImGuiViewportP_GetBuildWorkRect)g(ImGuiWindowSettings_ImGuiWindowSettings)g(ImGuiWindowSettings_destroy)g(ImGuiWindowSettings_GetName)g(ImGuiSettingsHandler_ImGuiSettingsHandler)g(ImGuiSettingsHandler_destroy)g(ImGuiMetricsConfig_ImGuiMetricsConfig)g(ImGuiMetricsConfig_destroy)g(ImGuiStackLevelInfo_ImGuiStackLevelInfo)g(ImGuiStackLevelInfo_destroy)g(ImGuiStackTool_ImGuiStackTool)g(ImGuiStackTool_destroy)g(ImGuiContextHook_ImGuiContextHook)g(ImGuiContextHook_destroy)g(ImGuiContext_ImGuiContext)g(ImGuiContext_destroy)g(ImGuiWindow_ImGuiWindow)g(ImGuiWindow_destroy)g(ImGuiWindow_GetID_Str)g(ImGuiWindow_GetID_Ptr)g(ImGuiWindow_GetID_Int)g(ImGuiWindow_GetIDFromRectangle)g(ImGuiWindow_Rect)g(ImGuiWindow_CalcFontSize)g(ImGuiWindow_TitleBarHeight)g(ImGuiWindow_TitleBarRect)g(ImGuiWindow_MenuBarHeight)g(ImGuiWindow_MenuBarRect)g(ImGuiTabItem_ImGuiTabItem)g(ImGuiTabItem_destroy)g(ImGuiTabBar_ImGuiTabBar)g(ImGuiTabBar_destroy)g(ImGuiTabBar_GetTabOrder)g(ImGuiTabBar_GetTabName)g(ImGuiTableColumn_ImGuiTableColumn)g(ImGuiTableColumn_destroy)g(ImGuiTableInstanceData_ImGuiTableInstanceData)g(ImGuiTableInstanceData_destroy)g(ImGuiTable_ImGuiTable)g(ImGuiTable_destroy)g(ImGuiTableTempData_ImGuiTableTempData)g(ImGuiTableTempData_destroy)g(ImGuiTableColumnSettings_ImGuiTableColumnSettings)g(ImGuiTableColumnSettings_destroy)g(ImGuiTableSettings_ImGuiTableSettings)g(ImGuiTableSettings_destroy)g(ImGuiTableSettings_GetColumnSettings)g(igGetCurrentWindowRead)g(igGetCurrentWindow)g(igFindWindowByID)g(igFindWindowByName)g(igUpdateWindowParentAndRootLinks)g(igCalcWindowNextAutoFitSize)g(igIsWindowChildOf)g(igIsWindowWithinBeginStackOf)g(igIsWindowAbove)g(igIsWindowNavFocusable)g(igSetWindowPos_WindowPtr)g(igSetWindowSize_WindowPtr)g(igSetWindowCollapsed_WindowPtr)g(igSetWindowHitTestHole)g(igWindowRectAbsToRel)g(igWindowRectRelToAbs)g(igFocusWindow)g(igFocusTopMostWindowUnderOne)g(igBringWindowToFocusFront)g(igBringWindowToDisplayFront)g(igBringWindowToDisplayBack)g(igBringWindowToDisplayBehind)g(igFindWindowDisplayIndex)g(igFindBottomMostVisibleWindowWithinBeginStack)g(igSetCurrentFont)g(igGetDefaultFont)g(igGetForegroundDrawList_WindowPtr)g(igInitialize)g(igShutdown)g(igUpdateInputEvents)g(igUpdateHoveredWindowAndCaptureFlags)g(igStartMouseMovingWindow)g(igStartMouseMovingWindowOrNode)g(igUpdateMouseMovingWindowNewFrame)g(igUpdateMouseMovingWindowEndFrame)g(igAddContextHook)g(igRemoveContextHook)g(igCallContextHooks)g(igTranslateWindowsInViewport)g(igScaleWindowsInViewport)g(igDestroyPlatformWindow)g(igSetWindowViewport)g(igSetCurrentViewport)g(igGetViewportPlatformMonitor)g(igFindHoveredViewportFromPlatformWindowStack)g(igMarkIniSettingsDirty_Nil)g(igMarkIniSettingsDirty_WindowPtr)g(igClearIniSettings)g(igCreateNewWindowSettings)g(igFindWindowSettings)g(igFindOrCreateWindowSettings)g(igAddSettingsHandler)g(igRemoveSettingsHandler)g(igFindSettingsHandler)g(igSetScrollX_WindowPtr)g(igSetScrollY_WindowPtr)g(igSetScrollFromPosX_WindowPtr)g(igSetScrollFromPosY_WindowPtr)g(igScrollToItem)g(igScrollToRect)g(igScrollToRectEx)g(igScrollToBringRectIntoView)g(igGetItemID)g(igGetItemStatusFlags)g(igGetItemFlags)g(igGetActiveID)g(igGetFocusID)g(igSetActiveID)g(igSetFocusID)g(igClearActiveID)g(igGetHoveredID)g(igSetHoveredID)g(igKeepAliveID)g(igMarkItemEdited)g(igPushOverrideID)g(igGetIDWithSeed)g(igItemSize_Vec2)g(igItemSize_Rect)g(igItemAdd)g(igItemHoverable)g(igIsClippedEx)g(igSetLastItemData)g(igCalcItemSize)g(igCalcWrapWidthForPos)g(igPushMultiItemsWidths)g(igIsItemToggledSelection)g(igGetContentRegionMaxAbs)g(igShrinkWidths)g(igPushItemFlag)g(igPopItemFlag)g(igLogBegin)g(igLogToBuffer)g(igLogRenderedText)g(igLogSetNextTextDecoration)g(igBeginChildEx)g(igOpenPopupEx)g(igClosePopupToLevel)g(igClosePopupsOverWindow)g(igClosePopupsExceptModals)g(igIsPopupOpen_ID)g(igBeginPopupEx)g(igBeginTooltipEx)g(igGetPopupAllowedExtentRect)g(igGetTopMostPopupModal)g(igGetTopMostAndVisiblePopupModal)g(igFindBestWindowPosForPopup)g(igFindBestWindowPosForPopupEx)g(igBeginViewportSideBar)g(igBeginMenuEx)g(igMenuItemEx)g(igBeginComboPopup)g(igBeginComboPreview)g(igEndComboPreview)g(igNavInitWindow)g(igNavInitRequestApplyResult)g(igNavMoveRequestButNoResultYet)g(igNavMoveRequestSubmit)g(igNavMoveRequestForward)g(igNavMoveRequestResolveWithLastItem)g(igNavMoveRequestCancel)g(igNavMoveRequestApplyResult)g(igNavMoveRequestTryWrapping)g(igActivateItem)g(igSetNavWindow)g(igSetNavID)g(igIsNamedKey)g(igIsNamedKeyOrModKey)g(igIsLegacyKey)g(igIsGamepadKey)g(igIsAliasKey)g(igConvertSingleModFlagToKey)g(igGetKeyData)g(igGetKeyChordName)g(igMouseButtonToKey)g(igIsMouseDragPastThreshold)g(igGetKeyVector2d)g(igGetNavTweakPressedAmount)g(igCalcTypematicRepeatAmount)g(igGetTypematicRepeatRate)g(igSetActiveIdUsingAllKeyboardKeys)g(igIsActiveIdUsingNavDir)g(igGetKeyOwner)g(igSetKeyOwner)g(igSetItemKeyOwner)g(igTestKeyOwner)g(igGetKeyOwnerData)g(igIsKeyDown_ID)g(igIsKeyPressed_ID)g(igIsKeyReleased_ID)g(igIsMouseDown_ID)g(igIsMouseClicked_ID)g(igIsMouseReleased_ID)g(igShortcut)g(igSetShortcutRouting)g(igTestShortcutRouting)g(igGetShortcutRoutingData)g(igDockContextInitialize)g(igDockContextShutdown)g(igDockContextClearNodes)g(igDockContextRebuildNodes)g(igDockContextNewFrameUpdateUndocking)g(igDockContextNewFrameUpdateDocking)g(igDockContextEndFrame)g(igDockContextGenNodeID)g(igDockContextQueueDock)g(igDockContextQueueUndockWindow)g(igDockContextQueueUndockNode)g(igDockContextCalcDropPosForDocking)g(igDockContextFindNodeByID)g(igDockNodeBeginAmendTabBar)g(igDockNodeEndAmendTabBar)g(igDockNodeGetRootNode)g(igDockNodeIsInHierarchyOf)g(igDockNodeGetDepth)g(igDockNodeGetWindowMenuButtonId)g(igGetWindowDockNode)g(igGetWindowAlwaysWantOwnTabBar)g(igBeginDocked)g(igBeginDockableDragDropSource)g(igBeginDockableDragDropTarget)g(igSetWindowDock)g(igDockBuilderDockWindow)g(igDockBuilderGetNode)g(igDockBuilderGetCentralNode)g(igDockBuilderAddNode)g(igDockBuilderRemoveNode)g(igDockBuilderRemoveNodeDockedWindows)g(igDockBuilderRemoveNodeChildNodes)g(igDockBuilderSetNodePos)g(igDockBuilderSetNodeSize)g(igDockBuilderSplitNode)g(igDockBuilderCopyDockSpace)g(igDockBuilderCopyNode)g(igDockBuilderCopyWindowSettings)g(igDockBuilderFinish)g(igPushFocusScope)g(igPopFocusScope)g(igGetCurrentFocusScope)g(igIsDragDropActive)g(igBeginDragDropTargetCustom)g(igClearDragDrop)g(igIsDragDropPayloadBeingAccepted)g(igRenderDragDropTargetRect)g(igSetWindowClipRectBeforeSetChannel)g(igBeginColumns)g(igEndColumns)g(igPushColumnClipRect)g(igPushColumnsBackground)g(igPopColumnsBackground)g(igGetColumnsID)g(igFindOrCreateColumns)g(igGetColumnOffsetFromNorm)g(igGetColumnNormFromOffset)g(igTableOpenContextMenu)g(igTableSetColumnWidth)g(igTableSetColumnSortDirection)g(igTableGetHoveredColumn)g(igTableGetHeaderRowHeight)g(igTablePushBackgroundChannel)g(igTablePopBackgroundChannel)g(igGetCurrentTable)g(igTableFindByID)g(igBeginTableEx)g(igTableBeginInitMemory)g(igTableBeginApplyRequests)g(igTableSetupDrawChannels)g(igTableUpdateLayout)g(igTableUpdateBorders)g(igTableUpdateColumnsWeightFromWidth)g(igTableDrawBorders)g(igTableDrawContextMenu)g(igTableBeginContextMenuPopup)g(igTableMergeDrawChannels)g(igTableGetInstanceData)g(igTableSortSpecsSanitize)g(igTableSortSpecsBuild)g(igTableGetColumnNextSortDirection)g(igTableFixColumnSortDirection)g(igTableGetColumnWidthAuto)g(igTableBeginRow)g(igTableEndRow)g(igTableBeginCell)g(igTableEndCell)g(igTableGetCellBgRect)g(igTableGetColumnName_TablePtr)g(igTableGetColumnResizeID)g(igTableGetMaxColumnWidth)g(igTableSetColumnWidthAutoSingle)g(igTableSetColumnWidthAutoAll)g(igTableRemove)g(igTableGcCompactTransientBuffers_TablePtr)g(igTableGcCompactTransientBuffers_TableTempDataPtr)g(igTableGcCompactSettings)g(igTableLoadSettings)g(igTableSaveSettings)g(igTableResetSettings)g(igTableGetBoundSettings)g(igTableSettingsAddSettingsHandler)g(igTableSettingsCreate)g(igTableSettingsFindByID)g(igBeginTabBarEx)g(igTabBarFindTabByID)g(igTabBarFindMostRecentlySelectedTabForActiveWindow)g(igTabBarAddTab)g(igTabBarRemoveTab)g(igTabBarCloseTab)g(igTabBarQueueReorder)g(igTabBarQueueReorderFromMousePos)g(igTabBarProcessReorder)g(igTabItemEx)g(igTabItemCalcSize_Str)g(igTabItemCalcSize_WindowPtr)g(igTabItemBackground)g(igTabItemLabelAndCloseButton)g(igRenderText)g(igRenderTextWrapped)g(igRenderTextClipped)g(igRenderTextClippedEx)g(igRenderTextEllipsis)g(igRenderFrame)g(igRenderFrameBorder)g(igRenderColorRectWithAlphaCheckerboard)g(igRenderNavHighlight)g(igFindRenderedTextEnd)g(igRenderMouseCursor)g(igRenderArrow)g(igRenderBullet)g(igRenderCheckMark)g(igRenderArrowPointingAt)g(igRenderArrowDockMenu)g(igRenderRectFilledRangeH)g(igRenderRectFilledWithHole)g(igCalcRoundingFlagsForRectInRect)g(igTextEx)g(igButtonEx)g(igCloseButton)g(igCollapseButton)g(igArrowButtonEx)g(igScrollbar)g(igScrollbarEx)g(igImageButtonEx)g(igGetWindowScrollbarRect)g(igGetWindowScrollbarID)g(igGetWindowResizeCornerID)g(igGetWindowResizeBorderID)g(igSeparatorEx)g(igCheckboxFlags_S64Ptr)g(igCheckboxFlags_U64Ptr)g(igButtonBehavior)g(igDragBehavior)g(igSliderBehavior)g(igSplitterBehavior)g(igTreeNodeBehavior)g(igTreePushOverrideID)g(igTreeNodeSetOpen)g(igTreeNodeUpdateNextOpen)g(igDataTypeGetInfo)g(igDataTypeFormatString)g(igDataTypeApplyOp)g(igDataTypeApplyFromText)g(igDataTypeCompare)g(igDataTypeClamp)g(igInputTextEx)g(igTempInputText)g(igTempInputScalar)g(igTempInputIsActive)g(igGetInputTextState)g(igColorTooltip)g(igColorEditOptionsPopup)g(igColorPickerOptionsPopup)g(igPlotEx)g(igShadeVertsLinearColorGradientKeepAlpha)g(igShadeVertsLinearUV)g(igGcCompactTransientMiscBuffers)g(igGcCompactTransientWindowBuffers)g(igGcAwakeTransientWindowBuffers)g(igDebugLog)g(igDebugLogV)g(igErrorCheckEndFrameRecover)g(igErrorCheckEndWindowRecover)g(igErrorCheckUsingSetCursorPosToExtendParentBoundaries)g(igDebugLocateItem)g(igDebugLocateItemOnHover)g(igDebugLocateItemResolveWithLastItem)g(igDebugDrawItemRect)g(igDebugStartItemPicker)g(igShowFontAtlas)g(igDebugHookIdInfo)g(igDebugNodeColumns)g(igDebugNodeDockNode)g(igDebugNodeDrawList)g(igDebugNodeDrawCmdShowMeshAndBoundingBox)g(igDebugNodeFont)g(igDebugNodeFontGlyph)g(igDebugNodeStorage)g(igDebugNodeTabBar)g(igDebugNodeTable)g(igDebugNodeTableSettings)g(igDebugNodeInputTextState)g(igDebugNodeWindow)g(igDebugNodeWindowSettings)g(igDebugNodeWindowsList)g(igDebugNodeWindowsListByBeginStackParent)g(igDebugNodeViewport)g(igDebugRenderViewportThumbnail)g(igIsKeyPressedMap)g(igImFontAtlasGetBuilderForStbTruetype)g(igImFontAtlasBuildInit)g(igImFontAtlasBuildSetupFont)g(igImFontAtlasBuildPackCustomRects)g(igImFontAtlasBuildFinish)g(igImFontAtlasBuildRender8bppRectFromString)g(igImFontAtlasBuildRender32bppRectFromString)g(igImFontAtlasBuildMultiplyCalcLookupTable)g(igImFontAtlasBuildMultiplyRectAlpha8)g(igLogText)g(ImGuiTextBuffer_appendf)g(igGET_FLT_MAX)g(igGET_FLT_MIN)return 0;}
#endif
#ifdef TCC_ADD_SYMBOL
typedef struct TCCState TCCState;
typedef int (*fptr_tcc_add_symbol)(TCCState *s, const char *name, const void *val);
extern fptr_tcc_add_symbol tcc_add_symbol;
void cimgui_add_sbl(TCCState* s){
s(igCreateContext)s(igDestroyContext)s(igGetCurrentContext)s(igSetCurrentContext)s(igGetIO)s(igGetStyle)s(igNewFrame)s(igEndFrame)s(igRender)s(igGetDrawData)s(igShowDemoWindow)s(igShowMetricsWindow)s(igShowDebugLogWindow)s(igShowStackToolWindow)s(igShowAboutWindow)s(igShowStyleEditor)s(igShowStyleSelector)s(igShowFontSelector)s(igShowUserGuide)s(igGetVersion)s(igStyleColorsDark)s(igStyleColorsLight)s(igStyleColorsClassic)s(igBegin)s(igEnd)s(igBeginChild_Str)s(igBeginChild_ID)s(igEndChild)s(igIsWindowAppearing)s(igIsWindowCollapsed)s(igIsWindowFocused)s(igIsWindowHovered)s(igGetWindowDrawList)s(igGetWindowDpiScale)s(igGetWindowPos)s(igGetWindowSize)s(igGetWindowWidth)s(igGetWindowHeight)s(igGetWindowViewport)s(igSetNextWindowPos)s(igSetNextWindowSize)s(igSetNextWindowSizeConstraints)s(igSetNextWindowContentSize)s(igSetNextWindowCollapsed)s(igSetNextWindowFocus)s(igSetNextWindowScroll)s(igSetNextWindowBgAlpha)s(igSetNextWindowViewport)s(igSetWindowPos_Vec2)s(igSetWindowSize_Vec2)s(igSetWindowCollapsed_Bool)s(igSetWindowFocus_Nil)s(igSetWindowFontScale)s(igSetWindowPos_Str)s(igSetWindowSize_Str)s(igSetWindowCollapsed_Str)s(igSetWindowFocus_Str)s(igGetContentRegionAvail)s(igGetContentRegionMax)s(igGetWindowContentRegionMin)s(igGetWindowContentRegionMax)s(igGetScrollX)s(igGetScrollY)s(igSetScrollX_Float)s(igSetScrollY_Float)s(igGetScrollMaxX)s(igGetScrollMaxY)s(igSetScrollHereX)s(igSetScrollHereY)s(igSetScrollFromPosX_Float)s(igSetScrollFromPosY_Float)s(igPushFont)s(igPopFont)s(igPushStyleColor_U32)s(igPushStyleColor_Vec4)s(igPopStyleColor)s(igPushStyleVar_Float)s(igPushStyleVar_Vec2)s(igPopStyleVar)s(igPushAllowKeyboardFocus)s(igPopAllowKeyboardFocus)s(igPushButtonRepeat)s(igPopButtonRepeat)s(igPushItemWidth)s(igPopItemWidth)s(igSetNextItemWidth)s(igCalcItemWidth)s(igPushTextWrapPos)s(igPopTextWrapPos)s(igGetFont)s(igGetFontSize)s(igGetFontTexUvWhitePixel)s(igGetColorU32_Col)s(igGetColorU32_Vec4)s(igGetColorU32_U32)s(igGetStyleColorVec4)s(igSeparator)s(igSameLine)s(igNewLine)s(igSpacing)s(igDummy)s(igIndent)s(igUnindent)s(igBeginGroup)s(igEndGroup)s(igGetCursorPos)s(igGetCursorPosX)s(igGetCursorPosY)s(igSetCursorPos)s(igSetCursorPosX)s(igSetCursorPosY)s(igGetCursorStartPos)s(igGetCursorScreenPos)s(igSetCursorScreenPos)s(igAlignTextToFramePadding)s(igGetTextLineHeight)s(igGetTextLineHeightWithSpacing)s(igGetFrameHeight)s(igGetFrameHeightWithSpacing)s(igPushID_Str)s(igPushID_StrStr)s(igPushID_Ptr)s(igPushID_Int)s(igPopID)s(igGetID_Str)s(igGetID_StrStr)s(igGetID_Ptr)s(igTextUnformatted)s(igText)s(igTextV)s(igTextColored)s(igTextColoredV)s(igTextDisabled)s(igTextDisabledV)s(igTextWrapped)s(igTextWrappedV)s(igLabelText)s(igLabelTextV)s(igBulletText)s(igBulletTextV)s(igButton)s(igSmallButton)s(igInvisibleButton)s(igArrowButton)s(igCheckbox)s(igCheckboxFlags_IntPtr)s(igCheckboxFlags_UintPtr)s(igRadioButton_Bool)s(igRadioButton_IntPtr)s(igProgressBar)s(igBullet)s(igImage)s(igImageButton)s(igBeginCombo)s(igEndCombo)s(igCombo_Str_arr)s(igCombo_Str)s(igCombo_FnBoolPtr)s(igDragFloat)s(igDragFloat2)s(igDragFloat3)s(igDragFloat4)s(igDragFloatRange2)s(igDragInt)s(igDragInt2)s(igDragInt3)s(igDragInt4)s(igDragIntRange2)s(igDragScalar)s(igDragScalarN)s(igSliderFloat)s(igSliderFloat2)s(igSliderFloat3)s(igSliderFloat4)s(igSliderAngle)s(igSliderInt)s(igSliderInt2)s(igSliderInt3)s(igSliderInt4)s(igSliderScalar)s(igSliderScalarN)s(igVSliderFloat)s(igVSliderInt)s(igVSliderScalar)s(igInputText)s(igInputTextMultiline)s(igInputTextWithHint)s(igInputFloat)s(igInputFloat2)s(igInputFloat3)s(igInputFloat4)s(igInputInt)s(igInputInt2)s(igInputInt3)s(igInputInt4)s(igInputDouble)s(igInputScalar)s(igInputScalarN)s(igColorEdit3)s(igColorEdit4)s(igColorPicker3)s(igColorPicker4)s(igColorButton)s(igSetColorEditOptions)s(igTreeNode_Str)s(igTreeNode_StrStr)s(igTreeNode_Ptr)s(igTreeNodeV_Str)s(igTreeNodeV_Ptr)s(igTreeNodeEx_Str)s(igTreeNodeEx_StrStr)s(igTreeNodeEx_Ptr)s(igTreeNodeExV_Str)s(igTreeNodeExV_Ptr)s(igTreePush_Str)s(igTreePush_Ptr)s(igTreePop)s(igGetTreeNodeToLabelSpacing)s(igCollapsingHeader_TreeNodeFlags)s(igCollapsingHeader_BoolPtr)s(igSetNextItemOpen)s(igSelectable_Bool)s(igSelectable_BoolPtr)s(igBeginListBox)s(igEndListBox)s(igListBox_Str_arr)s(igListBox_FnBoolPtr)s(igPlotLines_FloatPtr)s(igPlotLines_FnFloatPtr)s(igPlotHistogram_FloatPtr)s(igPlotHistogram_FnFloatPtr)s(igValue_Bool)s(igValue_Int)s(igValue_Uint)s(igValue_Float)s(igBeginMenuBar)s(igEndMenuBar)s(igBeginMainMenuBar)s(igEndMainMenuBar)s(igBeginMenu)s(igEndMenu)s(igMenuItem_Bool)s(igMenuItem_BoolPtr)s(igBeginTooltip)s(igEndTooltip)s(igSetTooltip)s(igSetTooltipV)s(igBeginPopup)s(igBeginPopupModal)s(igEndPopup)s(igOpenPopup_Str)s(igOpenPopup_ID)s(igOpenPopupOnItemClick)s(igCloseCurrentPopup)s(igBeginPopupContextItem)s(igBeginPopupContextWindow)s(igBeginPopupContextVoid)s(igIsPopupOpen_Str)s(igBeginTable)s(igEndTable)s(igTableNextRow)s(igTableNextColumn)s(igTableSetColumnIndex)s(igTableSetupColumn)s(igTableSetupScrollFreeze)s(igTableHeadersRow)s(igTableHeader)s(igTableGetSortSpecs)s(igTableGetColumnCount)s(igTableGetColumnIndex)s(igTableGetRowIndex)s(igTableGetColumnName_Int)s(igTableGetColumnFlags)s(igTableSetColumnEnabled)s(igTableSetBgColor)s(igColumns)s(igNextColumn)s(igGetColumnIndex)s(igGetColumnWidth)s(igSetColumnWidth)s(igGetColumnOffset)s(igSetColumnOffset)s(igGetColumnsCount)s(igBeginTabBar)s(igEndTabBar)s(igBeginTabItem)s(igEndTabItem)s(igTabItemButton)s(igSetTabItemClosed)s(igDockSpace)s(igDockSpaceOverViewport)s(igSetNextWindowDockID)s(igSetNextWindowClass)s(igGetWindowDockID)s(igIsWindowDocked)s(igLogToTTY)s(igLogToFile)s(igLogToClipboard)s(igLogFinish)s(igLogButtons)s(igLogTextV)s(igBeginDragDropSource)s(igSetDragDropPayload)s(igEndDragDropSource)s(igBeginDragDropTarget)s(igAcceptDragDropPayload)s(igEndDragDropTarget)s(igGetDragDropPayload)s(igBeginDisabled)s(igEndDisabled)s(igPushClipRect)s(igPopClipRect)s(igSetItemDefaultFocus)s(igSetKeyboardFocusHere)s(igIsItemHovered)s(igIsItemActive)s(igIsItemFocused)s(igIsItemClicked)s(igIsItemVisible)s(igIsItemEdited)s(igIsItemActivated)s(igIsItemDeactivated)s(igIsItemDeactivatedAfterEdit)s(igIsItemToggledOpen)s(igIsAnyItemHovered)s(igIsAnyItemActive)s(igIsAnyItemFocused)s(igGetItemRectMin)s(igGetItemRectMax)s(igGetItemRectSize)s(igSetItemAllowOverlap)s(igGetMainViewport)s(igGetBackgroundDrawList_Nil)s(igGetForegroundDrawList_Nil)s(igGetBackgroundDrawList_ViewportPtr)s(igGetForegroundDrawList_ViewportPtr)s(igIsRectVisible_Nil)s(igIsRectVisible_Vec2)s(igGetTime)s(igGetFrameCount)s(igGetDrawListSharedData)s(igGetStyleColorName)s(igSetStateStorage)s(igGetStateStorage)s(igBeginChildFrame)s(igEndChildFrame)s(igCalcTextSize)s(igColorConvertU32ToFloat4)s(igColorConvertFloat4ToU32)s(igColorConvertRGBtoHSV)s(igColorConvertHSVtoRGB)s(igIsKeyDown_Nil)s(igIsKeyPressed_Bool)s(igIsKeyReleased_Nil)s(igGetKeyPressedAmount)s(igGetKeyName)s(igSetNextFrameWantCaptureKeyboard)s(igIsMouseDown_Nil)s(igIsMouseClicked_Bool)s(igIsMouseReleased_Nil)s(igIsMouseDoubleClicked)s(igGetMouseClickedCount)s(igIsMouseHoveringRect)s(igIsMousePosValid)s(igIsAnyMouseDown)s(igGetMousePos)s(igGetMousePosOnOpeningCurrentPopup)s(igIsMouseDragging)s(igGetMouseDragDelta)s(igResetMouseDragDelta)s(igGetMouseCursor)s(igSetMouseCursor)s(igSetNextFrameWantCaptureMouse)s(igGetClipboardText)s(igSetClipboardText)s(igLoadIniSettingsFromDisk)s(igLoadIniSettingsFromMemory)s(igSaveIniSettingsToDisk)s(igSaveIniSettingsToMemory)s(igDebugTextEncoding)s(igDebugCheckVersionAndDataLayout)s(igSetAllocatorFunctions)s(igGetAllocatorFunctions)s(igMemAlloc)s(igMemFree)s(igGetPlatformIO)s(igUpdatePlatformWindows)s(igRenderPlatformWindowsDefault)s(igDestroyPlatformWindows)s(igFindViewportByID)s(igFindViewportByPlatformHandle)s(ImGuiStyle_ImGuiStyle)s(ImGuiStyle_destroy)s(ImGuiStyle_ScaleAllSizes)s(ImGuiIO_AddKeyEvent)s(ImGuiIO_AddKeyAnalogEvent)s(ImGuiIO_AddMousePosEvent)s(ImGuiIO_AddMouseButtonEvent)s(ImGuiIO_AddMouseWheelEvent)s(ImGuiIO_AddMouseViewportEvent)s(ImGuiIO_AddFocusEvent)s(ImGuiIO_AddInputCharacter)s(ImGuiIO_AddInputCharacterUTF16)s(ImGuiIO_AddInputCharactersUTF8)s(ImGuiIO_SetKeyEventNativeData)s(ImGuiIO_SetAppAcceptingEvents)s(ImGuiIO_ClearInputCharacters)s(ImGuiIO_ClearInputKeys)s(ImGuiIO_ImGuiIO)s(ImGuiIO_destroy)s(ImGuiInputTextCallbackData_ImGuiInputTextCallbackData)s(ImGuiInputTextCallbackData_destroy)s(ImGuiInputTextCallbackData_DeleteChars)s(ImGuiInputTextCallbackData_InsertChars)s(ImGuiInputTextCallbackData_SelectAll)s(ImGuiInputTextCallbackData_ClearSelection)s(ImGuiInputTextCallbackData_HasSelection)s(ImGuiWindowClass_ImGuiWindowClass)s(ImGuiWindowClass_destroy)s(ImGuiPayload_ImGuiPayload)s(ImGuiPayload_destroy)s(ImGuiPayload_Clear)s(ImGuiPayload_IsDataType)s(ImGuiPayload_IsPreview)s(ImGuiPayload_IsDelivery)s(ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs)s(ImGuiTableColumnSortSpecs_destroy)s(ImGuiTableSortSpecs_ImGuiTableSortSpecs)s(ImGuiTableSortSpecs_destroy)s(ImGuiOnceUponAFrame_ImGuiOnceUponAFrame)s(ImGuiOnceUponAFrame_destroy)s(ImGuiTextFilter_ImGuiTextFilter)s(ImGuiTextFilter_destroy)s(ImGuiTextFilter_Draw)s(ImGuiTextFilter_PassFilter)s(ImGuiTextFilter_Build)s(ImGuiTextFilter_Clear)s(ImGuiTextFilter_IsActive)s(ImGuiTextRange_ImGuiTextRange_Nil)s(ImGuiTextRange_destroy)s(ImGuiTextRange_ImGuiTextRange_Str)s(ImGuiTextRange_empty)s(ImGuiTextRange_split)s(ImGuiTextBuffer_ImGuiTextBuffer)s(ImGuiTextBuffer_destroy)s(ImGuiTextBuffer_begin)s(ImGuiTextBuffer_end)s(ImGuiTextBuffer_size)s(ImGuiTextBuffer_empty)s(ImGuiTextBuffer_clear)s(ImGuiTextBuffer_reserve)s(ImGuiTextBuffer_c_str)s(ImGuiTextBuffer_append)s(ImGuiTextBuffer_appendfv)s(ImGuiStoragePair_ImGuiStoragePair_Int)s(ImGuiStoragePair_destroy)s(ImGuiStoragePair_ImGuiStoragePair_Float)s(ImGuiStoragePair_ImGuiStoragePair_Ptr)s(ImGuiStorage_Clear)s(ImGuiStorage_GetInt)s(ImGuiStorage_SetInt)s(ImGuiStorage_GetBool)s(ImGuiStorage_SetBool)s(ImGuiStorage_GetFloat)s(ImGuiStorage_SetFloat)s(ImGuiStorage_GetVoidPtr)s(ImGuiStorage_SetVoidPtr)s(ImGuiStorage_GetIntRef)s(ImGuiStorage_GetBoolRef)s(ImGuiStorage_GetFloatRef)s(ImGuiStorage_GetVoidPtrRef)s(ImGuiStorage_SetAllInt)s(ImGuiStorage_BuildSortByKey)s(ImGuiListClipper_ImGuiListClipper)s(ImGuiListClipper_destroy)s(ImGuiListClipper_Begin)s(ImGuiListClipper_End)s(ImGuiListClipper_Step)s(ImGuiListClipper_ForceDisplayRangeByIndices)s(ImColor_ImColor_Nil)s(ImColor_destroy)s(ImColor_ImColor_Float)s(ImColor_ImColor_Vec4)s(ImColor_ImColor_Int)s(ImColor_ImColor_U32)s(ImColor_SetHSV)s(ImColor_HSV)s(ImDrawCmd_ImDrawCmd)s(ImDrawCmd_destroy)s(ImDrawCmd_GetTexID)s(ImDrawListSplitter_ImDrawListSplitter)s(ImDrawListSplitter_destroy)s(ImDrawListSplitter_Clear)s(ImDrawListSplitter_ClearFreeMemory)s(ImDrawListSplitter_Split)s(ImDrawListSplitter_Merge)s(ImDrawListSplitter_SetCurrentChannel)s(ImDrawList_ImDrawList)s(ImDrawList_destroy)s(ImDrawList_PushClipRect)s(ImDrawList_PushClipRectFullScreen)s(ImDrawList_PopClipRect)s(ImDrawList_PushTextureID)s(ImDrawList_PopTextureID)s(ImDrawList_GetClipRectMin)s(ImDrawList_GetClipRectMax)s(ImDrawList_AddLine)s(ImDrawList_AddRect)s(ImDrawList_AddRectFilled)s(ImDrawList_AddRectFilledMultiColor)s(ImDrawList_AddQuad)s(ImDrawList_AddQuadFilled)s(ImDrawList_AddTriangle)s(ImDrawList_AddTriangleFilled)s(ImDrawList_AddCircle)s(ImDrawList_AddCircleFilled)s(ImDrawList_AddNgon)s(ImDrawList_AddNgonFilled)s(ImDrawList_AddText_Vec2)s(ImDrawList_AddText_FontPtr)s(ImDrawList_AddPolyline)s(ImDrawList_AddConvexPolyFilled)s(ImDrawList_AddBezierCubic)s(ImDrawList_AddBezierQuadratic)s(ImDrawList_AddImage)s(ImDrawList_AddImageQuad)s(ImDrawList_AddImageRounded)s(ImDrawList_PathClear)s(ImDrawList_PathLineTo)s(ImDrawList_PathLineToMergeDuplicate)s(ImDrawList_PathFillConvex)s(ImDrawList_PathStroke)s(ImDrawList_PathArcTo)s(ImDrawList_PathArcToFast)s(ImDrawList_PathBezierCubicCurveTo)s(ImDrawList_PathBezierQuadraticCurveTo)s(ImDrawList_PathRect)s(ImDrawList_AddCallback)s(ImDrawList_AddDrawCmd)s(ImDrawList_CloneOutput)s(ImDrawList_ChannelsSplit)s(ImDrawList_ChannelsMerge)s(ImDrawList_ChannelsSetCurrent)s(ImDrawList_PrimReserve)s(ImDrawList_PrimUnreserve)s(ImDrawList_PrimRect)s(ImDrawList_PrimRectUV)s(ImDrawList_PrimQuadUV)s(ImDrawList_PrimWriteVtx)s(ImDrawList_PrimWriteIdx)s(ImDrawList_PrimVtx)s(ImDrawList__ResetForNewFrame)s(ImDrawList__ClearFreeMemory)s(ImDrawList__PopUnusedDrawCmd)s(ImDrawList__TryMergeDrawCmds)s(ImDrawList__OnChangedClipRect)s(ImDrawList__OnChangedTextureID)s(ImDrawList__OnChangedVtxOffset)s(ImDrawList__CalcCircleAutoSegmentCount)s(ImDrawList__PathArcToFastEx)s(ImDrawList__PathArcToN)s(ImDrawData_ImDrawData)s(ImDrawData_destroy)s(ImDrawData_Clear)s(ImDrawData_DeIndexAllBuffers)s(ImDrawData_ScaleClipRects)s(ImFontConfig_ImFontConfig)s(ImFontConfig_destroy)s(ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder)s(ImFontGlyphRangesBuilder_destroy)s(ImFontGlyphRangesBuilder_Clear)s(ImFontGlyphRangesBuilder_GetBit)s(ImFontGlyphRangesBuilder_SetBit)s(ImFontGlyphRangesBuilder_AddChar)s(ImFontGlyphRangesBuilder_AddText)s(ImFontGlyphRangesBuilder_AddRanges)s(ImFontGlyphRangesBuilder_BuildRanges)s(ImFontAtlasCustomRect_ImFontAtlasCustomRect)s(ImFontAtlasCustomRect_destroy)s(ImFontAtlasCustomRect_IsPacked)s(ImFontAtlas_ImFontAtlas)s(ImFontAtlas_destroy)s(ImFontAtlas_AddFont)s(ImFontAtlas_AddFontDefault)s(ImFontAtlas_AddFontFromFileTTF)s(ImFontAtlas_AddFontFromMemoryTTF)s(ImFontAtlas_AddFontFromMemoryCompressedTTF)s(ImFontAtlas_AddFontFromMemoryCompressedBase85TTF)s(ImFontAtlas_ClearInputData)s(ImFontAtlas_ClearTexData)s(ImFontAtlas_ClearFonts)s(ImFontAtlas_Clear)s(ImFontAtlas_Build)s(ImFontAtlas_GetTexDataAsAlpha8)s(ImFontAtlas_GetTexDataAsRGBA32)s(ImFontAtlas_IsBuilt)s(ImFontAtlas_SetTexID)s(ImFontAtlas_GetGlyphRangesDefault)s(ImFontAtlas_GetGlyphRangesGreek)s(ImFontAtlas_GetGlyphRangesKorean)s(ImFontAtlas_GetGlyphRangesJapanese)s(ImFontAtlas_GetGlyphRangesChineseFull)s(ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon)s(ImFontAtlas_GetGlyphRangesCyrillic)s(ImFontAtlas_GetGlyphRangesThai)s(ImFontAtlas_GetGlyphRangesVietnamese)s(ImFontAtlas_AddCustomRectRegular)s(ImFontAtlas_AddCustomRectFontGlyph)s(ImFontAtlas_GetCustomRectByIndex)s(ImFontAtlas_CalcCustomRectUV)s(ImFontAtlas_GetMouseCursorTexData)s(ImFont_ImFont)s(ImFont_destroy)s(ImFont_FindGlyph)s(ImFont_FindGlyphNoFallback)s(ImFont_GetCharAdvance)s(ImFont_IsLoaded)s(ImFont_GetDebugName)s(ImFont_CalcTextSizeA)s(ImFont_CalcWordWrapPositionA)s(ImFont_RenderChar)s(ImFont_RenderText)s(ImFont_BuildLookupTable)s(ImFont_ClearOutputData)s(ImFont_GrowIndex)s(ImFont_AddGlyph)s(ImFont_AddRemapChar)s(ImFont_SetGlyphVisible)s(ImFont_IsGlyphRangeUnused)s(ImGuiViewport_ImGuiViewport)s(ImGuiViewport_destroy)s(ImGuiViewport_GetCenter)s(ImGuiViewport_GetWorkCenter)s(ImGuiPlatformIO_ImGuiPlatformIO)s(ImGuiPlatformIO_destroy)s(ImGuiPlatformMonitor_ImGuiPlatformMonitor)s(ImGuiPlatformMonitor_destroy)s(ImGuiPlatformImeData_ImGuiPlatformImeData)s(ImGuiPlatformImeData_destroy)s(igGetKeyIndex)s(igImHashData)s(igImHashStr)s(igImQsort)s(igImAlphaBlendColors)s(igImIsPowerOfTwo_Int)s(igImIsPowerOfTwo_U64)s(igImUpperPowerOfTwo)s(igImStricmp)s(igImStrnicmp)s(igImStrncpy)s(igImStrdup)s(igImStrdupcpy)s(igImStrchrRange)s(igImStrlenW)s(igImStreolRange)s(igImStrbolW)s(igImStristr)s(igImStrTrimBlanks)s(igImStrSkipBlank)s(igImToUpper)s(igImCharIsBlankA)s(igImCharIsBlankW)s(igImFormatString)s(igImFormatStringV)s(igImFormatStringToTempBuffer)s(igImFormatStringToTempBufferV)s(igImParseFormatFindStart)s(igImParseFormatFindEnd)s(igImParseFormatTrimDecorations)s(igImParseFormatSanitizeForPrinting)s(igImParseFormatSanitizeForScanning)s(igImParseFormatPrecision)s(igImTextCharToUtf8)s(igImTextStrToUtf8)s(igImTextCharFromUtf8)s(igImTextStrFromUtf8)s(igImTextCountCharsFromUtf8)s(igImTextCountUtf8BytesFromChar)s(igImTextCountUtf8BytesFromStr)s(igImFileOpen)s(igImFileClose)s(igImFileGetSize)s(igImFileRead)s(igImFileWrite)s(igImFileLoadToMemory)s(igImPow_Float)s(igImPow_double)s(igImLog_Float)s(igImLog_double)s(igImAbs_Int)s(igImAbs_Float)s(igImAbs_double)s(igImSign_Float)s(igImSign_double)s(igImRsqrt_Float)s(igImRsqrt_double)s(igImMin)s(igImMax)s(igImClamp)s(igImLerp_Vec2Float)s(igImLerp_Vec2Vec2)s(igImLerp_Vec4)s(igImSaturate)s(igImLengthSqr_Vec2)s(igImLengthSqr_Vec4)s(igImInvLength)s(igImFloor_Float)s(igImFloorSigned_Float)s(igImFloor_Vec2)s(igImFloorSigned_Vec2)s(igImModPositive)s(igImDot)s(igImRotate)s(igImLinearSweep)s(igImMul)s(igImIsFloatAboveGuaranteedIntegerPrecision)s(igImBezierCubicCalc)s(igImBezierCubicClosestPoint)s(igImBezierCubicClosestPointCasteljau)s(igImBezierQuadraticCalc)s(igImLineClosestPoint)s(igImTriangleContainsPoint)s(igImTriangleClosestPoint)s(igImTriangleBarycentricCoords)s(igImTriangleArea)s(igImGetDirQuadrantFromDelta)s(ImRect_ImRect_Nil)s(ImRect_destroy)s(ImRect_ImRect_Vec2)s(ImRect_ImRect_Vec4)s(ImRect_ImRect_Float)s(ImRect_GetCenter)s(ImRect_GetSize)s(ImRect_GetWidth)s(ImRect_GetHeight)s(ImRect_GetArea)s(ImRect_GetTL)s(ImRect_GetTR)s(ImRect_GetBL)s(ImRect_GetBR)s(ImRect_Contains_Vec2)s(ImRect_Contains_Rect)s(ImRect_Overlaps)s(ImRect_Add_Vec2)s(ImRect_Add_Rect)s(ImRect_Expand_Float)s(ImRect_Expand_Vec2)s(ImRect_Translate)s(ImRect_TranslateX)s(ImRect_TranslateY)s(ImRect_ClipWith)s(ImRect_ClipWithFull)s(ImRect_Floor)s(ImRect_IsInverted)s(ImRect_ToVec4)s(igImBitArrayTestBit)s(igImBitArrayClearBit)s(igImBitArraySetBit)s(igImBitArraySetBitRange)s(ImGuiTextIndex_clear)s(ImGuiTextIndex_size)s(ImGuiTextIndex_get_line_begin)s(ImGuiTextIndex_get_line_end)s(ImGuiTextIndex_append)s(ImDrawListSharedData_ImDrawListSharedData)s(ImDrawListSharedData_destroy)s(ImDrawListSharedData_SetCircleTessellationMaxError)s(ImDrawDataBuilder_Clear)s(ImDrawDataBuilder_ClearFreeMemory)s(ImDrawDataBuilder_GetDrawListCount)s(ImDrawDataBuilder_FlattenIntoSingleLayer)s(ImGuiStyleMod_ImGuiStyleMod_Int)s(ImGuiStyleMod_destroy)s(ImGuiStyleMod_ImGuiStyleMod_Float)s(ImGuiStyleMod_ImGuiStyleMod_Vec2)s(ImGuiComboPreviewData_ImGuiComboPreviewData)s(ImGuiComboPreviewData_destroy)s(ImGuiMenuColumns_ImGuiMenuColumns)s(ImGuiMenuColumns_destroy)s(ImGuiMenuColumns_Update)s(ImGuiMenuColumns_DeclColumns)s(ImGuiMenuColumns_CalcNextTotalWidth)s(ImGuiInputTextState_ImGuiInputTextState)s(ImGuiInputTextState_destroy)s(ImGuiInputTextState_ClearText)s(ImGuiInputTextState_ClearFreeMemory)s(ImGuiInputTextState_GetUndoAvailCount)s(ImGuiInputTextState_GetRedoAvailCount)s(ImGuiInputTextState_OnKeyPressed)s(ImGuiInputTextState_CursorAnimReset)s(ImGuiInputTextState_CursorClamp)s(ImGuiInputTextState_HasSelection)s(ImGuiInputTextState_ClearSelection)s(ImGuiInputTextState_GetCursorPos)s(ImGuiInputTextState_GetSelectionStart)s(ImGuiInputTextState_GetSelectionEnd)s(ImGuiInputTextState_SelectAll)s(ImGuiPopupData_ImGuiPopupData)s(ImGuiPopupData_destroy)s(ImGuiNextWindowData_ImGuiNextWindowData)s(ImGuiNextWindowData_destroy)s(ImGuiNextWindowData_ClearFlags)s(ImGuiNextItemData_ImGuiNextItemData)s(ImGuiNextItemData_destroy)s(ImGuiNextItemData_ClearFlags)s(ImGuiLastItemData_ImGuiLastItemData)s(ImGuiLastItemData_destroy)s(ImGuiStackSizes_ImGuiStackSizes)s(ImGuiStackSizes_destroy)s(ImGuiStackSizes_SetToCurrentState)s(ImGuiStackSizes_CompareWithCurrentState)s(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr)s(ImGuiPtrOrIndex_destroy)s(ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int)s(ImGuiInputEvent_ImGuiInputEvent)s(ImGuiInputEvent_destroy)s(ImGuiKeyRoutingData_ImGuiKeyRoutingData)s(ImGuiKeyRoutingData_destroy)s(ImGuiKeyRoutingTable_ImGuiKeyRoutingTable)s(ImGuiKeyRoutingTable_destroy)s(ImGuiKeyRoutingTable_Clear)s(ImGuiKeyOwnerData_ImGuiKeyOwnerData)s(ImGuiKeyOwnerData_destroy)s(ImGuiListClipperRange_FromIndices)s(ImGuiListClipperRange_FromPositions)s(ImGuiListClipperData_ImGuiListClipperData)s(ImGuiListClipperData_destroy)s(ImGuiListClipperData_Reset)s(ImGuiNavItemData_ImGuiNavItemData)s(ImGuiNavItemData_destroy)s(ImGuiNavItemData_Clear)s(ImGuiOldColumnData_ImGuiOldColumnData)s(ImGuiOldColumnData_destroy)s(ImGuiOldColumns_ImGuiOldColumns)s(ImGuiOldColumns_destroy)s(ImGuiDockNode_ImGuiDockNode)s(ImGuiDockNode_destroy)s(ImGuiDockNode_IsRootNode)s(ImGuiDockNode_IsDockSpace)s(ImGuiDockNode_IsFloatingNode)s(ImGuiDockNode_IsCentralNode)s(ImGuiDockNode_IsHiddenTabBar)s(ImGuiDockNode_IsNoTabBar)s(ImGuiDockNode_IsSplitNode)s(ImGuiDockNode_IsLeafNode)s(ImGuiDockNode_IsEmpty)s(ImGuiDockNode_Rect)s(ImGuiDockNode_SetLocalFlags)s(ImGuiDockNode_UpdateMergedFlags)s(ImGuiDockContext_ImGuiDockContext)s(ImGuiDockContext_destroy)s(ImGuiViewportP_ImGuiViewportP)s(ImGuiViewportP_destroy)s(ImGuiViewportP_ClearRequestFlags)s(ImGuiViewportP_CalcWorkRectPos)s(ImGuiViewportP_CalcWorkRectSize)s(ImGuiViewportP_UpdateWorkRect)s(ImGuiViewportP_GetMainRect)s(ImGuiViewportP_GetWorkRect)s(ImGuiViewportP_GetBuildWorkRect)s(ImGuiWindowSettings_ImGuiWindowSettings)s(ImGuiWindowSettings_destroy)s(ImGuiWindowSettings_GetName)s(ImGuiSettingsHandler_ImGuiSettingsHandler)s(ImGuiSettingsHandler_destroy)s(ImGuiMetricsConfig_ImGuiMetricsConfig)s(ImGuiMetricsConfig_destroy)s(ImGuiStackLevelInfo_ImGuiStackLevelInfo)s(ImGuiStackLevelInfo_destroy)s(ImGuiStackTool_ImGuiStackTool)s(ImGuiStackTool_destroy)s(ImGuiContextHook_ImGuiContextHook)s(ImGuiContextHook_destroy)s(ImGuiContext_ImGuiContext)s(ImGuiContext_destroy)s(ImGuiWindow_ImGuiWindow)s(ImGuiWindow_destroy)s(ImGuiWindow_GetID_Str)s(ImGuiWindow_GetID_Ptr)s(ImGuiWindow_GetID_Int)s(ImGuiWindow_GetIDFromRectangle)s(ImGuiWindow_Rect)s(ImGuiWindow_CalcFontSize)s(ImGuiWindow_TitleBarHeight)s(ImGuiWindow_TitleBarRect)s(ImGuiWindow_MenuBarHeight)s(ImGuiWindow_MenuBarRect)s(ImGuiTabItem_ImGuiTabItem)s(ImGuiTabItem_destroy)s(ImGuiTabBar_ImGuiTabBar)s(ImGuiTabBar_destroy)s(ImGuiTabBar_GetTabOrder)s(ImGuiTabBar_GetTabName)s(ImGuiTableColumn_ImGuiTableColumn)s(ImGuiTableColumn_destroy)s(ImGuiTableInstanceData_ImGuiTableInstanceData)s(ImGuiTableInstanceData_destroy)s(ImGuiTable_ImGuiTable)s(ImGuiTable_destroy)s(ImGuiTableTempData_ImGuiTableTempData)s(ImGuiTableTempData_destroy)s(ImGuiTableColumnSettings_ImGuiTableColumnSettings)s(ImGuiTableColumnSettings_destroy)s(ImGuiTableSettings_ImGuiTableSettings)s(ImGuiTableSettings_destroy)s(ImGuiTableSettings_GetColumnSettings)s(igGetCurrentWindowRead)s(igGetCurrentWindow)s(igFindWindowByID)s(igFindWindowByName)s(igUpdateWindowParentAndRootLinks)s(igCalcWindowNextAutoFitSize)s(igIsWindowChildOf)s(igIsWindowWithinBeginStackOf)s(igIsWindowAbove)s(igIsWindowNavFocusable)s(igSetWindowPos_WindowPtr)s(igSetWindowSize_WindowPtr)s(igSetWindowCollapsed_WindowPtr)s(igSetWindowHitTestHole)s(igWindowRectAbsToRel)s(igWindowRectRelToAbs)s(igFocusWindow)s(igFocusTopMostWindowUnderOne)s(igBringWindowToFocusFront)s(igBringWindowToDisplayFront)s(igBringWindowToDisplayBack)s(igBringWindowToDisplayBehind)s(igFindWindowDisplayIndex)s(igFindBottomMostVisibleWindowWithinBeginStack)s(igSetCurrentFont)s(igGetDefaultFont)s(igGetForegroundDrawList_WindowPtr)s(igInitialize)s(igShutdown)s(igUpdateInputEvents)s(igUpdateHoveredWindowAndCaptureFlags)s(igStartMouseMovingWindow)s(igStartMouseMovingWindowOrNode)s(igUpdateMouseMovingWindowNewFrame)s(igUpdateMouseMovingWindowEndFrame)s(igAddContextHook)s(igRemoveContextHook)s(igCallContextHooks)s(igTranslateWindowsInViewport)s(igScaleWindowsInViewport)s(igDestroyPlatformWindow)s(igSetWindowViewport)s(igSetCurrentViewport)s(igGetViewportPlatformMonitor)s(igFindHoveredViewportFromPlatformWindowStack)s(igMarkIniSettingsDirty_Nil)s(igMarkIniSettingsDirty_WindowPtr)s(igClearIniSettings)s(igCreateNewWindowSettings)s(igFindWindowSettings)s(igFindOrCreateWindowSettings)s(igAddSettingsHandler)s(igRemoveSettingsHandler)s(igFindSettingsHandler)s(igSetScrollX_WindowPtr)s(igSetScrollY_WindowPtr)s(igSetScrollFromPosX_WindowPtr)s(igSetScrollFromPosY_WindowPtr)s(igScrollToItem)s(igScrollToRect)s(igScrollToRectEx)s(igScrollToBringRectIntoView)s(igGetItemID)s(igGetItemStatusFlags)s(igGetItemFlags)s(igGetActiveID)s(igGetFocusID)s(igSetActiveID)s(igSetFocusID)s(igClearActiveID)s(igGetHoveredID)s(igSetHoveredID)s(igKeepAliveID)s(igMarkItemEdited)s(igPushOverrideID)s(igGetIDWithSeed)s(igItemSize_Vec2)s(igItemSize_Rect)s(igItemAdd)s(igItemHoverable)s(igIsClippedEx)s(igSetLastItemData)s(igCalcItemSize)s(igCalcWrapWidthForPos)s(igPushMultiItemsWidths)s(igIsItemToggledSelection)s(igGetContentRegionMaxAbs)s(igShrinkWidths)s(igPushItemFlag)s(igPopItemFlag)s(igLogBegin)s(igLogToBuffer)s(igLogRenderedText)s(igLogSetNextTextDecoration)s(igBeginChildEx)s(igOpenPopupEx)s(igClosePopupToLevel)s(igClosePopupsOverWindow)s(igClosePopupsExceptModals)s(igIsPopupOpen_ID)s(igBeginPopupEx)s(igBeginTooltipEx)s(igGetPopupAllowedExtentRect)s(igGetTopMostPopupModal)s(igGetTopMostAndVisiblePopupModal)s(igFindBestWindowPosForPopup)s(igFindBestWindowPosForPopupEx)s(igBeginViewportSideBar)s(igBeginMenuEx)s(igMenuItemEx)s(igBeginComboPopup)s(igBeginComboPreview)s(igEndComboPreview)s(igNavInitWindow)s(igNavInitRequestApplyResult)s(igNavMoveRequestButNoResultYet)s(igNavMoveRequestSubmit)s(igNavMoveRequestForward)s(igNavMoveRequestResolveWithLastItem)s(igNavMoveRequestCancel)s(igNavMoveRequestApplyResult)s(igNavMoveRequestTryWrapping)s(igActivateItem)s(igSetNavWindow)s(igSetNavID)s(igIsNamedKey)s(igIsNamedKeyOrModKey)s(igIsLegacyKey)s(igIsGamepadKey)s(igIsAliasKey)s(igConvertSingleModFlagToKey)s(igGetKeyData)s(igGetKeyChordName)s(igMouseButtonToKey)s(igIsMouseDragPastThreshold)s(igGetKeyVector2d)s(igGetNavTweakPressedAmount)s(igCalcTypematicRepeatAmount)s(igGetTypematicRepeatRate)s(igSetActiveIdUsingAllKeyboardKeys)s(igIsActiveIdUsingNavDir)s(igGetKeyOwner)s(igSetKeyOwner)s(igSetItemKeyOwner)s(igTestKeyOwner)s(igGetKeyOwnerData)s(igIsKeyDown_ID)s(igIsKeyPressed_ID)s(igIsKeyReleased_ID)s(igIsMouseDown_ID)s(igIsMouseClicked_ID)s(igIsMouseReleased_ID)s(igShortcut)s(igSetShortcutRouting)s(igTestShortcutRouting)s(igGetShortcutRoutingData)s(igDockContextInitialize)s(igDockContextShutdown)s(igDockContextClearNodes)s(igDockContextRebuildNodes)s(igDockContextNewFrameUpdateUndocking)s(igDockContextNewFrameUpdateDocking)s(igDockContextEndFrame)s(igDockContextGenNodeID)s(igDockContextQueueDock)s(igDockContextQueueUndockWindow)s(igDockContextQueueUndockNode)s(igDockContextCalcDropPosForDocking)s(igDockContextFindNodeByID)s(igDockNodeBeginAmendTabBar)s(igDockNodeEndAmendTabBar)s(igDockNodeGetRootNode)s(igDockNodeIsInHierarchyOf)s(igDockNodeGetDepth)s(igDockNodeGetWindowMenuButtonId)s(igGetWindowDockNode)s(igGetWindowAlwaysWantOwnTabBar)s(igBeginDocked)s(igBeginDockableDragDropSource)s(igBeginDockableDragDropTarget)s(igSetWindowDock)s(igDockBuilderDockWindow)s(igDockBuilderGetNode)s(igDockBuilderGetCentralNode)s(igDockBuilderAddNode)s(igDockBuilderRemoveNode)s(igDockBuilderRemoveNodeDockedWindows)s(igDockBuilderRemoveNodeChildNodes)s(igDockBuilderSetNodePos)s(igDockBuilderSetNodeSize)s(igDockBuilderSplitNode)s(igDockBuilderCopyDockSpace)s(igDockBuilderCopyNode)s(igDockBuilderCopyWindowSettings)s(igDockBuilderFinish)s(igPushFocusScope)s(igPopFocusScope)s(igGetCurrentFocusScope)s(igIsDragDropActive)s(igBeginDragDropTargetCustom)s(igClearDragDrop)s(igIsDragDropPayloadBeingAccepted)s(igRenderDragDropTargetRect)s(igSetWindowClipRectBeforeSetChannel)s(igBeginColumns)s(igEndColumns)s(igPushColumnClipRect)s(igPushColumnsBackground)s(igPopColumnsBackground)s(igGetColumnsID)s(igFindOrCreateColumns)s(igGetColumnOffsetFromNorm)s(igGetColumnNormFromOffset)s(igTableOpenContextMenu)s(igTableSetColumnWidth)s(igTableSetColumnSortDirection)s(igTableGetHoveredColumn)s(igTableGetHeaderRowHeight)s(igTablePushBackgroundChannel)s(igTablePopBackgroundChannel)s(igGetCurrentTable)s(igTableFindByID)s(igBeginTableEx)s(igTableBeginInitMemory)s(igTableBeginApplyRequests)s(igTableSetupDrawChannels)s(igTableUpdateLayout)s(igTableUpdateBorders)s(igTableUpdateColumnsWeightFromWidth)s(igTableDrawBorders)s(igTableDrawContextMenu)s(igTableBeginContextMenuPopup)s(igTableMergeDrawChannels)s(igTableGetInstanceData)s(igTableSortSpecsSanitize)s(igTableSortSpecsBuild)s(igTableGetColumnNextSortDirection)s(igTableFixColumnSortDirection)s(igTableGetColumnWidthAuto)s(igTableBeginRow)s(igTableEndRow)s(igTableBeginCell)s(igTableEndCell)s(igTableGetCellBgRect)s(igTableGetColumnName_TablePtr)s(igTableGetColumnResizeID)s(igTableGetMaxColumnWidth)s(igTableSetColumnWidthAutoSingle)s(igTableSetColumnWidthAutoAll)s(igTableRemove)s(igTableGcCompactTransientBuffers_TablePtr)s(igTableGcCompactTransientBuffers_TableTempDataPtr)s(igTableGcCompactSettings)s(igTableLoadSettings)s(igTableSaveSettings)s(igTableResetSettings)s(igTableGetBoundSettings)s(igTableSettingsAddSettingsHandler)s(igTableSettingsCreate)s(igTableSettingsFindByID)s(igBeginTabBarEx)s(igTabBarFindTabByID)s(igTabBarFindMostRecentlySelectedTabForActiveWindow)s(igTabBarAddTab)s(igTabBarRemoveTab)s(igTabBarCloseTab)s(igTabBarQueueReorder)s(igTabBarQueueReorderFromMousePos)s(igTabBarProcessReorder)s(igTabItemEx)s(igTabItemCalcSize_Str)s(igTabItemCalcSize_WindowPtr)s(igTabItemBackground)s(igTabItemLabelAndCloseButton)s(igRenderText)s(igRenderTextWrapped)s(igRenderTextClipped)s(igRenderTextClippedEx)s(igRenderTextEllipsis)s(igRenderFrame)s(igRenderFrameBorder)s(igRenderColorRectWithAlphaCheckerboard)s(igRenderNavHighlight)s(igFindRenderedTextEnd)s(igRenderMouseCursor)s(igRenderArrow)s(igRenderBullet)s(igRenderCheckMark)s(igRenderArrowPointingAt)s(igRenderArrowDockMenu)s(igRenderRectFilledRangeH)s(igRenderRectFilledWithHole)s(igCalcRoundingFlagsForRectInRect)s(igTextEx)s(igButtonEx)s(igCloseButton)s(igCollapseButton)s(igArrowButtonEx)s(igScrollbar)s(igScrollbarEx)s(igImageButtonEx)s(igGetWindowScrollbarRect)s(igGetWindowScrollbarID)s(igGetWindowResizeCornerID)s(igGetWindowResizeBorderID)s(igSeparatorEx)s(igCheckboxFlags_S64Ptr)s(igCheckboxFlags_U64Ptr)s(igButtonBehavior)s(igDragBehavior)s(igSliderBehavior)s(igSplitterBehavior)s(igTreeNodeBehavior)s(igTreePushOverrideID)s(igTreeNodeSetOpen)s(igTreeNodeUpdateNextOpen)s(igDataTypeGetInfo)s(igDataTypeFormatString)s(igDataTypeApplyOp)s(igDataTypeApplyFromText)s(igDataTypeCompare)s(igDataTypeClamp)s(igInputTextEx)s(igTempInputText)s(igTempInputScalar)s(igTempInputIsActive)s(igGetInputTextState)s(igColorTooltip)s(igColorEditOptionsPopup)s(igColorPickerOptionsPopup)s(igPlotEx)s(igShadeVertsLinearColorGradientKeepAlpha)s(igShadeVertsLinearUV)s(igGcCompactTransientMiscBuffers)s(igGcCompactTransientWindowBuffers)s(igGcAwakeTransientWindowBuffers)s(igDebugLog)s(igDebugLogV)s(igErrorCheckEndFrameRecover)s(igErrorCheckEndWindowRecover)s(igErrorCheckUsingSetCursorPosToExtendParentBoundaries)s(igDebugLocateItem)s(igDebugLocateItemOnHover)s(igDebugLocateItemResolveWithLastItem)s(igDebugDrawItemRect)s(igDebugStartItemPicker)s(igShowFontAtlas)s(igDebugHookIdInfo)s(igDebugNodeColumns)s(igDebugNodeDockNode)s(igDebugNodeDrawList)s(igDebugNodeDrawCmdShowMeshAndBoundingBox)s(igDebugNodeFont)s(igDebugNodeFontGlyph)s(igDebugNodeStorage)s(igDebugNodeTabBar)s(igDebugNodeTable)s(igDebugNodeTableSettings)s(igDebugNodeInputTextState)s(igDebugNodeWindow)s(igDebugNodeWindowSettings)s(igDebugNodeWindowsList)s(igDebugNodeWindowsListByBeginStackParent)s(igDebugNodeViewport)s(igDebugRenderViewportThumbnail)s(igIsKeyPressedMap)s(igImFontAtlasGetBuilderForStbTruetype)s(igImFontAtlasBuildInit)s(igImFontAtlasBuildSetupFont)s(igImFontAtlasBuildPackCustomRects)s(igImFontAtlasBuildFinish)s(igImFontAtlasBuildRender8bppRectFromString)s(igImFontAtlasBuildRender32bppRectFromString)s(igImFontAtlasBuildMultiplyCalcLookupTable)s(igImFontAtlasBuildMultiplyRectAlpha8)s(igLogText)s(ImGuiTextBuffer_appendf)s(igGET_FLT_MAX)s(igGET_FLT_MIN)
}
#endif
#undef TYPE
#undef f
#undef g
#undef i
#undef d
#undef s
